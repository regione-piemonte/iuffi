package it.csi.iuffi.iuffiweb.integration.ws.sigop.sigopserv;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.1.6 2017-03-07T16:14:32.091+01:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "sigopserv", wsdlLocation = "file:sigop/sigop.wsdl", targetNamespace = "http://ws.business.sigop.csi.it/")
public class Sigopserv extends Service
{

  public final static URL   WSDL_LOCATION;

  public final static QName SERVICE       = new QName(
      "http://ws.business.sigop.csi.it/", "sigopserv");
  public final static QName SigopservPort = new QName(
      "http://ws.business.sigop.csi.it/", "sigopservPort");
  static
  {
    URL url = null;
    try
    {
      url = new URL("file:sigop/sigop.wsdl");
    }
    catch (MalformedURLException e)
    {
      java.util.logging.Logger.getLogger(Sigopserv.class.getName())
          .log(java.util.logging.Level.INFO,
              "Can not initialize the default wsdl from {0}",
              "file:sigop/sigop.wsdl");
    }
    WSDL_LOCATION = url;
  }

  public Sigopserv(URL wsdlLocation)
  {
    super(wsdlLocation, SERVICE);
  }

  public Sigopserv(URL wsdlLocation, QName serviceName)
  {
    super(wsdlLocation, serviceName);
  }

  public Sigopserv()
  {
    super(WSDL_LOCATION, SERVICE);
  }

  public Sigopserv(WebServiceFeature... features)
  {
    super(WSDL_LOCATION, SERVICE, features);
  }

  public Sigopserv(URL wsdlLocation, WebServiceFeature... features)
  {
    super(wsdlLocation, SERVICE, features);
  }

  public Sigopserv(URL wsdlLocation, QName serviceName,
      WebServiceFeature... features)
  {
    super(wsdlLocation, serviceName, features);
  }

  /**
   *
   * @return returns ISigopservWS
   */
  @WebEndpoint(name = "sigopservPort")
  public ISigopservWS getSigopservPort()
  {
    return super.getPort(SigopservPort, ISigopservWS.class);
  }

  /**
   * 
   * @param features
   *          A list of {@link javax.xml.ws.WebServiceFeature} to configure on
   *          the proxy. Supported features not in the <code>features</code>
   *          parameter will have their default values.
   * @return returns ISigopservWS
   */
  @WebEndpoint(name = "sigopservPort")
  public ISigopservWS getSigopservPort(WebServiceFeature... features)
  {
    return super.getPort(SigopservPort, ISigopservWS.class, features);
  }

}
