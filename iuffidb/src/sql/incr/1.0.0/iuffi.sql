set define off;

declare
  cursor curTable is SELECT * from tabs;
  cursor curSeq is SELECT * from user_sequences;
  cursor curType is select * from user_types order by TYPECODE;
begin
  for recTable in curTable loop
    begin
      EXECUTE IMMEDIATE ('drop table '||recTable.Table_Name||' cascade constraints');
    EXCEPTION
      when OTHERS THEN
        null;
    end;    
  end loop;
  
  for recSeq in curSeq loop
    begin
      EXECUTE IMMEDIATE ('drop sequence '||recSeq.Sequence_Name);
    EXCEPTION
      when OTHERS THEN
        null;
    end;    
  end loop;
  
  for recType in curType loop
    begin
      EXECUTE IMMEDIATE ('drop type '||recType.Type_Name);
    EXCEPTION
      when OTHERS THEN
        null;
    end;    
  end loop;
end;
/

CREATE OR REPLACE SYNONYM SMRCOMUNE_V_AMM_COMPETENZA FOR SMRCOMUNE.SMRCOMUNE_V_AMM_COMPETENZA;


CREATE OR REPLACE SYNONYM SMRCOMUNE_V_AMM_COMP_RECAPITI FOR SMRCOMUNE.SMRCOMUNE_V_AMM_COMP_RECAPITI;


CREATE OR REPLACE SYNONYM SMRCOMUNE_V_TECNICO FOR SMRCOMUNE.SMRCOMUNE_V_TECNICO;


CREATE OR REPLACE SYNONYM DOQUIAGRI_V_DOCUMENTO FOR DOQUIAGRI.DOQUIAGRI_V_DOCUMENTO;


CREATE OR REPLACE SYNONYM DOQUIAGRI_V_TIPO_DOC FOR DOQUIAGRI.DOQUIAGRI_V_TIPO_DOC;


CREATE OR REPLACE SYNONYM PACK_CONTROLLI_ANAG FOR SMRGAA.PACK_CONTROLLI;


CREATE OR REPLACE SYNONYM SMRGAA_D_TIPO_CONTROLLO_PRELIM FOR SMRGAA.SMRGAA_D_TIPO_CONTROLLO_PRELIM;


CREATE OR REPLACE SYNONYM SMRGAA_R_CONTR_PRELIMINAR_AZIE FOR SMRGAA.SMRGAA_R_CONTR_PRELIMINAR_AZIE;


CREATE OR REPLACE SYNONYM SMRGAA_T_AZIENDE_CONTR_PRELIMI FOR SMRGAA.SMRGAA_T_AZIENDE_CONTR_PRELIMI;


CREATE OR REPLACE SYNONYM SMRGAA_V_ACCESSO_PIANO_GRAFICO FOR SMRGAA.SMRGAA_V_ACCESSO_PIANO_GRAFICO;


CREATE OR REPLACE SYNONYM SMRGAA_V_AGRICOLTORE_ATTIVO FOR SMRGAA.SMRGAA_V_AGRICOLTORE_ATTIVO;


CREATE OR REPLACE SYNONYM SMRGAA_V_ALLEVAMENTI FOR SMRGAA.SMRGAA_V_ALLEVAMENTI;


CREATE OR REPLACE SYNONYM SMRGAA_V_BANCA_SPORTELLO FOR SMRGAA.SMRGAA_V_BANCA_SPORTELLO;


CREATE OR REPLACE SYNONYM SMRGAA_V_CONDUZIONE_UTILIZZO FOR SMRGAA.SMRGAA_V_CONDUZIONE_UTILIZZO;


CREATE OR REPLACE SYNONYM SMRGAA_V_CONTO_CORRENTE FOR SMRGAA.SMRGAA_V_CONTO_CORRENTE;


CREATE OR REPLACE SYNONYM SMRGAA_V_DATI_AMMINISTRATIVI FOR SMRGAA.SMRGAA_V_DATI_AMMINISTRATIVI;


CREATE OR REPLACE SYNONYM SMRGAA_V_DATI_ANAGRAFICI FOR SMRGAA.SMRGAA_V_DATI_ANAGRAFICI;


CREATE OR REPLACE SYNONYM SMRGAA_V_DATI_DELEGA FOR SMRGAA.SMRGAA_V_DATI_DELEGA;


CREATE OR REPLACE SYNONYM SMRGAA_V_DECO_ALLEVAMENTI FOR SMRGAA.SMRGAA_V_DECO_ALLEVAMENTI;


CREATE OR REPLACE SYNONYM SMRGAA_V_DICH_CONSISTENZA FOR SMRGAA.SMRGAA_V_DICH_CONSISTENZA;


CREATE OR REPLACE SYNONYM SMRGAA_V_ELENCO_SOCI FOR SMRGAA.SMRGAA_V_ELENCO_SOCI;


CREATE OR REPLACE SYNONYM SMRGAA_V_EVENTO_PARTICELLA FOR SMRGAA_RW.SMRGAA_V_EVENTO_PARTICELLA;


CREATE OR REPLACE SYNONYM SMRGAA_V_FABBRICATI FOR SMRGAA.SMRGAA_V_FABBRICATI;


CREATE OR REPLACE SYNONYM SMRGAA_V_FOGLIO_AREA FOR SMRGAA.SMRGAA_V_FOGLIO_AREA;


CREATE OR REPLACE SYNONYM SMRGAA_V_INDICATORI_AZIENDA FOR SMRGAA.SMRGAA_V_INDICATORI_AZIENDA;


CREATE OR REPLACE SYNONYM SMRGAA_V_MACCHINE FOR SMRGAA.SMRGAA_V_MACCHINE;


CREATE OR REPLACE SYNONYM SMRGAA_V_MATRICE FOR SMRGAA.SMRGAA_V_MATRICE;


CREATE OR REPLACE SYNONYM SMRGAA_V_PARTICELLA_AREA FOR SMRGAA.SMRGAA_V_PARTICELLA_AREA;


CREATE OR REPLACE SYNONYM SMRGAA_V_PARTICELLA_CERTIFICAT FOR SMRGAA.SMRGAA_V_PARTICELLA_CERTIFICAT;


CREATE OR REPLACE SYNONYM SMRGAA_V_REGISTRO_VINCOLI FOR SMRGAA.SMRGAA_V_REGISTRO_VINCOLI;


CREATE OR REPLACE SYNONYM SMRGAA_V_SOGGETTI_COLLEGATI FOR SMRGAA.SMRGAA_V_SOGGETTI_COLLEGATI;


CREATE OR REPLACE SYNONYM SMRGAA_V_STORICO_PARTICELLA FOR SMRGAA.SMRGAA_V_STORICO_PARTICELLA;


CREATE OR REPLACE SYNONYM SMRGAA_V_TIPOLOGIA_AZIENDA FOR SMRGAA.SMRGAA_V_TIPOLOGIA_AZIENDA;


CREATE OR REPLACE SYNONYM SMRGAA_V_UTE FOR SMRGAA.SMRGAA_V_UTE;


CREATE OR REPLACE SYNONYM SMRGAA_V_UTENTE_CONFLITTO FOR SMRGAA.SMRGAA_V_UTENTE_CONFLITTO;


CREATE TABLE IUF_C_KIWI
(
  EXT_ID_AZIENDA                  NUMBER(10),
  EXT_ID_DICHIARAZIONE_CONSISTEN  NUMBER(10),
  DATA                            DATE,
  SUPERFICIE_UTILIZZATA           NUMBER(20,4),
  EXT_ID_PARTICELLA               NUMBER(10),
  EXT_ID_CATALOGO_MATRICE         NUMBER(10),
  FLAG_ANTE2008                   VARCHAR2(1 BYTE),
  EXT_ID_DICHIARAZIONE_ANTE2008   NUMBER(10),
  EXT_ID_TITOLO_POSSESSO          NUMBER(4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_C_QUERY_FILTRO
(
  ISTRUZIONE_SQL_FILTRO  CLOB                   NOT NULL,
  DESCRIZIONE_FILTRO     VARCHAR2(4000 BYTE)    NOT NULL
)
LOB (ISTRUZIONE_SQL_FILTRO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_ANNO_EXPOST
(
  ID_ANNO_EXPOST  NUMBER(4)                     NOT NULL,
  VALORE          NUMBER(2)                     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_AZIONE
(
  ID_AZIONE  NUMBER(4)                          NOT NULL,
  CODICE     VARCHAR2(20 BYTE)                  NOT NULL,
  LABEL      VARCHAR2(100 BYTE)                 NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_CANALE_VENDITA
(
  ID_CANALE_VENDITA     NUMBER(4)               NOT NULL,
  DESCRIZIONE           VARCHAR2(100 BYTE)      NOT NULL,
  DATA_INIZIO_VALIDITA  DATE                    NOT NULL,
  DATA_FINE_VALIDITA    DATE,
  ORDINAMENTO           NUMBER(2)               NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_CATEGORIA_ANIMALE
(
  EXT_ID_CATEGORIA_ANIMALE   NUMBER(4)          NOT NULL,
  PESO_VIVO_MIN              NUMBER(5,1),
  PESO_VIVO_MEDIO            NUMBER(5,1)        NOT NULL,
  PESO_VIVO_MAX              NUMBER(5,1),
  GIORNATE_LAVORATIVE_MIN    NUMBER(5,2),
  GIORNATE_LAVORATIVE_MEDIE  NUMBER(5,2)        NOT NULL,
  GIORNATE_LAVORATIVE_MAX    NUMBER(5,2),
  CONSUMO_ANNUO_UF           NUMBER(5),
  NUMERO_MAX_ANIMALI_PER_HA  NUMBER(5,2),
  AGEA_COD                   VARCHAR2(5 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_CATEGORIA_ANIMALE.EXT_ID_CATEGORIA_ANIMALE IS 'puntamento a SMRGAA_V_ALLEVAMENTI.id_categoria_animale';

COMMENT ON COLUMN IUF_D_CATEGORIA_ANIMALE.PESO_VIVO_MIN IS 'Espresso in Kg si riferisce al peso vivo minimo nell''ambito della categoria animale ed e'' espresso nella unita'' di misura della specie';

COMMENT ON COLUMN IUF_D_CATEGORIA_ANIMALE.PESO_VIVO_MEDIO IS 'Espresso in Kg si riferisce al peso vivo medio nell''ambito della categoria animale ed e'' espresso nella unita'' di misura della specie';

COMMENT ON COLUMN IUF_D_CATEGORIA_ANIMALE.PESO_VIVO_MAX IS 'Espresso in Kg si riferisce al peso vivo massimo nell''ambito della categoria animale ed e'' espresso nella unita'' di misura della specie';

COMMENT ON COLUMN IUF_D_CATEGORIA_ANIMALE.GIORNATE_LAVORATIVE_MIN IS 'Rappresenta i giorni lavorati minimi nell''anno per la conduzione della categoria animale';

COMMENT ON COLUMN IUF_D_CATEGORIA_ANIMALE.GIORNATE_LAVORATIVE_MEDIE IS 'Rappresenta i giorni lavorati medi nell''anno per la conduzione della categoria animale';

COMMENT ON COLUMN IUF_D_CATEGORIA_ANIMALE.GIORNATE_LAVORATIVE_MAX IS 'Rappresenta i giorni lavorati massimi nell''anno per la conduzione della categoria animale';

COMMENT ON COLUMN IUF_D_CATEGORIA_ANIMALE.CONSUMO_ANNUO_UF IS 'Consumo di unita'' foraggere annue per ogni categoria nell''ambito dell''unita'' di misura utilizzata';

COMMENT ON COLUMN IUF_D_CATEGORIA_ANIMALE.NUMERO_MAX_ANIMALI_PER_HA IS 'Numero massimo di animali per ettaro (equivalente a 170 kg N/ha/anno). Utilizzato nelle domande di misura F2 - Applicazione delle tecniche di Produzione Biologica';

COMMENT ON COLUMN IUF_D_CATEGORIA_ANIMALE.AGEA_COD IS 'Codice usato da AGEA nella trasmissione di file';



CREATE TABLE IUF_D_CATEGORIA_EVENTO
(
  ID_CATEGORIA_EVENTO  NUMBER(4)                NOT NULL,
  DESCRIZIONE          VARCHAR2(500 BYTE)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_CATEGORIA_INTERVENTO
(
  ID_CATEGORIA_INTERVENTO  NUMBER(4)            NOT NULL,
  DESCRIZIONE              VARCHAR2(200 BYTE)   NOT NULL,
  FLAG_ESCLUDI_CATALOGO    VARCHAR2(1 BYTE)     NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_CATEGORIA_INTERVENTO.FLAG_ESCLUDI_CATALOGO IS 'Vale S per esempio nel caso di categoria investimenti';



CREATE TABLE IUF_D_CONSORZIO_DIFESA
(
  ID_CONSORZIO_DIFESA  NUMBER(4)                NOT NULL,
  EXT_ID_PROVINCIA     VARCHAR2(3 BYTE)         NOT NULL,
  DESCRIZIONE          VARCHAR2(120 BYTE)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_CONTROLLO_AMMINISTRATI
(
  ID_CONTROLLO_AMMINISTRATIVO     NUMBER(4)     NOT NULL,
  ID_CONTROLLO_AMMINISTRAT_PADRE  NUMBER(4),
  CODICE                          VARCHAR2(20 BYTE) NOT NULL,
  DESCRIZIONE                     VARCHAR2(500 BYTE) NOT NULL,
  ORDINAMENTO                     NUMBER(2)     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_EDIZIONE_TRFCONF
(
  ID_EDIZIONE_PSR  NUMBER(4)                    NOT NULL,
  ANNO_INIZIO      NUMBER(4)                    NOT NULL,
  ANNO_FINE        NUMBER(4)                    NOT NULL,
  REGOLAMENTO      VARCHAR2(2000 BYTE)          NOT NULL,
  CODICE_CGI       VARCHAR2(20 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_ELENCO_CDU
(
  ID_ELENCO_CDU       NUMBER(4)                 NOT NULL,
  CODICE_CDU          VARCHAR2(20 BYTE)         NOT NULL,
  NOME_DOCUMENTO_CDU  VARCHAR2(100 BYTE)        NOT NULL,
  EXT_COD_MACRO_CDU   VARCHAR2(50 BYTE),
  TIPO_AZIONE         VARCHAR2(1 BYTE)          NOT NULL,
  HELP_CDU            CLOB
)
LOB (HELP_CDU) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL;

COMMENT ON TABLE IUF_D_ELENCO_CDU IS 'contiene l''elenco di tutti i casi d''uso gestiti dall''applicativo';

COMMENT ON COLUMN IUF_D_ELENCO_CDU.HELP_CDU IS 'Serve a contenere un testo (html) che l''applicativo Java legge e riporta nelle pagine web corrispondenti al caso d''uso per guidare l''operativita'' dell''utente';



CREATE TABLE IUF_D_ERRORE_BATCH
(
  CODICE_ERRORE  VARCHAR2(10 BYTE)              NOT NULL,
  DESC_ERRORE    VARCHAR2(100 BYTE)             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_ESITO
(
  ID_ESITO     NUMBER(4)                        NOT NULL,
  CODICE       VARCHAR2(20 BYTE)                NOT NULL,
  DESCRIZIONE  VARCHAR2(200 BYTE)               NOT NULL,
  TIPO_ESITO   VARCHAR2(1 BYTE)                 NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_ESITO.TIPO_ESITO IS 'I: esito di IUF_T_PROCEDIMENTO_OGGETTO di tipo Istanza;O: esito di IUF_T_PROCEDIMENTO_OGGETTO di tipo NON Istanza;C: esito di IUF_T_ESITO_CONTROLLI_AMM per il quadro CTRAM;V: esito di IUF_T_VISITA_LUOGO;T: esito di IUF_T_ESITO_TECNICO relativo all''esito tecnico per il quadro CTRAM (Controllo tecnico amministrativo);F: esito di IUF_T_ESITO_TECNICO relativo all''esito finale dper iul quadro ESIFN (Esito finale); D: esito relativo alla verifica dei documenti contenuti nel quadro "Analisi Documentale"; A: esito relativo alla verifica del risultato dell''analisi del laboratorio;P: esito relativo all''istruttoria delle misure a premio nel quadro EFNPR (Esito istruttoria); L: esito relativo al controllo in loco delle misure a premio nel quadro EFNPR (Esito istruttoria); Z: esito relativo all''esito finale delle misure a premio nel quadro ESIFD (Esito finale) per l''oggetto ''Provvedimento finale Istruttoria Misure a premio''; M: motivazioni relative al quadro esito finale della post-istruttoria di misure a premio; G: esito degli step della creazione del piano grafico, gestita nel quadro PGRAF';



CREATE TABLE IUF_D_EVENTO_CALAMITOSO
(
  ID_EVENTO_CALAMITOSO  NUMBER(10)              NOT NULL,
  DATA_EVENTO           DATE                    NOT NULL,
  DESCRIZIONE           VARCHAR2(500 BYTE)      NOT NULL,
  ID_CATEGORIA_EVENTO   NUMBER(4)               NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_EVENTO_CALAMITOSO.DATA_EVENTO IS 'data in cui si e'' verificato l''evento calamitoso';

COMMENT ON COLUMN IUF_D_EVENTO_CALAMITOSO.DESCRIZIONE IS 'descrizione dell''evento calamitoso';



CREATE TABLE IUF_D_FABBISOGNO
(
  ID_FABBISOGNO  NUMBER(4)                      NOT NULL,
  CODICE         VARCHAR2(20 BYTE)              NOT NULL,
  DESCRIZIONE    VARCHAR2(200 BYTE)             NOT NULL,
  TIPOLOGIA      VARCHAR2(20 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_FILIERA_PRODUTTIVA
(
  ID_FILIERA_PRODUTTIVA  NUMBER(4)              NOT NULL,
  DESCRIZIONE            VARCHAR2(100 BYTE)     NOT NULL,
  DATA_INIZIO            DATE                   NOT NULL,
  DATA_FINE              DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_FINALITA_AMBIENTALE
(
  ID_FINALITA_AMBIENTALE  NUMBER(4)             NOT NULL,
  CODICE                  VARCHAR2(20 BYTE)     NOT NULL,
  DESCRIZIONE             VARCHAR2(200 BYTE)    NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_FLAG_ESTRATTA
(
  FLAG_ESTRATTA           VARCHAR2(1 BYTE)      NOT NULL,
  DESCRIZIONE             VARCHAR2(200 BYTE)    NOT NULL,
  FLAG_CONTROLLO_IN_LOCO  VARCHAR2(1 BYTE)      NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_FONTE_CONTROLLO
(
  ID_FONTE_CONTROLLO  NUMBER(4)                 NOT NULL,
  DESCRIZIONE         VARCHAR2(200 BYTE)        NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_GRAVITA_NOTIFICA
(
  ID_GRAVITA_NOTIFICA  NUMBER(4)                NOT NULL,
  CODICE               VARCHAR2(1 BYTE)         NOT NULL,
  GRAVITA              VARCHAR2(100 BYTE)       NOT NULL,
  DESCRIZIONE          VARCHAR2(200 BYTE)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_GRUPPO_INFO_CATALOGO
(
  ID_GRUPPO_INFO_CATALOGO  NUMBER(10)           NOT NULL,
  DESCRIZIONE              VARCHAR2(2000 BYTE)  NOT NULL,
  ORDINE                   NUMBER(4)            NOT NULL,
  FLAG_INFO_OBBLIGATORIA   VARCHAR2(1 BYTE)     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_GRUPPO_OGGETTO
(
  ID_GRUPPO_OGGETTO  NUMBER(4)                  NOT NULL,
  CODICE             VARCHAR2(5 BYTE)           NOT NULL,
  DESCRIZIONE        VARCHAR2(500 BYTE)         NOT NULL,
  ORDINE             NUMBER(4)                  NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_ICONA
(
  ID_ICONA     NUMBER(4)                        NOT NULL,
  DESCRIZIONE  VARCHAR2(200 BYTE)               NOT NULL,
  TOOLTIP      VARCHAR2(100 BYTE)               NOT NULL,
  NOME_ICONA   VARCHAR2(100 BYTE)               NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_IMG_AGRIQ
(
  ID_IMG_AGRIQ           NUMBER(4)              NOT NULL,
  DESCRIZIONE            VARCHAR2(100 BYTE)     NOT NULL,
  IMMAGINE               BLOB,
  NOME_FILE              VARCHAR2(255 BYTE),
  DATA_INIZIO_VALIDITA   DATE                   NOT NULL,
  DATA_FINE_VALIDITA     DATE,
  FLAG_IMMAGINE_DEFAULT  VARCHAR2(1 BYTE)       DEFAULT 'N'                   NOT NULL,
  ORDINAMENTO            NUMBER(2)              NOT NULL
)
LOB (IMMAGINE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_ISTITUTO_DANNI_FAUNA
(
  ID_ISTITUTO_DANNI_FAUNA  NUMBER(4)            NOT NULL,
  TIPO_ISTITUTO            VARCHAR2(20 BYTE)    NOT NULL,
  DESCRIZIONE              VARCHAR2(250 BYTE)   NOT NULL,
  DATA_INIZIO_VALIDITA     DATE                 NOT NULL,
  DATA_FINE_VALIDITA       DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_ISTITUTO_NOMINATIVO
(
  ID_ISTITUTO_NOMINATIVO   NUMBER(4)            NOT NULL,
  DESCRIZIONE              VARCHAR2(250 BYTE)   NOT NULL,
  DATA_INIZIO_VALIDITA     DATE                 NOT NULL,
  DATA_FINE_VALIDITA       DATE,
  ID_ISTITUTO_DANNI_FAUNA  NUMBER(4)            NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_MESSAGGIO_ERRORE
(
  ID_MESSAGGIO_ERRORE  NUMBER(4)                NOT NULL,
  DESCRIZIONE          VARCHAR2(4000 BYTE)      NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_METODO_CENSIMENTO
(
  ID_METODO_CENSIMENTO  NUMBER(4)               NOT NULL,
  DESC_METODOLOGIA      VARCHAR2(250 BYTE)      NOT NULL,
  DATA_INIZIO_VALIDITA  DATE                    NOT NULL,
  DATA_FINE_VALIDITA    DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_METODO_COLTIVAZIONE
(
  ID_METODO_COLTIVAZIONE  NUMBER(4)             NOT NULL,
  DESCRIZIONE             VARCHAR2(100 BYTE)    NOT NULL,
  DATA_INIZIO             DATE                  NOT NULL,
  DATA_FINE               DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_MODALITA_PAGAMENTO
(
  ID_MODALITA_PAGAMENTO  NUMBER(4)              NOT NULL,
  DESCRIZIONE            VARCHAR2(100 BYTE)     NOT NULL,
  ORDINE                 NUMBER(4)              NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_MOTIVO_URGENZA
(
  ID_MOTIVO_URGENZA     NUMBER(4)               NOT NULL,
  DESCRIZIONE           VARCHAR2(250 BYTE)      NOT NULL,
  DATA_INIZIO_VALIDITA  DATE                    NOT NULL,
  DATA_FINE_VALIDITA    DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_MULTIFUNZIONALITA
(
  ID_MULTIFUNZIONALITA  NUMBER(4)               NOT NULL,
  DESCRIZIONE           VARCHAR2(100 BYTE)      NOT NULL,
  DATA_INIZIO           DATE                    NOT NULL,
  DATA_FINE             DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_NOME_BATCH
(
  ID_NOME_BATCH         NUMBER(3)               NOT NULL,
  NOME_BATCH            VARCHAR2(300 BYTE)      NOT NULL,
  DESC_BATCH            VARCHAR2(100 BYTE)      NOT NULL,
  NOME_JOBSET           VARCHAR2(20 BYTE),
  DT_ULTIMA_ESECUZIONE  DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_OGGETTO
(
  ID_OGGETTO                   NUMBER(4)        NOT NULL,
  CODICE                       VARCHAR2(5 BYTE) NOT NULL,
  DESCRIZIONE                  VARCHAR2(200 BYTE) NOT NULL,
  FLAG_ISTANZA                 VARCHAR2(1 BYTE) NOT NULL,
  CRITERIO_NUM_IDENTIFICATIVO  VARCHAR2(2 BYTE),
  FLAG_OGGETTO_MULTIPLO        VARCHAR2(1 BYTE) DEFAULT 'S' NOT NULL,
  TIPO_PAGAMENTO_SIGOP         VARCHAR2(5 BYTE),
  FLAG_ESTRAZIONE_CAMPIONE     VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  CAUSALE_PAGAMENTO            VARCHAR2(20 BYTE),
  FLAG_AMMISSIONE              VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_SCARICO_CAA             VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  OGGETTO_RICEVUTA_DEFAULT     VARCHAR2(500 BYTE),
  CORPO_RICEVUTA_DEFAULT       CLOB,
  FLAG_ESCLUDI_SEPARAZIONE     VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL
)
LOB (CORPO_RICEVUTA_DEFAULT) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_OGGETTO.FLAG_ISTANZA IS 'se vale S significa che e'' un oggetto creato dal Beneficiario (o CAA che riceve la delega)';

COMMENT ON COLUMN IUF_D_OGGETTO.CRITERIO_NUM_IDENTIFICATIVO IS 'indica i criteri con cui valorizzare il campo IDENTIFICATIVO degli oggetti, sara'' significativo solo per gli oggetti con FLAG_ISTANZA = ''S''';

COMMENT ON COLUMN IUF_D_OGGETTO.FLAG_OGGETTO_MULTIPLO IS 'valori possibili N = un solo oggetto all''interno del procedimento, G = un solo oggetto all''interno dello stesso gruppo, S = piu'' oggetti nello stesso procedimento ';

COMMENT ON COLUMN IUF_D_OGGETTO.FLAG_ESTRAZIONE_CAMPIONE IS 'dovra'' valere S (oggetto da considerare nell''universo e nell''importo totale), A (oggetto da NON considerare nell''universo, MA da considerare nell''importo totale), N (oggetto da non considerare)';



CREATE TABLE IUF_D_OTE_SOTTOSETTORI
(
  OTE_GENERALI               VARCHAR2(1000 BYTE),
  OTE_PRINCIPALI             VARCHAR2(1000 BYTE),
  OTE_PARTICOLARI            VARCHAR2(1000 BYTE),
  CODICE_OTE                 VARCHAR2(3 BYTE)   NOT NULL,
  SOTTOSETTORI               VARCHAR2(1000 BYTE),
  SETTORI_ELEVATA_INTENSITA  VARCHAR2(1000 BYTE),
  OTE_DI_RIFERIMENTO         VARCHAR2(1000 BYTE),
  SOTTOSETTORI_AGGIUNTIVI    VARCHAR2(1000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_PARAMETRO
(
  CODICE         VARCHAR2(20 BYTE)              NOT NULL,
  VALORE         VARCHAR2(200 BYTE),
  NOTE           VARCHAR2(200 BYTE),
  FILE_ALLEGATO  BLOB
)
LOB (FILE_ALLEGATO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_PRINCIPIO_SELEZIONE
(
  ID_PRINCIPIO_SELEZIONE  NUMBER(4)             NOT NULL,
  DESCRIZIONE             VARCHAR2(4000 BYTE)   NOT NULL,
  ORDINE                  NUMBER(4)             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_PRIORITA
(
  ID_PRIORITA  NUMBER(4)                        NOT NULL,
  CODICE       VARCHAR2(3 BYTE)                 NOT NULL,
  DESCRIZIONE  VARCHAR2(500 BYTE)               NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_PROCEDIMENTO_AGRICOLO
(
  ID_PROCEDIMENTO_AGRICOLO  NUMBER(4)           NOT NULL,
  DESCRIZIONE               VARCHAR2(2000 BYTE) NOT NULL,
  CODICE                    VARCHAR2(100 BYTE)  NOT NULL,
  DESCRIZIONE_ESTESA        VARCHAR2(4000 BYTE),
  ORDINAMENTO               NUMBER(4)           NOT NULL,
  IMMAGINE                  BLOB,
  NOME_FILE                 VARCHAR2(255 BYTE),
  COD_CLASS_REGIONALE       VARCHAR2(100 BYTE),
  COD_CLASS_LIQUIDAZIONE    VARCHAR2(100 BYTE),
  GRUPPO_HOME_PAGE          VARCHAR2(100 BYTE)  NOT NULL
)
LOB (IMMAGINE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_PROCEDIMENTO_AGRICOLO.IMMAGINE IS 'per contenere l''immagine del procedimento agricolo in formato jpg o altro';



CREATE TABLE IUF_D_PRODOTTO
(
  ID_PRODOTTO           NUMBER(4)               NOT NULL,
  DESCRIZIONE           VARCHAR2(100 BYTE)      NOT NULL,
  DATA_INIZIO_VALIDITA  DATE                    NOT NULL,
  DATA_FINE_VALIDITA    DATE,
  ORDINAMENTO           NUMBER(4)               NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_QUADRO
(
  ID_QUADRO           NUMBER(4)                 NOT NULL,
  CODICE              VARCHAR2(5 BYTE)          NOT NULL,
  DESCRIZIONE         VARCHAR2(200 BYTE)        NOT NULL,
  DATA_INIZIO         DATE                      NOT NULL,
  DATA_FINE           DATE,
  DESCRIZIONE_ESTESA  VARCHAR2(4000 BYTE),
  IMMAGINE            BLOB,
  NOME_FILE           VARCHAR2(255 BYTE)
)
LOB (IMMAGINE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_QUADRO.IMMAGINE IS 'per contenere l''immagine del quadro in formato jpg o altro';



CREATE TABLE IUF_D_QUADRO_DINAMICO
(
  NOTE                         VARCHAR2(4000 BYTE),
  FLAG_VISUALIZZAZIONE_ELENCO  VARCHAR2(1 BYTE) NOT NULL,
  ISTRUZ_SQL_POST_SALVATAGGIO  VARCHAR2(4000 BYTE),
  ID_QUADRO                    NUMBER(4)        NOT NULL,
  ID_QUADRO_PADRE              NUMBER(4)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_QUADRO_DINAMICO.ISTRUZ_SQL_POST_SALVATAGGIO IS 'in questa colonna sara'' possibile configurare ad esempio una procedura plsql richiamata da JAVA alla conferma delle modifiche di un quadro dinamico, successivamente al salvataggio dei dati, ma prima del commit';



CREATE TABLE IUF_D_RANGE_IDENTIFICATIVO
(
  ID_RANGE_IDENTIFICATIVO  NUMBER(10)           NOT NULL,
  RANGE_DA                 VARCHAR2(10 BYTE)    NOT NULL,
  RANGE_A                  VARCHAR2(10 BYTE)    NOT NULL,
  ULTIMO_NUMERO            VARCHAR2(10 BYTE)    NOT NULL,
  DESCRIZIONE              VARCHAR2(200 BYTE)   NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_REGIME_AIUTO
(
  ID_REGIME_AIUTO       NUMBER(4)               NOT NULL,
  TIPO_AIUTO            VARCHAR2(1 BYTE)        NOT NULL,
  DESCRIZIONE_BREVE     VARCHAR2(60 BYTE)       NOT NULL,
  DESCRIZIONE_ESTESA    VARCHAR2(200 BYTE)      NOT NULL,
  DATA_INIZIO_VALIDITA  DATE                    NOT NULL,
  DATA_FINE_VALIDITA    DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_REGIME_QUALITA
(
  ID_REGIME_QUALITA     NUMBER(4)               NOT NULL,
  DESCRIZIONE           VARCHAR2(100 BYTE)      NOT NULL,
  DATA_INIZIO_VALIDITA  DATE                    NOT NULL,
  DATA_FINE_VALIDITA    DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_RISCHIO_ELEVATO
(
  ID_RISCHIO_ELEVATO  NUMBER(4)                 NOT NULL,
  VALORE              NUMBER(2)                 NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_SEGNAPOSTO
(
  ID_SEGNAPOSTO   NUMBER(4)                     NOT NULL,
  NOME            VARCHAR2(200 BYTE)            NOT NULL,
  DESCRIZIONE     VARCHAR2(2000 BYTE)           NOT NULL,
  ISTRUZIONE_SQL  CLOB                          NOT NULL,
  VALORE_DEFAULT  VARCHAR2(400 BYTE)
)
LOB (ISTRUZIONE_SQL) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_D_SEGNAPOSTO IS 'Contiene i segnaposto (es. $$RICHIEDENTE) da utilizzare nell''applicativo all''interno dei testi ad esempio nelle stampe verbali';



CREATE TABLE IUF_D_SETTORE
(
  ID_SETTORE   NUMBER(4)                        NOT NULL,
  CODICE       VARCHAR2(2 BYTE)                 NOT NULL,
  DESCRIZIONE  VARCHAR2(50 BYTE)                NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_SETTORE_PRODUZIONE
(
  ID_SETTORE_PRODUZIONE  NUMBER(4)              NOT NULL,
  DESCRIZIONE            VARCHAR2(200 BYTE)     NOT NULL,
  DATA_INIZIO            DATE                   NOT NULL,
  DATA_FINE              DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_SEZIONE_DOC_RICHIESTI
(
  ID_SEZIONE_DOC_RICHIESTI  NUMBER(4)           NOT NULL,
  CODICE                    VARCHAR2(1 BYTE)    NOT NULL,
  TESTO_SEZIONE             VARCHAR2(4000 BYTE),
  DATA_INIZIO_VALIDITA      DATE                NOT NULL,
  DATA_FINE_VALIDITA        DATE
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_SEZIONE_DOC_RICHIESTI.CODICE IS 'indica la lettera della sezione della lettera documenti richiesti (A,B,C,..)';

COMMENT ON COLUMN IUF_D_SEZIONE_DOC_RICHIESTI.TESTO_SEZIONE IS 'eventuale testo aggiuntivo che accompagna la lettera della sezione';



CREATE TABLE IUF_D_SPECIE_FAUNA
(
  ID_SPECIE_FAUNA       NUMBER(4)               NOT NULL,
  DESCRIZIONE           VARCHAR2(250 BYTE)      NOT NULL,
  DATA_INIZIO_VALIDITA  DATE                    NOT NULL,
  DATA_FINE_VALIDITA    DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_SPECIE_OGUR
(
  ID_SPECIE_OGUR        NUMBER(4)               NOT NULL,
  DESCRIZIONE           VARCHAR2(250 BYTE)      NOT NULL,
  DATA_INIZIO_VALIDITA  DATE                    NOT NULL,
  DATA_FINE_VALIDITA    DATE,
  FLAG_OGUR             VARCHAR2(1 BYTE)        DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_STATO_CONCESSIONE
(
  ID_STATO_CONCESSIONE  NUMBER(4)               NOT NULL,
  DESCRIZIONE           VARCHAR2(200 BYTE)      NOT NULL,
  DATA_INIZIO           DATE                    NOT NULL,
  DATA_FINE             DATE                    NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_STATO_ESTRAZIONE
(
  ID_STATO_ESTRAZIONE  NUMBER(4)                NOT NULL,
  DESCRIZIONE          VARCHAR2(200 BYTE)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_STATO_OGGETTO
(
  ID_STATO_OGGETTO       NUMBER(4)              NOT NULL,
  DESCRIZIONE            VARCHAR2(200 BYTE)     NOT NULL,
  CODICE_STATO_ANAGRAFE  VARCHAR2(1 BYTE)       DEFAULT 'I'                   NOT NULL,
  NOTE                   VARCHAR2(4000 BYTE),
  FLAG_SCARICO_CAA       VARCHAR2(1 BYTE)       DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_STATO_OGGETTO.CODICE_STATO_ANAGRAFE IS 'Valori possibili: B= bozza,I= in corso,C=chiusa-conclusa,A=annullata. Viene utilizzata per popolare la colonna STATO della tabella di anagrafe DB_PROCEDIMENTO_AZIENDA';



CREATE TABLE IUF_D_STATO_PIANO_FINANZIARI
(
  ID_STATO_PIANO_FINANZIARIO  NUMBER(4)         NOT NULL,
  DESCRIZIONE                 VARCHAR2(50 BYTE) NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_STATO_STAMPA
(
  ID_STATO_STAMPA  NUMBER(4)                    NOT NULL,
  DESCRIZIONE      VARCHAR2(200 BYTE)           NOT NULL,
  ID_ICONA         NUMBER(4)                    NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_STATO_STAMPA.ID_ICONA IS 'Serve per poter rappresentare ciascun stato possibile di una stampa con un''icona corrispondente';



CREATE TABLE IUF_D_STRUTT_TESTO_VERBALE
(
  ID_ELENCO_CDU            NUMBER(4)            NOT NULL,
  TIPO_COLLOCAZIONE_TESTO  NUMBER(4)            NOT NULL,
  DESCRIZIONE              VARCHAR2(4000 BYTE)  NOT NULL,
  FLAG_VISIBILE            VARCHAR2(1 BYTE)     DEFAULT 'S'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_D_STRUTT_TESTO_VERBALE IS 'contiene l''elenco di tutti i CDU che gestiscono stampe dinamiche generate in fase di chiusura oggetti (es: verbali, comunicazioni al beneficiario)';

COMMENT ON COLUMN IUF_D_STRUTT_TESTO_VERBALE.TIPO_COLLOCAZIONE_TESTO IS 'contiene un codice numerico identificativo che permette di localizzare la posizione dei testi all''interno dei documenti';

COMMENT ON COLUMN IUF_D_STRUTT_TESTO_VERBALE.FLAG_VISIBILE IS 'serve ad indicare se il gruppo testo e'' visibile (FLAG = ''S'') nella gestione della configurazione dei modelli sul cruscotto bandi oppure non e'' visibile (FLAG = ''N'')';



CREATE TABLE IUF_D_TIPO_AGGREGAZIONE
(
  ID_TIPO_AGGREGAZIONE        NUMBER(4)         NOT NULL,
  ID_TIPO_AGGREGAZIONE_PADRE  NUMBER(4),
  DESCRIZIONE                 VARCHAR2(500 BYTE) NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_ATTO
(
  ID_TIPO_ATTO     NUMBER(4)                    NOT NULL,
  DESCRIZIONE      VARCHAR2(1000 BYTE)          NOT NULL,
  FLAG_ALTRE_INFO  VARCHAR2(1 BYTE)             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_ATTO_CONCESSIONE
(
  ID_TIPO_CONCESSIONE  NUMBER(4)                NOT NULL,
  DESCRIZIONE          VARCHAR2(200 BYTE)       NOT NULL,
  DATA_INIZIO          DATE                     NOT NULL,
  DATA_FINE            DATE                     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_CLASSIFICAZIONE
(
  ID_TIPO_CLASSIFICAZIONE  NUMBER(4)            NOT NULL,
  DESCRIZIONE              VARCHAR2(200 BYTE)   NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_D_TIPO_CLASSIFICAZIONE IS 'Classificazione della tipologia di intervento';



CREATE TABLE IUF_D_TIPO_DATO
(
  ID_TIPO_DATO  NUMBER(4)                       NOT NULL,
  DESCRIZIONE   VARCHAR2(100 BYTE)              NOT NULL,
  CODICE        VARCHAR2(3 BYTE)                NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_DOC_RICHIESTI
(
  ID_TIPO_DOC_RICHIESTI     NUMBER(4)           NOT NULL,
  DESCRIZIONE               CLOB                NOT NULL,
  ORDINE                    NUMBER(4)           NOT NULL,
  ID_SEZIONE_DOC_RICHIESTI  NUMBER(4)           NOT NULL,
  DATA_INIZIO_VALIDITA      DATE                NOT NULL,
  DATA_FINE_VALIDITA        DATE,
  CODICE                    VARCHAR2(100 BYTE)  NOT NULL
)
LOB (DESCRIZIONE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_DOCUMENTO_SPESA
(
  ID_TIPO_DOCUMENTO_SPESA      NUMBER(4)        NOT NULL,
  DESCRIZIONE                  VARCHAR2(200 BYTE) NOT NULL,
  ORDINE                       NUMBER(4)        NOT NULL,
  FLAG_ID_FORNITORE            VARCHAR2(1 BYTE) NOT NULL,
  FLAG_DATA_DOCUMENTO_SPESA    VARCHAR2(1 BYTE) NOT NULL,
  FLAG_NUMERO_DOCUMENTO_SPESA  VARCHAR2(1 BYTE) NOT NULL,
  FLAG_DATA_PAGAMENTO          VARCHAR2(1 BYTE) NOT NULL,
  FLAG_ID_MODALITA_PAGAMENTO   VARCHAR2(1 BYTE) NOT NULL,
  FLAG_NOTE                    VARCHAR2(1 BYTE) NOT NULL,
  FLAG_FILE_DOCUMENTO_SPESA    VARCHAR2(1 BYTE) NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_TIPO_DOCUMENTO_SPESA.FLAG_ID_FORNITORE IS 'S: Dato obbligatorio, N: Dato facoltativo, K: Dato chiave e quindi obbligatorio
';

COMMENT ON COLUMN IUF_D_TIPO_DOCUMENTO_SPESA.FLAG_DATA_DOCUMENTO_SPESA IS 'S: Dato obbligatorio, N: Dato facoltativo, K: Dato chiave e quindi obbligatorio ';

COMMENT ON COLUMN IUF_D_TIPO_DOCUMENTO_SPESA.FLAG_NUMERO_DOCUMENTO_SPESA IS 'S: Dato obbligatorio, N: Dato facoltativo, K: Dato chiave e quindi obbligatorio ';

COMMENT ON COLUMN IUF_D_TIPO_DOCUMENTO_SPESA.FLAG_DATA_PAGAMENTO IS 'S: Dato obbligatorio, N: Dato facoltativo, K: Dato chiave e quindi obbligatorio ';

COMMENT ON COLUMN IUF_D_TIPO_DOCUMENTO_SPESA.FLAG_ID_MODALITA_PAGAMENTO IS 'S: Dato obbligatorio, N: Dato facoltativo, K: Dato chiave e quindi obbligatorio ';

COMMENT ON COLUMN IUF_D_TIPO_DOCUMENTO_SPESA.FLAG_NOTE IS 'S: Dato obbligatorio, N: Dato facoltativo, K: Dato chiave e quindi obbligatorio ';

COMMENT ON COLUMN IUF_D_TIPO_DOCUMENTO_SPESA.FLAG_FILE_DOCUMENTO_SPESA IS 'S: Dato obbligatorio, N: Dato facoltativo, K: Dato chiave e quindi obbligatorio ';



CREATE TABLE IUF_D_TIPO_ELABORAZIONE
(
  TIPO_ELABORAZIONE  VARCHAR2(5 BYTE)           NOT NULL,
  DESCRIZIONE        VARCHAR2(200 BYTE)         NOT NULL,
  CODICE             VARCHAR2(20 BYTE)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_ESTRAZIONE
(
  ID_TIPO_ESTRAZIONE             NUMBER(4)      NOT NULL,
  DESCRIZIONE                    VARCHAR2(200 BYTE) NOT NULL,
  PERCENTUALE_ESTRAZIONE_MINIMA  NUMBER(5,2),
  DURATA_ESTRAZIONE              NUMBER(4),
  NOTE                           VARCHAR2(4000 BYTE),
  CODICE                         VARCHAR2(1 BYTE),
  FLAG_ATTIVO                    VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_FIRST_EXTR                VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_MIX_MIS                   VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_IMPORTO
(
  ID_TIPO_IMPORTO  NUMBER(4)                    NOT NULL,
  DESCRIZIONE      VARCHAR2(200 BYTE)           NOT NULL,
  FONDO_PAGAMENTO  VARCHAR2(20 BYTE)            NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_LIVELLO
(
  ID_TIPO_LIVELLO  NUMBER(4)                    NOT NULL,
  CODICE           VARCHAR2(1 BYTE)             NOT NULL,
  DESCRIZIONE      VARCHAR2(50 BYTE)            NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_LOCALIZZAZIONE
(
  ID_TIPO_LOCALIZZAZIONE  NUMBER(4)             NOT NULL,
  DESCRIZIONE             VARCHAR2(200 BYTE)    NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_D_TIPO_LOCALIZZAZIONE IS 'Tipologia di informazione richiesta per la localizzazione dell''investimento';



CREATE TABLE IUF_D_TIPOLOGIA_LIVELLO
(
  ID_TIPOLOGIA_LIVELLO  NUMBER(4)               NOT NULL,
  CODICE                VARCHAR2(1 BYTE)        NOT NULL,
  DESCRIZIONE           VARCHAR2(50 BYTE)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPOLOGIA_PREAVVISO
(
  ID_TIPOLOGIA_PREAVVISO  NUMBER(4)             NOT NULL,
  DESCRIZIONE             VARCHAR2(200 BYTE)    NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPOLOGIA_SANZIONE
(
  ID_TIPOLOGIA_SANZIONE  NUMBER(4)              NOT NULL,
  DESCRIZIONE            VARCHAR2(200 BYTE)     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_OPERAZIONE
(
  ID_TIPO_OPERAZIONE  NUMBER(4)                 NOT NULL,
  DESCRIZIONE         VARCHAR2(200 BYTE)        NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_PIANO_FINANZIARIO
(
  ID_TIPO_PIANO_FINANZIARIO  NUMBER(4)          NOT NULL,
  CODICE                     VARCHAR2(1 BYTE)   NOT NULL,
  DESCRIZIONE                VARCHAR2(50 BYTE)  NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_PRODUZIONE
(
  ID_TIPO_PRODUZIONE    NUMBER(4)               NOT NULL,
  DESCRIZIONE           VARCHAR2(100 BYTE)      NOT NULL,
  DATA_INIZIO_VALIDITA  DATE                    NOT NULL,
  DATA_FINE_VALIDITA    DATE,
  ORDINAMENTO           NUMBER(2)               NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_SOLUZIONE
(
  ID_TIPO_SOLUZIONE       NUMBER(4)             NOT NULL,
  DESCRIZIONE             VARCHAR2(200 BYTE)    NOT NULL,
  FLAG_NOTE_OBBLIGATORIE  VARCHAR2(1 BYTE)      DEFAULT 'N'                   NOT NULL,
  FLAG_FILE_OBBLIGATORIO  VARCHAR2(1 BYTE)      DEFAULT 'N'                   NOT NULL,
  CODICE_IDENTIFICATIVO   VARCHAR2(20 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_VISUALIZZAZIONE
(
  ID_TIPO_VISUALIZZAZIONE  NUMBER(4)            NOT NULL,
  DESCRIZIONE              VARCHAR2(200 BYTE)   NOT NULL,
  FLAG_ELENCO              VARCHAR2(1 BYTE)     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_UNITA_MISURA
(
  ID_UNITA_MISURA  NUMBER(4)                    NOT NULL,
  CODICE           VARCHAR2(20 BYTE)            NOT NULL,
  DESCRIZIONE      VARCHAR2(200 BYTE)           NOT NULL,
  DATA_FINE        DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_UTILIZZO
(
  EXT_ID_UTILIZZO             NUMBER(10)        NOT NULL,
  PREZZO_MIN                  NUMBER(6,2),
  PRODUZIONE_HA_MIN           NUMBER(8,2),
  PRODUZIONE_HA_MEDIA         NUMBER(8,2)       NOT NULL,
  PREZZO_MEDIO                NUMBER(6,2)       NOT NULL,
  PREZZO_MAX                  NUMBER(6,2),
  PRODUZIONE_HA_MAX           NUMBER(8,2),
  UF_PRODOTTE                 NUMBER(5)         NOT NULL,
  IMPORTO_MASSIMALE           NUMBER(7,2),
  COEFFICIENTE_RIDUZIONE      NUMBER(3,2),
  COLTURE_SOGGETTE_ROTAZIONE  VARCHAR2(50 BYTE),
  FAMIGLIA_BOTANICA           VARCHAR2(50 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_D_UTILIZZO IS 'Contiene gli stessi record presenti sulla tabella tipo_utilizzo in anagrafe con informazioni ulteriori specifiche del procedimento standardizzato';

COMMENT ON COLUMN IUF_D_UTILIZZO.PREZZO_MIN IS 'prezzo minimo al q.le in base all''utilizzo';

COMMENT ON COLUMN IUF_D_UTILIZZO.PREZZO_MEDIO IS 'prezzo medio al q.le in base all''utilizzo';

COMMENT ON COLUMN IUF_D_UTILIZZO.PREZZO_MAX IS 'prezzo massimo al q.le in base all''utilizzo';

COMMENT ON COLUMN IUF_D_UTILIZZO.UF_PRODOTTE IS 'Unit?? foraggere prodotte per quintale di coltura in base all''utilizzo';

COMMENT ON COLUMN IUF_D_UTILIZZO.IMPORTO_MASSIMALE IS 'Importo massimale applicabile alla coltura per le misure a premio (Misure E/F)';



CREATE TABLE IUF_D_UTILIZZO_RESE
(
  ID_UTILIZZO_RESE         NUMBER(4)            NOT NULL,
  EXT_ID_UTILIZZO          NUMBER(10),
  CODICE_UTILIZZO          VARCHAR2(10 BYTE),
  CODICE_DESTINAZIONE      VARCHAR2(10 BYTE),
  CODICE_DETTAGLIO_USO     VARCHAR2(10 BYTE),
  CODICE_QUALITA_USO       VARCHAR2(10 BYTE),
  CODICE_VARIETA           VARCHAR2(10 BYTE),
  RESA_MIN                 NUMBER(8,2),
  RESA_MEDIA               NUMBER(8,2)          NOT NULL,
  RESA_MAX                 NUMBER(8,2),
  PREZZO_MIN               NUMBER(6,2),
  PREZZO_MEDIO             NUMBER(6,2)          NOT NULL,
  PREZZO_MAX               NUMBER(6,2),
  GIORNATE_LAVORATE_MIN    NUMBER(6,1),
  GIORNATE_LAVORATE_MEDIE  NUMBER(6,1)          NOT NULL,
  GIORNATE_LAVORATE_MAX    NUMBER(6,1),
  DATA_INIZIO              DATE                 NOT NULL,
  DATA_FINE                DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_VINCOLO_INFO
(
  ID_VINCOLO_DICHIARAZIONE  NUMBER(4)           NOT NULL,
  TIPO_VINCOLO              VARCHAR2(20 BYTE)   NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_VINCOLO_INFO.TIPO_VINCOLO IS 'varra'': univoco (indica che delle informazione legate a questo vincolo potra'' essere selezionata solo una), obbligatorio (indica che delle informazioni legate a questo vincolo almeno una dovra'' essere selezionata), ecc...';



CREATE TABLE IUF_D_VISIBILITA
(
  ID_VISIBILITA  NUMBER(4)                      NOT NULL,
  DESCRIZIONE    VARCHAR2(200 BYTE)             NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_D_VISIBILITA IS 'La tabella conterra'' i seguenti valori: 1) visibile a tutti 2) funzionari PA e Arpea 3) solo Arpea';



CREATE TABLE IUF_D_VOCE_RIPARTIZIONE
(
  ID_VOCE_RIPARTIZIONE  NUMBER(4)               NOT NULL,
  DESCRIZIONE           VARCHAR2(200 BYTE)      NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_L_PROCESSO_BATCH
(
  ID_PROCESSO_BATCH       NUMBER                NOT NULL,
  ID_NOME_BATCH           NUMBER(3)             NOT NULL,
  DT_INIZIO_ELABORAZIONE  DATE                  NOT NULL,
  DT_FINE_ELABORAZIONE    DATE,
  FLAG_ESITO              VARCHAR2(2 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_BAND_OG_QUAD_CONTR_AMM
(
  ID_BANDO_OGGETTO             NUMBER(10)       NOT NULL,
  ID_QUADRO_OGG_CONTROLLO_AMM  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_CONTROLLI_PIANO_OGUR
(
  ID_CONTROLLO_PIANO_OGUR  NUMBER(4)            NOT NULL,
  ID_SPECIE_OGUR           NUMBER(4)            NOT NULL,
  PROGRESSIVO              NUMBER(4)            NOT NULL,
  ETICHETTA                VARCHAR2(50 BYTE),
  VALORE_DA                NUMBER(3,2),
  VALORE_A                 NUMBER(3,2)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_R_CONTROLLI_PIANO_OGUR IS 'Tabella che definisce i controlli e le etichette da attribuire ai dati "censito" e "prelevato" presenti in IUF_T_CENSITO_PRELIEVO_OGUR';



CREATE TABLE IUF_R_ESITO_DECODIFICATO
(
  ID_ESITO               NUMBER(4)              NOT NULL,
  ID_TIPO_OPERAZIONE     NUMBER(4)              NOT NULL,
  ID_ESITO_DECODIFICATO  NUMBER(4)              NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_ISTITUTO_TIPO_AMM
(
  ID_ISTITUTO_DANNI_FAUNA  NUMBER(4)            NOT NULL,
  EXT_ID_TIPO_AMM          VARCHAR2(2 BYTE)     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_LEGAME_GRUPPO_OGGETTO
(
  ID_GRUPPO_OGGETTO         NUMBER(4)           NOT NULL,
  ID_OGGETTO                NUMBER(4)           NOT NULL,
  ORDINE                    NUMBER(4)           NOT NULL,
  ID_LEGAME_GRUPPO_OGGETTO  NUMBER(10)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_METODO_CENS_SPECIE
(
  ID_METODO_SPECIE      NUMBER(4)               NOT NULL,
  ID_SPECIE_OGUR        NUMBER(4)               NOT NULL,
  ID_METODO_CENSIMENTO  NUMBER(4)               NOT NULL,
  ID_UNITA_MISURA       NUMBER(4)               NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_R_METODO_CENS_SPECIE IS 'tabella di relazione della specie con il metodo di censimento e relativa unita'' di misura';



CREATE TABLE IUF_R_OGGETTO_ICONA
(
  ID_OGGETTO                  NUMBER(4)         NOT NULL,
  ID_ICONA                    NUMBER(4)         NOT NULL,
  ORDINE                      NUMBER(4)         NOT NULL,
  ID_OGGETTO_ICONA            NUMBER(10)        NOT NULL,
  EXT_ID_TIPO_DOCUMENTO       NUMBER(4),
  FLAG_FIRMA_GRAFOMETRICA     VARCHAR2(1 BYTE),
  ID_ELENCO_CDU               NUMBER(4)         NOT NULL,
  FLAG_STAMPA_OGGETTO_APERTO  VARCHAR2(1 BYTE),
  FLAG_DA_FIRMARE             VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL,
  FLAG_DA_PROTOCOLLARE        VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL,
  FLAG_INVIA_MAIL             VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL,
  FLAG_VISIBILE_TUTTI         VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL,
  FLAG_ATTESTAZIONE_CAA       VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_OGGETTO_ICONA.EXT_ID_TIPO_DOCUMENTO IS 'chiave della tabella DOQUIAGRI_D_TIPO_DOCUMENTO';

COMMENT ON COLUMN IUF_R_OGGETTO_ICONA.FLAG_FIRMA_GRAFOMETRICA IS 'Vale S nel caso in cui il documento preveda la stampa grafometrica, N se e'' prevista solo quella su carta, X se non si prevede firma';

COMMENT ON COLUMN IUF_R_OGGETTO_ICONA.FLAG_STAMPA_OGGETTO_APERTO IS 'indica, nel caso in cui EXT_ID_TIPO_DOCUMENTO sia valorizzato, se la stampa puo'' essere prodotta in Bozza prima che il procedimento/oggetto venga chiuso';

COMMENT ON COLUMN IUF_R_OGGETTO_ICONA.FLAG_DA_FIRMARE IS 'Serve per gestire la firma dei documenti generati in istruttoria (oggetti con FLAG_ISTANZA = ''N'') ';

COMMENT ON COLUMN IUF_R_OGGETTO_ICONA.FLAG_DA_PROTOCOLLARE IS 'Serve per gestire la protocollazione dei documenti generati in istruttoria (oggetti con FLAG_ISTANZA = ''N'') ';

COMMENT ON COLUMN IUF_R_OGGETTO_ICONA.FLAG_INVIA_MAIL IS 'All''approvazione di un oggetto non di tipo istanza, se il Flag vale ''S'' invia una mail al beneficiario con allegato il documento';

COMMENT ON COLUMN IUF_R_OGGETTO_ICONA.FLAG_VISIBILE_TUTTI IS 'All''approvazione di un oggetto non di tipo istanza, se il Flag vale ''S'' viene reso visibile a tutti il documento';

COMMENT ON COLUMN IUF_R_OGGETTO_ICONA.FLAG_ATTESTAZIONE_CAA IS 'indica se la stampa istanza deve contenere al fondo (dopo la firma) il testo relativo alla attestazione CAA';



CREATE TABLE IUF_R_OPERAZION_TIPO_ESTR_DP
(
  ID_OPERAZIONE_TIPO_ESTR_DP  NUMBER(10)        NOT NULL,
  CODICE_MISURA               VARCHAR2(20 BYTE),
  CODICE_AZIONE               VARCHAR2(20 BYTE),
  CODICE_OPERAZIONE           VARCHAR2(20 BYTE),
  ID_TIPO_ESTRAZIONE          NUMBER(4)         NOT NULL,
  FLAG_ATTIVO                 VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL,
  NOTE                        VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_QUADRO_OGGETTO
(
  ID_QUADRO          NUMBER(4)                  NOT NULL,
  ID_OGGETTO         NUMBER(4)                  NOT NULL,
  FLAG_OBBLIGATORIO  VARCHAR2(1 BYTE)           NOT NULL,
  ORDINE             NUMBER(4)                  NOT NULL,
  ID_QUADRO_OGGETTO  NUMBER(10)                 NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_QUADRO_OGGETTO_AZIONE
(
  ID_AZIONE          NUMBER(4)                  NOT NULL,
  EXT_COD_MACRO_CDU  VARCHAR2(50 BYTE)          NOT NULL,
  ORDINE             NUMBER(4)                  NOT NULL,
  ID_QUADRO_OGGETTO  NUMBER(10)                 NOT NULL,
  ID_ELENCO_CDU      NUMBER(4)                  NOT NULL,
  PRIORITA           NUMBER(1),
  HELP_CDU           CLOB
)
LOB (HELP_CDU) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_QUADRO_OGGETTO_AZIONE.PRIORITA IS 'indica la prima azione che verra'' svolta all''interno del quadro (priorita'' = 1). Nel caso in cui l''azione sia di scrittura e l''oggetto o l''utente non e'' abilitato all''operazione, si passera'' all''azione di priorita'' = 2';

COMMENT ON COLUMN IUF_R_QUADRO_OGGETTO_AZIONE.HELP_CDU IS 'Serve per avere un help di default e poterlo eventualmente differenziare per un quadro/oggetto/azione specifico';



CREATE TABLE IUF_R_TIPO_DOC_RIC_OGGETTO
(
  ID_TIPO_DOC_RIC_OGGETTO  NUMBER(10)           NOT NULL,
  ID_OGGETTO               NUMBER(4)            NOT NULL,
  ID_TIPO_DOC_RICHIESTI    NUMBER(4)            NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_VISIBILITA_ATTORE
(
  ID_VISIBILITA_ATTORE  NUMBER(10)              NOT NULL,
  ID_VISIBILITA         NUMBER(4)               NOT NULL,
  EXT_COD_ATTORE        VARCHAR2(50 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_VISIBILITA_ATTORE.EXT_COD_ATTORE IS 'codice dell''attore presente su PAPUA';



CREATE TABLE IUF_T_BUDGET
(
  ID_BUDGET                    NUMBER(10)       NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE,
  MOTIVAZIONI                  VARCHAR2(4000 BYTE),
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER           NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_DICHIARAZIONE_SPESA
(
  ID_DICHIARAZIONE_SPESA       NUMBER(10)       NOT NULL,
  ANNO                         NUMBER(4)        NOT NULL,
  PROGRESSIVO                  NUMBER(3)        NOT NULL,
  FLAG_STATO_DICHIARAZIONE     VARCHAR2(1 BYTE) NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER           NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_FILE_ALLEGATI_INTERVEN
(
  NOME_LOGICO                  VARCHAR2(255 BYTE) NOT NULL,
  NOME_FISICO                  VARCHAR2(255 BYTE) NOT NULL,
  FILE_ALLEGATO                BLOB,
  ID_FILE_ALLEGATI_INTERVENTO  NUMBER(10)       NOT NULL,
  EXT_ID_DOCUMENTO_INDEX       NUMBER(10)
)
LOB (FILE_ALLEGATO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_FLUSSO_ANOM_SIGOP
(
  ID_FLUSSO_ANOM_SIGOP  NUMBER(10)              NOT NULL,
  DATA_CREAZIONE        DATE                    NOT NULL,
  NOTE                  VARCHAR2(500 BYTE),
  FLAG_PROCESSATO       VARCHAR2(1 BYTE)        DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_FORNITORE
(
  ID_FORNITORE                  NUMBER(10)      NOT NULL,
  CODICE_FORNITORE              VARCHAR2(100 BYTE) NOT NULL,
  RAGIONE_SOCIALE               VARCHAR2(1000 BYTE) NOT NULL,
  INDIRIZZO_SEDE_LEGALE         VARCHAR2(250 BYTE),
  EXT_ISTAT_COMUNE_SEDE_LEGALE  VARCHAR2(6 BYTE),
  DATA_INIZIO                   DATE            NOT NULL,
  DATA_FINE                     DATE
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_FORNITORE IS 'i fornitori devono essere ricercati su anagrafe tributaria';



CREATE TABLE IUF_T_GRADUATORIA
(
  ID_GRADUATORIA     NUMBER(10)                 NOT NULL,
  DESCRIZIONE        VARCHAR2(500 BYTE)         NOT NULL,
  DATA_APPROVAZIONE  DATE,
  FLAG_APPROVATA     VARCHAR2(1 BYTE)           NOT NULL,
  ORDINAMENTO1       VARCHAR2(200 BYTE)         NOT NULL,
  ORDINAMENTO2       VARCHAR2(200 BYTE),
  ORDINAMENTO3       VARCHAR2(200 BYTE),
  ORDINAMENTO4       VARCHAR2(200 BYTE),
  ORDINAMENTO5       VARCHAR2(200 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_GRADUATORIA.ORDINAMENTO1 IS 'informazioni sui valori presenti in ordinamento1_valore';

COMMENT ON COLUMN IUF_T_GRADUATORIA.ORDINAMENTO2 IS 'informazioni sui valori presenti in ordinamento2_valore';

COMMENT ON COLUMN IUF_T_GRADUATORIA.ORDINAMENTO3 IS 'informazioni sui valori presenti in ordinamento3_valore';

COMMENT ON COLUMN IUF_T_GRADUATORIA.ORDINAMENTO4 IS 'informazioni sui valori presenti in ordinamento4_valore';

COMMENT ON COLUMN IUF_T_GRADUATORIA.ORDINAMENTO5 IS 'informazioni sui valori presenti in ordinamento5_valore';



CREATE TABLE IUF_T_IMPORTO_BUDGET_ANNUALE
(
  ID_IMPORTO_BUDGET_ANNUALE  NUMBER(10)         NOT NULL,
  ID_BUDGET                  NUMBER(10)         NOT NULL,
  TOTALE_PSR                 NUMBER(12,2),
  RISERVA_EFFICACIA          NUMBER(12,2),
  ANNO                       NUMBER(4)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_LOG
(
  ID_LOG              NUMBER(10)                NOT NULL,
  DESCRIZIONE_ERRORE  VARCHAR2(4000 BYTE)       NOT NULL,
  DATA_INSERIMENTO    DATE                      DEFAULT SYSDATE               NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PIANO_FINANZIARIO
(
  ID_PIANO_FINANZIARIO         NUMBER(10)       NOT NULL,
  DESCRIZIONE                  VARCHAR2(4000 BYTE) NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER           NOT NULL,
  ID_TIPO_PIANO_FINANZIARIO    NUMBER(4)        NOT NULL,
  PIANO_STORICIZZATO           BLOB
)
LOB (PIANO_STORICIZZATO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_STORICO_AMBITI_TEMATIC
(
  ID_STORICO_AMBITI_TEMATICI   NUMBER(10)       NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER           NOT NULL,
  DESCRIZIONE                  VARCHAR2(100 BYTE) NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_W_AZ_DATI_PARTI_1014_AZ1
(
  ID_AZ_DATI_PARTICE_1014_AZ1  NUMBER(10)       NOT NULL,
  ID_DATI_PARTICELLE_1014_AZ1  NUMBER(10)       NOT NULL,
  EXT_ID_AZIENDA               NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_W_PARTICELLE_1014_AZ1
(
  ID_PARTICELLE_1014_AZ1      NUMBER(10)        NOT NULL,
  ID_PARTICELLA               NUMBER(10)        NOT NULL,
  EXT_ID_AZIENDA              NUMBER(10)        NOT NULL,
  ID_PROCEDIMENTO             NUMBER(10)        NOT NULL,
  IDENTIFICATIVO              VARCHAR2(20 BYTE),
  SUPERFICIE_MAX_AMMISSIBILE  NUMBER(10,4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_W_PRODUZIONE_ANIMALE
(
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  DATA_EXPORT              DATE                 NOT NULL,
  EXT_ID_AZIENDA           NUMBER(10)           NOT NULL,
  SPECIE                   VARCHAR2(1000 BYTE)  NOT NULL,
  CATEGORIA                VARCHAR2(1000 BYTE)  NOT NULL,
  FLAG_BIO                 VARCHAR2(1 BYTE)     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_W_PRODUZIONE_INTEGRATA
(
  CUAA            VARCHAR2(16 BYTE)             NOT NULL,
  ULTERIORI_INFO  VARCHAR2(1000 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_W_PRODUZIONE_INTEGRATA IS 'In questa tabella verranno precaricati tutti i CUAA che risultano aver aderito alle precedenti programmazioni del PSR alla misura F1 e 214.1';



CREATE TABLE IUF_W_PRODUZIONE_VEGETALE
(
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  DATA_EXPORT              DATE                 NOT NULL,
  EXT_ID_AZIENDA           NUMBER(10)           NOT NULL,
  COMUNE                   VARCHAR2(1000 BYTE)  NOT NULL,
  USO_SUOLO                VARCHAR2(1000 BYTE)  NOT NULL,
  FLAG_BIO                 VARCHAR2(1 BYTE)     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_W_PRODUZIONI_CERT_TRADIZ
(
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  DATA_EXPORT              DATE                 NOT NULL,
  EXT_ID_AZIENDA           NUMBER(10)           NOT NULL,
  EXT_ID_PRODOTTO_GUF      NUMBER(10)           NOT NULL,
  FLAG_PAT                 VARCHAR2(1 BYTE)     NOT NULL,
  FLAG_BIO                 VARCHAR2(1 BYTE)     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_W_SCHEDA_AZIENDA_BIO
(
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  DATA_EXPORT              DATE                 NOT NULL,
  EXT_ID_AZIENDA           NUMBER(10)           NOT NULL,
  DATA_INIZIO              DATE                 NOT NULL,
  DATA_FINE                DATE,
  DENOMINAZIONE            VARCHAR2(1000 BYTE)  NOT NULL,
  DESCRIZIONE              VARCHAR2(4000 BYTE),
  ALTRA_ATTIVITA_BIO       VARCHAR2(100 BYTE),
  METODO_COLTIVAZIONE      VARCHAR2(4000 BYTE)  NOT NULL,
  FILIERA_PRODUTTIVA       VARCHAR2(4000 BYTE)  NOT NULL,
  ALTRA_FILIERA_PROD       VARCHAR2(100 BYTE),
  MULTIFUNZIONALITA        VARCHAR2(4000 BYTE),
  ALTRA_MULTIFUN           VARCHAR2(100 BYTE),
  TRASF_PRODOTTI_BIO       VARCHAR2(1000 BYTE),
  CANALE_VENDITA           VARCHAR2(4000 BYTE),
  ALTRO_CANALE             VARCHAR2(1000 BYTE),
  SITO_WEB                 VARCHAR2(1000 BYTE),
  AMAZON                   VARCHAR2(1000 BYTE),
  ORARI_VENDITA            VARCHAR2(1000 BYTE),
  INDIRIZZO_VENDITA        VARCHAR2(1000 BYTE),
  TELEFONO                 VARCHAR2(1000 BYTE),
  EMAIL                    VARCHAR2(1000 BYTE),
  LUOGO_GIORNO             VARCHAR2(1000 BYTE),
  COME_ARRIVARE            VARCHAR2(4000 BYTE),
  FACEBOOK                 VARCHAR2(1000 BYTE),
  INSTAGRAM                VARCHAR2(1000 BYTE),
  NOTE                     VARCHAR2(4000 BYTE),
  IMMAGINE_SCELTA          VARCHAR2(100 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_W_TRASFORM_PRODOTTI_BIO
(
  ID_PROCEDIMENTO_OGGETTO     NUMBER(10)        NOT NULL,
  DATA_EXPORT                 DATE              NOT NULL,
  EXT_ID_AZIENDA              NUMBER(10)        NOT NULL,
  PROD_BIOLOGICO_TRASFORMATO  VARCHAR2(1000 BYTE) NOT NULL,
  DETTAGLIO_BIO               VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE UNIQUE INDEX AK1_IUF_D_ELENCO_CDU ON IUF_D_ELENCO_CDU
(CODICE_CDU)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_D_ESITO ON IUF_D_ESITO
(CODICE, TIPO_ESITO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_D_SEGNAPOSTO ON IUF_D_SEGNAPOSTO
(NOME)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_D_TIPO_DATO ON IUF_D_TIPO_DATO
(CODICE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_ANNO_EXPOST ON IUF_D_ANNO_EXPOST
(ID_ANNO_EXPOST)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_AZIONE ON IUF_D_AZIONE
(ID_AZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_CANALE_VENDITA ON IUF_D_CANALE_VENDITA
(ID_CANALE_VENDITA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_CATEGORIA_ANIMALE ON IUF_D_CATEGORIA_ANIMALE
(EXT_ID_CATEGORIA_ANIMALE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_CATEGORIA_EVENTO ON IUF_D_CATEGORIA_EVENTO
(ID_CATEGORIA_EVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_CATEGORIA_INTERVENT ON IUF_D_CATEGORIA_INTERVENTO
(ID_CATEGORIA_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_CONSORZIO_DIFESA ON IUF_D_CONSORZIO_DIFESA
(ID_CONSORZIO_DIFESA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_CONTROLLO_AMMINISTR ON IUF_D_CONTROLLO_AMMINISTRATI
(ID_CONTROLLO_AMMINISTRATIVO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_EDIZIONE_TRFCONF ON IUF_D_EDIZIONE_TRFCONF
(ID_EDIZIONE_PSR)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_ELENCO_CDU ON IUF_D_ELENCO_CDU
(ID_ELENCO_CDU)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_ERRORE_BATCH ON IUF_D_ERRORE_BATCH
(CODICE_ERRORE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_ESITO ON IUF_D_ESITO
(ID_ESITO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_EVENTO_CALAMITOSO ON IUF_D_EVENTO_CALAMITOSO
(ID_EVENTO_CALAMITOSO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_FABBISOGNO ON IUF_D_FABBISOGNO
(ID_FABBISOGNO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_FILIERA_PRODUTTIVA ON IUF_D_FILIERA_PRODUTTIVA
(ID_FILIERA_PRODUTTIVA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_FINALITA_AMBIENTALE ON IUF_D_FINALITA_AMBIENTALE
(ID_FINALITA_AMBIENTALE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_FLAG_ESTRATTA ON IUF_D_FLAG_ESTRATTA
(FLAG_ESTRATTA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_FONTE_CONTROLLO ON IUF_D_FONTE_CONTROLLO
(ID_FONTE_CONTROLLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_GRAVITA_NOTIFICA ON IUF_D_GRAVITA_NOTIFICA
(ID_GRAVITA_NOTIFICA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_GRUPPO_INFO_CATALOG ON IUF_D_GRUPPO_INFO_CATALOGO
(ID_GRUPPO_INFO_CATALOGO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_GRUPPO_OGGETTO ON IUF_D_GRUPPO_OGGETTO
(ID_GRUPPO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_ICONA ON IUF_D_ICONA
(ID_ICONA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_IMG_AGRIQ ON IUF_D_IMG_AGRIQ
(ID_IMG_AGRIQ)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_ISTITUTO_DANNI_FAUN ON IUF_D_ISTITUTO_DANNI_FAUNA
(ID_ISTITUTO_DANNI_FAUNA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_ISTITUTO_NOMINATIVO ON IUF_D_ISTITUTO_NOMINATIVO
(ID_ISTITUTO_NOMINATIVO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_MESSAGGIO_ERRORE ON IUF_D_MESSAGGIO_ERRORE
(ID_MESSAGGIO_ERRORE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_METODO_CENSIMENTO ON IUF_D_METODO_CENSIMENTO
(ID_METODO_CENSIMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_METODO_COLTIVAZIONE ON IUF_D_METODO_COLTIVAZIONE
(ID_METODO_COLTIVAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_MODALITA_PAGAMENTO ON IUF_D_MODALITA_PAGAMENTO
(ID_MODALITA_PAGAMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_MOTIVO_URGENZA ON IUF_D_MOTIVO_URGENZA
(ID_MOTIVO_URGENZA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_MULTIFUNZIONALITA ON IUF_D_MULTIFUNZIONALITA
(ID_MULTIFUNZIONALITA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_NOME_BATCH ON IUF_D_NOME_BATCH
(ID_NOME_BATCH)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_OGGETTO ON IUF_D_OGGETTO
(ID_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_OTE_SOTTOSETTORI ON IUF_D_OTE_SOTTOSETTORI
(CODICE_OTE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_PARAMETRO ON IUF_D_PARAMETRO
(CODICE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_PRINCIPIO_SELEZIONE ON IUF_D_PRINCIPIO_SELEZIONE
(ID_PRINCIPIO_SELEZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_PRIORITA ON IUF_D_PRIORITA
(ID_PRIORITA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_PROCEDIMENTO_AGRICO ON IUF_D_PROCEDIMENTO_AGRICOLO
(ID_PROCEDIMENTO_AGRICOLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_PRODOTTO ON IUF_D_PRODOTTO
(ID_PRODOTTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_QUADRO ON IUF_D_QUADRO
(ID_QUADRO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_QUADRO_DINAMICO ON IUF_D_QUADRO_DINAMICO
(ID_QUADRO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_RANGE_IDENTIFICATIV ON IUF_D_RANGE_IDENTIFICATIVO
(ID_RANGE_IDENTIFICATIVO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_REGIME_AIUTO ON IUF_D_REGIME_AIUTO
(ID_REGIME_AIUTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_REGIME_QUALITA ON IUF_D_REGIME_QUALITA
(ID_REGIME_QUALITA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_RISCHIO_ELEVATO ON IUF_D_RISCHIO_ELEVATO
(ID_RISCHIO_ELEVATO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_SEGNAPOSTO ON IUF_D_SEGNAPOSTO
(ID_SEGNAPOSTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_SETTORE ON IUF_D_SETTORE
(ID_SETTORE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_SETTORE_PRODUZIONE ON IUF_D_SETTORE_PRODUZIONE
(ID_SETTORE_PRODUZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_SEZIONE_DOC_RICHIES ON IUF_D_SEZIONE_DOC_RICHIESTI
(ID_SEZIONE_DOC_RICHIESTI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_SPECIE_FAUNA ON IUF_D_SPECIE_FAUNA
(ID_SPECIE_FAUNA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_SPECIE_OGUR ON IUF_D_SPECIE_OGUR
(ID_SPECIE_OGUR)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_STATO_CONCESSIONE ON IUF_D_STATO_CONCESSIONE
(ID_STATO_CONCESSIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_STATO_ESTRAZIONE ON IUF_D_STATO_ESTRAZIONE
(ID_STATO_ESTRAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_STATO_OGGETTO ON IUF_D_STATO_OGGETTO
(ID_STATO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_STATO_PIANO_FINANZI ON IUF_D_STATO_PIANO_FINANZIARI
(ID_STATO_PIANO_FINANZIARIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_STATO_STAMPA ON IUF_D_STATO_STAMPA
(ID_STATO_STAMPA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_STRUTT_TESTO_VERBAL ON IUF_D_STRUTT_TESTO_VERBALE
(ID_ELENCO_CDU, TIPO_COLLOCAZIONE_TESTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_AGGREGAZIONE ON IUF_D_TIPO_AGGREGAZIONE
(ID_TIPO_AGGREGAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_ATTO ON IUF_D_TIPO_ATTO
(ID_TIPO_ATTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_ATTO_CONCESSIO ON IUF_D_TIPO_ATTO_CONCESSIONE
(ID_TIPO_CONCESSIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_CLASSIFICAZION ON IUF_D_TIPO_CLASSIFICAZIONE
(ID_TIPO_CLASSIFICAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_DATO ON IUF_D_TIPO_DATO
(ID_TIPO_DATO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_DOC_RICHIESTI ON IUF_D_TIPO_DOC_RICHIESTI
(ID_TIPO_DOC_RICHIESTI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_DOCUMENTO_SPES ON IUF_D_TIPO_DOCUMENTO_SPESA
(ID_TIPO_DOCUMENTO_SPESA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_ELABORAZIONE ON IUF_D_TIPO_ELABORAZIONE
(TIPO_ELABORAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_ESTRAZIONE ON IUF_D_TIPO_ESTRAZIONE
(ID_TIPO_ESTRAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_IMPORTO ON IUF_D_TIPO_IMPORTO
(ID_TIPO_IMPORTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_LIVELLO ON IUF_D_TIPO_LIVELLO
(ID_TIPO_LIVELLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_LOCALIZZAZIONE ON IUF_D_TIPO_LOCALIZZAZIONE
(ID_TIPO_LOCALIZZAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPOLOGIA_LIVELLO ON IUF_D_TIPOLOGIA_LIVELLO
(ID_TIPOLOGIA_LIVELLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPOLOGIA_PREAVVISO ON IUF_D_TIPOLOGIA_PREAVVISO
(ID_TIPOLOGIA_PREAVVISO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPOLOGIA_SANZIONE ON IUF_D_TIPOLOGIA_SANZIONE
(ID_TIPOLOGIA_SANZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_OPERAZIONE ON IUF_D_TIPO_OPERAZIONE
(ID_TIPO_OPERAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_PIANO_FINANZIA ON IUF_D_TIPO_PIANO_FINANZIARIO
(ID_TIPO_PIANO_FINANZIARIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_PRODUZIONE ON IUF_D_TIPO_PRODUZIONE
(ID_TIPO_PRODUZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_SOLUZIONE ON IUF_D_TIPO_SOLUZIONE
(ID_TIPO_SOLUZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_VISUALIZZAZION ON IUF_D_TIPO_VISUALIZZAZIONE
(ID_TIPO_VISUALIZZAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_UNITA_MISURA ON IUF_D_UNITA_MISURA
(ID_UNITA_MISURA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_UTILIZZO ON IUF_D_UTILIZZO
(EXT_ID_UTILIZZO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_UTILIZZO_RESE ON IUF_D_UTILIZZO_RESE
(ID_UTILIZZO_RESE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_VINCOLO_INFO ON IUF_D_VINCOLO_INFO
(ID_VINCOLO_DICHIARAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_VISIBILITA ON IUF_D_VISIBILITA
(ID_VISIBILITA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_VOCE_RIPARTIZIONE ON IUF_D_VOCE_RIPARTIZIONE
(ID_VOCE_RIPARTIZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_L_PROCESSO_BATCH ON IUF_L_PROCESSO_BATCH
(ID_PROCESSO_BATCH)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_OGG_QUAD_CONT ON IUF_R_BAND_OG_QUAD_CONTR_AMM
(ID_BANDO_OGGETTO, ID_QUADRO_OGG_CONTROLLO_AMM)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_CONTROLLI_PIAN_OGUR ON IUF_R_CONTROLLI_PIANO_OGUR
(ID_CONTROLLO_PIANO_OGUR)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_ESITO_DECODIFICATO ON IUF_R_ESITO_DECODIFICATO
(ID_ESITO, ID_TIPO_OPERAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_ISTITUTO_TIPO_AMM ON IUF_R_ISTITUTO_TIPO_AMM
(ID_ISTITUTO_DANNI_FAUNA, EXT_ID_TIPO_AMM)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LEGAME_GRUPPO_OGGET ON IUF_R_LEGAME_GRUPPO_OGGETTO
(ID_LEGAME_GRUPPO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_METODO_CENS_SPECIE ON IUF_R_METODO_CENS_SPECIE
(ID_METODO_SPECIE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_OGGETTO_ICONA ON IUF_R_OGGETTO_ICONA
(ID_OGGETTO_ICONA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_OPERAZ_TIPO_ESTR_DP ON IUF_R_OPERAZION_TIPO_ESTR_DP
(ID_OPERAZIONE_TIPO_ESTR_DP)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_QUADRO_OGGETTO ON IUF_R_QUADRO_OGGETTO
(ID_QUADRO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_QUADRO_OGGETTO_AZIO ON IUF_R_QUADRO_OGGETTO_AZIONE
(ID_AZIONE, ID_QUADRO_OGGETTO, ID_ELENCO_CDU)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_TIPO_DOC_RIC_OGGETT ON IUF_R_TIPO_DOC_RIC_OGGETTO
(ID_TIPO_DOC_RIC_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_VISIBILITA_ATTORE ON IUF_R_VISIBILITA_ATTORE
(ID_VISIBILITA_ATTORE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_BUDGET ON IUF_T_BUDGET
(ID_BUDGET)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DICHIARAZIONE_SPESA ON IUF_T_DICHIARAZIONE_SPESA
(ID_DICHIARAZIONE_SPESA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_FILE_ALLEGATI_INTER ON IUF_T_FILE_ALLEGATI_INTERVEN
(ID_FILE_ALLEGATI_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_FLUSSO_ANOM_SIGOP ON IUF_T_FLUSSO_ANOM_SIGOP
(ID_FLUSSO_ANOM_SIGOP)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_FORNITORE ON IUF_T_FORNITORE
(ID_FORNITORE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_GRADUATORIA ON IUF_T_GRADUATORIA
(ID_GRADUATORIA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_IMPORTO_BUDGET_ANNU ON IUF_T_IMPORTO_BUDGET_ANNUALE
(ID_IMPORTO_BUDGET_ANNUALE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_LOG ON IUF_T_LOG
(ID_LOG)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PIANO_FINANZIARIO ON IUF_T_PIANO_FINANZIARIO
(ID_PIANO_FINANZIARIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_STORICO_AMBITI_TEMA ON IUF_T_STORICO_AMBITI_TEMATIC
(ID_STORICO_AMBITI_TEMATICI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_W_AZ_DA_PART_1014_AZ1 ON IUF_W_AZ_DATI_PARTI_1014_AZ1
(ID_AZ_DATI_PARTICE_1014_AZ1)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_W_PARTICELLE_1014_AZ1 ON IUF_W_PARTICELLE_1014_AZ1
(ID_PARTICELLE_1014_AZ1)
TABLESPACE IUFFI_IDX;


CREATE TABLE IUF_D_BANDO
(
  ID_BANDO                        NUMBER(10)    NOT NULL,
  DENOMINAZIONE                   VARCHAR2(500 BYTE) NOT NULL,
  DATA_INIZIO                     DATE          NOT NULL,
  DATA_FINE                       DATE,
  ID_TIPO_LIVELLO                 NUMBER(4)     NOT NULL,
  FLAG_MASTER                     VARCHAR2(1 BYTE) NOT NULL,
  ISTRUZIONE_SQL_FILTRO           CLOB,
  DESCRIZIONE_FILTRO              VARCHAR2(4000 BYTE),
  ANNO_CAMPAGNA                   NUMBER(4),
  FLAG_TITOLARITA_REGIONALE       VARCHAR2(1 BYTE) NOT NULL,
  FLAG_DOMANDA_MULTIPLA           VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  REFERENTE_BANDO                 VARCHAR2(500 BYTE),
  EMAIL_REFERENTE_BANDO           VARCHAR2(100 BYTE),
  FLAG_RIBASSO_INTERVENTI         VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  BOLLETTINO                      VARCHAR2(500 BYTE),
  DATA_PUBBLICAZIONE_BOLLETTINO   DATE,
  CODICE_INTERVENTO_SIGOP         VARCHAR2(20 BYTE),
  FLAG_RENDICONTAZIONE_DOC_SPESA  VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  NUM_RANGE_ANNI_EXPOST           NUMBER,
  ID_RANGE_IDENTIFICATIVO         NUMBER(10),
  ID_EVENTO_CALAMITOSO            NUMBER(10),
  PERC_CONTRIBUTO_MAX_CONCESSA    NUMBER(5,2),
  PERC_CONTRIBUTO_EROGABILE       NUMBER(5,2),
  PERC_RIPARTO_PIANURA            NUMBER(5,2),
  PERC_RIPARTO_MONTAGNA           NUMBER(5,2),
  ID_PROCEDIMENTO_AGRICOLO        NUMBER(4),
  COD_CLASS_REGIONALE             VARCHAR2(100 BYTE),
  COD_CLASS_LIQUIDAZIONE          VARCHAR2(100 BYTE),
  COD_MISURA_REGISTRO             VARCHAR2(100 BYTE)
)
LOB (ISTRUZIONE_SQL_FILTRO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_BANDO.FLAG_TITOLARITA_REGIONALE IS 'Vale S nel caso in cui il bando sia a titolarita'' regionale';

COMMENT ON COLUMN IUF_D_BANDO.BOLLETTINO IS 'pubblicazione del bollettino. Colonna utilizzata per l''invio dei parametri al SIAN';

COMMENT ON COLUMN IUF_D_BANDO.DATA_PUBBLICAZIONE_BOLLETTINO IS 'data di pubblicazione del bollettino. Colonna utilizzata per l''invio dei parametri al SIAN';

COMMENT ON COLUMN IUF_D_BANDO.CODICE_INTERVENTO_SIGOP IS 'nel caso in cui il bando sia multi misura sara'' necessario impostare in questo campo un codice da passare a SIGOP con l''invio delle liste di liquidazione';

COMMENT ON COLUMN IUF_D_BANDO.FLAG_RENDICONTAZIONE_DOC_SPESA IS 'serve ad indicare per quali bandi si prevede il caricamento dei documenti di spesa e la rendicontazione mediante tali documenti. L''impostazione di tale flag associata al bando master viene riportata di default a tutti i bandi da esso derivati';

COMMENT ON COLUMN IUF_D_BANDO.PERC_CONTRIBUTO_MAX_CONCESSA IS 'Percentuale massima del prestito o contributo massimo concedibile per le pratiche di avversita'''' atmosferica danni alle colture (siccita'''', grandine, etc.) a livello di singola amministrazione di competenza (normalmente vale 80%)';

COMMENT ON COLUMN IUF_D_BANDO.PERC_CONTRIBUTO_EROGABILE IS 'Percentuale effettivamente erogabile del prestito o contributo per le pratiche di avversita'' atmosferica danni alle colture (siccita'', grandine, etc.) a livello di singola amministrazione di competenza (non sara'' mai superiore a quella max concedibile)';

COMMENT ON COLUMN IUF_D_BANDO.PERC_RIPARTO_PIANURA IS 'Percentuale del riparto del contributo per le pratiche di danni alle strutture, definita per le aziende con zona altimetrica di tipo pianura o collina';

COMMENT ON COLUMN IUF_D_BANDO.PERC_RIPARTO_MONTAGNA IS 'Percentuale del riparto del contributo per le pratiche di danni alle strutture,definita per le aziende con zona altimetrica di tipo montagna';

COMMENT ON COLUMN IUF_D_BANDO.COD_MISURA_REGISTRO IS 'codice utilizzato per il colloquio con il registro nazionale aiuti';



CREATE TABLE IUF_D_BANDO_AMM_COMPETENZA
(
  ID_BANDO_AMM_COMPETENZA  NUMBER(10)           NOT NULL,
  ID_BANDO                 NUMBER(10)           NOT NULL,
  EXT_ID_AMM_COMPETENZA    NUMBER(4)            NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_CONTROLLO
(
  ID_CONTROLLO        NUMBER(4)                 NOT NULL,
  CODICE              VARCHAR2(20 BYTE)         NOT NULL,
  DESCRIZIONE         VARCHAR2(500 BYTE)        NOT NULL,
  DATA_INIZIO         DATE                      NOT NULL,
  DATA_FINE           DATE,
  DESCRIZIONE_ESTESA  VARCHAR2(2000 BYTE),
  EXTERNAL_CODE       CLOB,
  ID_FONTE_CONTROLLO  NUMBER(4)                 NOT NULL,
  DESC_PARAMETRO      VARCHAR2(4000 BYTE)
)
LOB (EXTERNAL_CODE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_CONTROLLO.DESC_PARAMETRO IS 'Nel caso in cui il controllo necessiti di parametri viene indicata la descrizione del formato';



CREATE TABLE IUF_D_CRITERIO
(
  ID_CRITERIO             NUMBER(4)             NOT NULL,
  CODICE                  VARCHAR2(20 BYTE)     NOT NULL,
  CRITERIO_SELEZIONE      VARCHAR2(4000 BYTE)   NOT NULL,
  SPECIFICHE              VARCHAR2(4000 BYTE)   NOT NULL,
  PUNTEGGIO_MIN           NUMBER(6,2),
  FLAG_ELABORAZIONE       VARCHAR2(1 BYTE)      NOT NULL,
  ID_PRINCIPIO_SELEZIONE  NUMBER(4)             NOT NULL,
  ORDINE                  NUMBER(4)             NOT NULL,
  PUNTEGGIO_MAX           NUMBER(6,2)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_CRITERIO.FLAG_ELABORAZIONE IS 'A automatico, M manuale';



CREATE TABLE IUF_D_DANNO
(
  ID_DANNO         NUMBER(4)                    NOT NULL,
  DESCRIZIONE      VARCHAR2(250 BYTE)           NOT NULL,
  ID_UNITA_MISURA  NUMBER(4),
  NOME_TABELLA     VARCHAR2(30 BYTE),
  CODICE           VARCHAR2(20 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_DANNO.NOME_TABELLA IS 'nome della tabella a cui si riferisce l''id_danno';



CREATE TABLE IUF_D_DESCRIZIONE_INTERVENTO
(
  ID_DESCRIZIONE_INTERVENTO      NUMBER(4)      NOT NULL,
  ID_DESC_INTERVENTO_ASSOCIATO   NUMBER(4),
  DESCRIZIONE                    VARCHAR2(500 BYTE) NOT NULL,
  NOTE                           VARCHAR2(4000 BYTE),
  ID_TIPO_CLASSIFICAZIONE        NUMBER(4)      NOT NULL,
  FLAG_GESTIONE_COSTO_UNITARIO   VARCHAR2(1 BYTE) NOT NULL,
  DATA_CESSAZIONE                DATE,
  ID_TIPO_LOCALIZZAZIONE         NUMBER(4)      NOT NULL,
  FLAG_ELEVATA_INTENSITA_LAVORO  VARCHAR2(1 BYTE) NOT NULL,
  FLAG_CONSUMO_SUOLO             VARCHAR2(1 BYTE) NOT NULL,
  FLAG_INVESTIMENTO_FISSO        VARCHAR2(1 BYTE) NOT NULL,
  FLAG_QUALITA_PROD_PROCESSO     VARCHAR2(1 BYTE) NOT NULL,
  CODICE_IDENTIFICATIVO          VARCHAR2(20 BYTE),
  ID_CATEGORIA_INTERVENTO        NUMBER(4),
  FLAG_SPESE_GENERALI            VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_BENEFICIARIO              VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  ID_FINALITA_AMBIENTALE         NUMBER(4),
  ID_FABBISOGNO                  NUMBER(4)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_DESCRIZIONE_INTERVENTO.ID_DESC_INTERVENTO_ASSOCIATO IS 'legame tra investimento ed intervento associato (es. per l''operazione 6.1.1)';

COMMENT ON COLUMN IUF_D_DESCRIZIONE_INTERVENTO.NOTE IS 'Campo a disposizione per note specifiche sull''utilizzo dell''intervento';

COMMENT ON COLUMN IUF_D_DESCRIZIONE_INTERVENTO.FLAG_CONSUMO_SUOLO IS 'Vale X nel caso in cui il dato non sia significativo per l''intervento in questione';

COMMENT ON COLUMN IUF_D_DESCRIZIONE_INTERVENTO.CODICE_IDENTIFICATIVO IS 'il campo permette di gestire un''informazione puntuale dell''intervento per poterlo riconoscere all''interno di un controllo e/o nelle estrazioni';



CREATE TABLE IUF_D_ELEMENTO_QUADRO
(
  NOME_LABEL                VARCHAR2(500 BYTE)  NOT NULL,
  FLAG_OBBLIGATORIO         VARCHAR2(1 BYTE)    NOT NULL,
  ISTRUZIONE_SQL_CONTROLLI  VARCHAR2(4000 BYTE),
  ID_TIPO_DATO              NUMBER(4)           NOT NULL,
  CODICE                    VARCHAR2(10 BYTE)   NOT NULL,
  ISTRUZIONE_SQL_ELENCO     VARCHAR2(4000 BYTE),
  FLAG_PRESENZA_IN_ELENCO   VARCHAR2(1 BYTE)    NOT NULL,
  ORDINE_VISUALIZZAZIONE    NUMBER(4)           NOT NULL,
  PRECISIONE                NUMBER(4),
  LUNGHEZZA                 NUMBER(5),
  NOTE                      VARCHAR2(4000 BYTE),
  ID_ELEMENTO_QUADRO        NUMBER(10)          NOT NULL,
  LUNGHEZZA_MIN             NUMBER(5),
  FLAG_PROTETTO             VARCHAR2(1 BYTE)    NOT NULL,
  FLAG_STAMPA               VARCHAR2(1 BYTE)    NOT NULL,
  VALORE_DEFAULT            VARCHAR2(100 BYTE),
  ID_QUADRO                 NUMBER(4)           NOT NULL,
  CODICE_ELEM_PADRE         VARCHAR2(10 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_ELEMENTO_QUADRO.FLAG_PROTETTO IS 'se vale ''S'' indica che il dato e'' protetto non modificabile';

COMMENT ON COLUMN IUF_D_ELEMENTO_QUADRO.FLAG_STAMPA IS 'se vale ''S'' significa che il campo deve essere riportato in stampa pratica';



CREATE TABLE IUF_D_ELENCO_QUERY
(
  ID_ELENCO_QUERY          NUMBER(4)            NOT NULL,
  DESCRIZIONE_BREVE        VARCHAR2(200 BYTE)   NOT NULL,
  DESCRIZIONE_ESTESA       VARCHAR2(2000 BYTE)  NOT NULL,
  ISTRUZIONE_SQL           CLOB                 NOT NULL,
  ID_TIPO_VISUALIZZAZIONE  NUMBER(4)            NOT NULL,
  EXCEL_TEMPLATE           BLOB
)
LOB (ISTRUZIONE_SQL) STORE AS (
  TABLESPACE  IUFFI_LOB)
LOB (EXCEL_TEMPLATE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_FOCUS_AREA
(
  ID_FOCUS_AREA  NUMBER(4)                      NOT NULL,
  ID_PRIORITA    NUMBER(4)                      NOT NULL,
  CODICE         VARCHAR2(3 BYTE)               NOT NULL,
  DESCRIZIONE    VARCHAR2(500 BYTE)             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_GG_LAVORATE
(
  ID_GG_LAVORATE           NUMBER(10)           NOT NULL,
  EXT_ID_UTILIZZO          NUMBER(10)           NOT NULL,
  EXT_ID_ZONA_ALTIMETRICA  NUMBER(10)           NOT NULL,
  GIORNATE_LAVORATE_MIN    NUMBER(6,1),
  GIORNATE_LAVORATE_MEDIE  NUMBER(6,1)          NOT NULL,
  GIORNATE_LAVORATE_MAX    NUMBER(6,1)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_GG_LAVORATE.GIORNATE_LAVORATE_MIN IS 'Indica il numero di giornate minime lavorative per Ha in base all''utilizzo ed alla zona altimetrica del comune (istat)';

COMMENT ON COLUMN IUF_D_GG_LAVORATE.GIORNATE_LAVORATE_MEDIE IS 'Indica il numero di giornate medie lavorative per Ha in base all''utilizzo ed alla zona altimetrica del comune (istat)';

COMMENT ON COLUMN IUF_D_GG_LAVORATE.GIORNATE_LAVORATE_MAX IS 'Indica il numero di giornate massime lavorative per Ha in base all''utilizzo ed alla zona altimetrica del comune (istat)';



CREATE TABLE IUF_D_LEGAME_INFO
(
  ID_LEGAME_INFO            NUMBER(10)          NOT NULL,
  ID_VINCOLO_DICHIARAZIONE  NUMBER(4)           NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_D_LEGAME_INFO IS 'Le informazione che tra di loro possono essere legate da un vincolo avranno su questa tabella un record che lega con il tipo vincolo e le info tra di loro legate';



CREATE TABLE IUF_D_LIVELLO
(
  ID_LIVELLO             NUMBER(4)              NOT NULL,
  CODICE                 VARCHAR2(20 BYTE)      NOT NULL,
  DESCRIZIONE            VARCHAR2(1000 BYTE)    NOT NULL,
  ID_SETTORE             NUMBER(4),
  ID_TIPOLOGIA_LIVELLO   NUMBER(4)              NOT NULL,
  ID_TIPO_LIVELLO        NUMBER(4),
  ID_EDIZIONE_PSR        NUMBER(4)              NOT NULL,
  FLAG_AMBITO            VARCHAR2(1 BYTE)       NOT NULL,
  ORDINAMENTO            NUMBER(15)             NOT NULL,
  DATA_INIZIO            DATE                   NOT NULL,
  DATA_FINE              DATE,
  FLAG_PROPOSTA_GAL      VARCHAR2(1 BYTE)       NOT NULL,
  CODICE_PROPOSTA_GAL    VARCHAR2(20 BYTE),
  CODICE_LIVELLO         VARCHAR2(20 BYTE),
  FLAG_VERCOD            VARCHAR2(1 BYTE)       DEFAULT 'N'                   NOT NULL,
  FLAG_ANTICIPO          VARCHAR2(1 BYTE)       DEFAULT 'N'                   NOT NULL,
  INVIA_A_SIGOP          VARCHAR2(10 BYTE),
  EXT_ID_DECO_TIPO_DOCU  NUMBER(4)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_LIVELLO.FLAG_AMBITO IS 'Vale S nel caso in cui nella gerarchia del piano finanziario prima delle figlie devono essere presenti tutti gli ambiti tematici';

COMMENT ON COLUMN IUF_D_LIVELLO.ORDINAMENTO IS 'colonna valorizzata tramite la funzione FNC_IUF_ORDINAMENTO_LIVELLO';

COMMENT ON COLUMN IUF_D_LIVELLO.CODICE_PROPOSTA_GAL IS 'E'' il codice del tipo operazione proposto da un GAL';

COMMENT ON COLUMN IUF_D_LIVELLO.FLAG_ANTICIPO IS 'L''anticipo sara'' calcolato ed erogato solo per le operazioni delle misure ad invesitmento per cui FLAG_ANTICIPO = ''S''';



CREATE TABLE IUF_D_LIV_FOCUS_AREA_PRINCIP
(
  ID_LIVELLO     NUMBER(4)                      NOT NULL,
  ID_FOCUS_AREA  NUMBER(4)                      NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_NUMERO_LOTTO
(
  ID_NUMERO_LOTTO                NUMBER(4)      NOT NULL,
  DATA_ELABORAZIONE              DATE           NOT NULL,
  DESCRIZIONE                    VARCHAR2(200 BYTE) NOT NULL,
  ID_TIPO_ESTRAZIONE             NUMBER(4),
  ID_STATO_ESTRAZIONE            NUMBER(4),
  IMPORTO_RICHIESTO_COMPLESSIVO  NUMBER(12,2),
  IMPORTO_RICHIESTO_ESTRAZIONE   NUMBER(12,2),
  DATA_CUTOFF                    DATE,
  NUMERO_ESTRAZIONE              NUMBER(4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_OGUR_DA_REGIONE
(
  ID_OGUR_DA_REGIONE    NUMBER(4)               NOT NULL,
  DISTRETTO_REGIONE     NUMBER(4)               NOT NULL,
  ANNO                  NUMBER(4)               NOT NULL,
  CUAA                  VARCHAR2(16 BYTE)       NOT NULL,
  NOMIN_DISTRETTO       VARCHAR2(250 BYTE)      NOT NULL,
  SUPERFICIE_DISTRETTO  NUMBER(10,4)            NOT NULL,
  SUS                   NUMBER(10,4)            NOT NULL,
  PERCENTUALE           NUMBER(5,2)             NOT NULL,
  ID_SPECIE_OGUR        NUMBER(4)               NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_D_OGUR_DA_REGIONE IS 'Tabella dati forniti da Regione relativi a OGUR non inseriti da applicativo ma ricevuti via PEC';



CREATE TABLE IUF_D_PRODUZIONE
(
  ID_PRODUZIONE             NUMBER(4)           NOT NULL,
  EXT_ID_CATEGORIA_ANIMALE  NUMBER(4)           NOT NULL,
  DESCRIZIONE               VARCHAR2(60 BYTE)   NOT NULL,
  ID_UNITA_MISURA           NUMBER(4)           NOT NULL,
  QUANTITA_PRODOTTA_MIN     NUMBER(6,1),
  QUANTITA_PRODOTTA_MEDIA   NUMBER(6,1)         NOT NULL,
  QUANTITA_PRODOTTA_MAX     NUMBER(6,1),
  PREZZO_MIN                NUMBER(7,2),
  PREZZO_MEDIO              NUMBER(7,2)         NOT NULL,
  PREZZO_MAX                NUMBER(7,2)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_PRODUZIONE.EXT_ID_CATEGORIA_ANIMALE IS 'puntamento a SMRGAA_V_ALLEVAMENTI.id_categoria_animale';

COMMENT ON COLUMN IUF_D_PRODUZIONE.DESCRIZIONE IS 'Descrizione del tipo di produzione: carne, latte uova';

COMMENT ON COLUMN IUF_D_PRODUZIONE.ID_UNITA_MISURA IS 'unita'' di misura in base al tipo di produzione, es: quintali, kg, numero (nel caso di uova)';

COMMENT ON COLUMN IUF_D_PRODUZIONE.QUANTITA_PRODOTTA_MIN IS 'Produzione minima del tipo prodotto in base alla categoria animale espressa nell''unita'' di misura per ogni singolo capo (o famiglia o altro a seconda della categoria animale)';

COMMENT ON COLUMN IUF_D_PRODUZIONE.QUANTITA_PRODOTTA_MEDIA IS 'Produzione media del tipo prodotto in base alla categoria animale espressa nell''unita'' di misura per ogni singolo capo (o famiglia o altro a seconda della categoria animale)';

COMMENT ON COLUMN IUF_D_PRODUZIONE.QUANTITA_PRODOTTA_MAX IS 'Produzione massima del tipo prodotto in base alla categoria animale espressa nell''unita'' di misura per ogni singolo capo (o famiglia o altro a seconda della categoria animale)';

COMMENT ON COLUMN IUF_D_PRODUZIONE.PREZZO_MIN IS 'Prezzo minimo del tipo prodotto; viene espresso in base all''unita'' di misura';

COMMENT ON COLUMN IUF_D_PRODUZIONE.PREZZO_MEDIO IS 'Prezzo medio del tipo prodotto; viene espresso in base all''unita'' di misura';

COMMENT ON COLUMN IUF_D_PRODUZIONE.PREZZO_MAX IS 'Prezzo massimo del tipo prodotto; viene espresso in base all''unita'' di misura';



CREATE TABLE IUF_D_PRODUZIONE_CERTIFICATA
(
  ID_PRODUZIONE_CERTIFICATA  NUMBER(4)          NOT NULL,
  DESCRIZIONE                VARCHAR2(200 BYTE) NOT NULL,
  ID_TIPO_PRODUZIONE         NUMBER(2)          NOT NULL,
  ID_REGIME_QUALITA          NUMBER(2)          NOT NULL,
  DATA_INIZIO_VALIDITA       DATE               NOT NULL,
  DATA_FINE_VALIDITA         DATE,
  ORDINAMENTO                NUMBER(3)          NOT NULL,
  EXT_ID_PRODOTTO_GUF        NUMBER(10)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_PRODUZIONE_CERTIFICATA.ORDINAMENTO IS 'ordinamento nell''ambito del tipo produzione';



CREATE TABLE IUF_D_PRODUZIONE_HA
(
  ID_PRODUZIONE_HA         NUMBER(4)            NOT NULL,
  EXT_ID_UTILIZZO          NUMBER(10)           NOT NULL,
  EXT_ID_ZONA_ALTIMETRICA  NUMBER(4)            NOT NULL,
  PRODUZIONE_HA_MIN        NUMBER(8,2),
  PRODUZIONE_HA_MEDIA      NUMBER(8,2)          NOT NULL,
  PRODUZIONE_HA_MAX        NUMBER(8,2)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_D_PRODUZIONE_HA IS 'Tabella che conterr?? i valori di produzione (e relativi estremi del range) non solo per utilizzo, ma anche per zona altimetrica';



CREATE TABLE IUF_D_PRODUZIONE_TRADIZIONAL
(
  ID_PRODUZIONE_TRADIZIONALE  NUMBER(4)         NOT NULL,
  DESCRIZIONE                 VARCHAR2(200 BYTE) NOT NULL,
  ID_TIPO_PRODUZIONE          NUMBER(4)         NOT NULL,
  DATA_INIZIO_VALIDITA        DATE              NOT NULL,
  DATA_FINE_VALIDITA          DATE,
  ORDINAMENTO                 NUMBER(3)         NOT NULL,
  EXT_ID_PRODOTTO_GUF         NUMBER(10)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_PRODUZIONE_TRADIZIONAL.ORDINAMENTO IS 'ordinamento nell''ambito del tipo produzione';



CREATE TABLE IUF_D_SANZIONE_INVESTIMENTO
(
  ID_SANZIONE_INVESTIMENTO  NUMBER(4)           NOT NULL,
  ID_TIPOLOGIA_SANZIONE     NUMBER(4)           NOT NULL,
  DESCRIZIONE               VARCHAR2(200 BYTE)  NOT NULL,
  DATA_FINE                 DATE,
  CODICE_IDENTIFICATIVO     VARCHAR2(20 BYTE)   NOT NULL,
  X603                      VARCHAR2(1 BYTE),
  ESCLUDI_X105              VARCHAR2(1 BYTE),
  FLAG_IACS                 VARCHAR2(20 BYTE),
  ESCLUDI_X508B             VARCHAR2(1 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_SANZIONE_INVESTIMENTO.X603 IS 'utilizzato per la compilazione della Tabella delle X';

COMMENT ON COLUMN IUF_D_SANZIONE_INVESTIMENTO.ESCLUDI_X105 IS 'Se Null e'' da considerare per la compilazione della Tabella delle X';



CREATE TABLE IUF_D_SCORTA
(
  ID_SCORTA        NUMBER(4)                    NOT NULL,
  DESCRIZIONE      VARCHAR2(250 BYTE)           NOT NULL,
  ID_UNITA_MISURA  NUMBER(4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_TIPO_DANNO_FAUNA
(
  ID_TIPO_DANNO_FAUNA   NUMBER(4)               NOT NULL,
  DESCRIZIONE           VARCHAR2(250 BYTE)      NOT NULL,
  DATA_INIZIO_VALIDITA  DATE,
  DATA_FINE_VALIDITA    DATE,
  ID_UNITA_MISURA       NUMBER(4)               NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_VOCE_ELEMENTO
(
  ID_VOCE_ELEMENTO        NUMBER(4)             NOT NULL,
  VALORE                  VARCHAR2(100 BYTE)    NOT NULL,
  ID_ELEMENTO_QUADRO      NUMBER(10)            NOT NULL,
  CODICE                  VARCHAR2(4 BYTE)      NOT NULL,
  ORDINE_VISUALIZZAZIONE  NUMBER(4)             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_L_LOG_BATCH
(
  ID_LOG_BATCH       NUMBER                     NOT NULL,
  ID_PROCESSO_BATCH  NUMBER                     NOT NULL,
  DT_INSERIMENTO     DATE                       NOT NULL,
  MESSAGGIO_ERRORE   VARCHAR2(1000 BYTE),
  CODICE_ERRORE      VARCHAR2(10 BYTE)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_AGGREGAZIONE_INTERVENT
(
  ID_AGGREGAZIONE_INTERVENTI      NUMBER(10)    NOT NULL,
  ID_TIPO_AGGREGAZIONE            NUMBER(4)     NOT NULL,
  ID_TIPO_AGGREGAZIONE_PRIMO_LIV  NUMBER(4)     NOT NULL,
  ID_DESCRIZIONE_INTERVENTO       NUMBER(4)     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_BANDO_COMUNE
(
  ID_BANDO_COMUNE   NUMBER(10)                  NOT NULL,
  ID_BANDO          NUMBER(10)                  NOT NULL,
  EXT_ISTAT_COMUNE  VARCHAR2(6 BYTE)            NOT NULL,
  FLAG_FOGLIO       VARCHAR2(1 BYTE)            NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_BANDO_COMUNE.FLAG_FOGLIO IS 'se valorizzato a N vuol dire che tutto il comune e'' associato al bando; se valorizzato a S invece andiamo sulla IUF_R_BANDO_COMUNE_FOGLIO per individuare quali fogli del comune sono associati';



CREATE TABLE IUF_R_BANDO_COMUNE_FOGLIO
(
  ID_BANDO_COMUNE  NUMBER(10)                   NOT NULL,
  EXT_FOGLIO       NUMBER(4)                    NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_BANDO_FILIERA
(
  ID_BANDO         NUMBER(10)                   NOT NULL,
  ID_TIPO_FILIERA  NUMBER(4)                    NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_BANDO_MASTER
(
  ID_BANDO         NUMBER(10)                   NOT NULL,
  ID_BANDO_MASTER  NUMBER(10)                   NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_BANDO_OGGETTO
(
  ID_BANDO                  NUMBER(10)          NOT NULL,
  ID_BANDO_OGGETTO          NUMBER(10)          NOT NULL,
  ID_LEGAME_GRUPPO_OGGETTO  NUMBER(10)          NOT NULL,
  DATA_INIZIO               DATE                NOT NULL,
  DATA_FINE                 DATE,
  FLAG_ATTIVO               VARCHAR2(1 BYTE)    NOT NULL,
  DATA_RITARDO              DATE,
  OGGETTO_RICEVUTA          VARCHAR2(500 BYTE),
  CORPO_RICEVUTA            CLOB,
  FLAG_PROTOCOLLA_RICEVUTA  VARCHAR2(1 BYTE)    DEFAULT 'N'                   NOT NULL
)
LOB (CORPO_RICEVUTA) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_BANDO_OGGETTO.DATA_RITARDO IS 'Sara'' valorizzata per le istanze presentate dai beneficiari';



CREATE TABLE IUF_R_BANDO_OGGETTO_CONTROLL
(
  GRAVITA              VARCHAR2(1 BYTE)         NOT NULL,
  ID_BANDO_OGGETTO     NUMBER(10)               NOT NULL,
  ID_CONTROLLO         NUMBER(4)                NOT NULL,
  FLAG_GIUSTIFICABILE  VARCHAR2(1 BYTE)         DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_BANDO_OGGETTO_ICONA
(
  ID_BANDO_OGGETTO  NUMBER(10)                  NOT NULL,
  ID_OGGETTO_ICONA  NUMBER(10)                  NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_BANDO_OGGETTO_QUADRO
(
  ID_QUADRO_OGGETTO  NUMBER(10)                 NOT NULL,
  ID_BANDO_OGGETTO   NUMBER(10)                 NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_BANDO_PREMIO_ALLEVAM
(
  ID_BANDO                  NUMBER(10)          NOT NULL,
  EXT_ID_SPECIE_ANIMALE     NUMBER(4)           NOT NULL,
  EXT_ID_CATEGORIA_ANIMALE  NUMBER(4)           NOT NULL,
  IMPORTO_UNITARIO          NUMBER(12,2)        NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_BANDO_PREMIO_ALLEVAM.EXT_ID_SPECIE_ANIMALE IS 'fa riferimento a SMRGAA_V_ALLEVAMENTI';

COMMENT ON COLUMN IUF_R_BANDO_PREMIO_ALLEVAM.EXT_ID_CATEGORIA_ANIMALE IS 'fa riferimento a SMRGAA_V_ALLEVAMENTI';

COMMENT ON COLUMN IUF_R_BANDO_PREMIO_ALLEVAM.IMPORTO_UNITARIO IS 'importo per euro/ha';



CREATE TABLE IUF_R_BANDO_PREMIO_COLTURA
(
  ID_BANDO          NUMBER(10)                  NOT NULL,
  EXT_ID_UTILIZZO   NUMBER(10)                  NOT NULL,
  IMPORTO_UNITARIO  NUMBER(12,2)                NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_BANDO_PREMIO_COLTURA.EXT_ID_UTILIZZO IS 'fa riferimento a SMRGAA_V_CONDUZIONE_UTILIZZO';

COMMENT ON COLUMN IUF_R_BANDO_PREMIO_COLTURA.IMPORTO_UNITARIO IS 'importo per euro/ha';



CREATE TABLE IUF_R_BANDO_UTILIZZO_DANNO
(
  ID_BANDO         NUMBER(10)                   NOT NULL,
  EXT_ID_UTILIZZO  NUMBER(10)                   NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_BAN_OG_QUA_CON_AMM_LIV
(
  ID_BANDO_OGGETTO             NUMBER(10)       NOT NULL,
  ID_QUADRO_OGG_CONTROLLO_AMM  NUMBER(10)       NOT NULL,
  ID_LIVELLO                   NUMBER(4)        NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_DANNO_INTERVENTO
(
  ID_DANNO                   NUMBER(4)          NOT NULL,
  ID_DESCRIZIONE_INTERVENTO  NUMBER(4)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_DANNO_SPECIE
(
  ID_DANNO_SPECIE      NUMBER(10)               NOT NULL,
  ID_TIPO_DANNO_FAUNA  NUMBER(4)                NOT NULL,
  ID_SPECIE_FAUNA      NUMBER(4)                NOT NULL,
  DATA_INIZIO          DATE                     NOT NULL,
  DATA_FINE            DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_ELENCO_QUERY_BANDO
(
  ID_ELENCO_QUERY  NUMBER(4)                    NOT NULL,
  ID_BANDO         NUMBER(10)                   NOT NULL,
  ORDINAMENTO      NUMBER(4)                    NOT NULL,
  EXT_COD_ATTORE   VARCHAR2(50 BYTE)            NOT NULL,
  FLAG_VISIBILE    VARCHAR2(1 BYTE)             DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_ELENCO_QUERY_BANDO.EXT_COD_ATTORE IS 'codice dell''attore presente su PAPUA';



CREATE TABLE IUF_R_FONDO
(
  ID_BANDO                     NUMBER(10)       NOT NULL,
  ID_TIPO_IMPORTO              NUMBER(4)        NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_INFO_CATALOGO
(
  ID_LIVELLO               NUMBER(4)            NOT NULL,
  ID_QUADRO_OGGETTO        NUMBER(10)           NOT NULL,
  ID_GRUPPO_INFO_CATALOGO  NUMBER(10)           NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_LIVELLO_BANDO
(
  ID_LIVELLO                      NUMBER(4)     NOT NULL,
  ID_BANDO                        NUMBER(10)    NOT NULL,
  PERCENTUALE_CONTRIBUTO_MINIMA   NUMBER(5,2),
  PERCENTUALE_CONTRIBUTO_MASSIMA  NUMBER(5,2),
  MASSIMALE_SPESA                 NUMBER(12,2)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_LIVELLO_CRITERIO
(
  ID_LIVELLO_CRITERIO  NUMBER(10)               NOT NULL,
  ID_LIVELLO           NUMBER(4)                NOT NULL,
  ID_CRITERIO          NUMBER(4)                NOT NULL,
  RAGGRUPPAMENTO       VARCHAR2(100 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_LIVELLO_FG_TIPOLOGIA
(
  ID_LIVELLO           NUMBER(4)                NOT NULL,
  EXT_ID_FG_TIPOLOGIA  NUMBER(4)                NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_LIVELLO_FG_TIPOLOGIA.EXT_ID_FG_TIPOLOGIA IS 'punta alla tabella di anagrafe DB_TIPO_FG_TIPOLOGIA. Per il dettaglio dei dati utilizzare la vista IUF_V_TIPOLOGIA_AZIENDA';



CREATE TABLE IUF_R_LIVELLO_FOCUS_AREA
(
  ID_LIVELLO_FOCUS_AREA  NUMBER(10)             NOT NULL,
  ID_FOCUS_AREA          NUMBER(4)              NOT NULL,
  ID_LIVELLO             NUMBER(4)              NOT NULL,
  IMPORTO                NUMBER(12,2),
  ID_PIANO_FINANZIARIO   NUMBER(10)             NOT NULL,
  IMPORTO_TRASCINATO     NUMBER(12,2)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_R_LIVELLO_FOCUS_AREA IS 'Ad ogni creazione di un piano finanziario, viene inserito un record per ogni record presente sulla IUF_D_LIVELLO';



CREATE TABLE IUF_R_LIVELLO_INTERVENTO
(
  ID_LIVELLO                 NUMBER(4)          NOT NULL,
  ID_DESCRIZIONE_INTERVENTO  NUMBER(4)          NOT NULL,
  FLAG_DOCUMENTO_SPESA       VARCHAR2(1 BYTE)   DEFAULT 'S'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_LIVELLO_PADRE
(
  ID_LIVELLO        NUMBER(4)                   NOT NULL,
  ID_LIVELLO_PADRE  NUMBER(4)                   NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_LIVELLO_SETTORE_PROD
(
  ID_LIVELLO             NUMBER(4)              NOT NULL,
  ID_SETTORE_PRODUZIONE  NUMBER(4)              NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_LIV_FOCUS_AREA_SECONDA
(
  ID_LIVELLO     NUMBER(4)                      NOT NULL,
  ID_FOCUS_AREA  NUMBER(4)                      NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_LIV_PIANO_FINANZIARIO
(
  ID_LIVELLO                 NUMBER(4)          NOT NULL,
  ID_TIPO_PIANO_FINANZIARIO  NUMBER(4)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_MISURAZIONE_INTERVENTO
(
  ID_MISURAZIONE_INTERVENTO  NUMBER(10)         NOT NULL,
  ID_DESCRIZIONE_INTERVENTO  NUMBER(4)          NOT NULL,
  ID_UNITA_MISURA            NUMBER(4),
  DESCRIZIONE                VARCHAR2(200 BYTE) NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_R_MISURAZIONE_INTERVENTO IS 'Gestione della misurazione dell''intervento';



CREATE TABLE IUF_R_PROCEDIMENTO_AGRIC_LIV
(
  ID_PROCEDIMENTO_AGRICOLO  NUMBER(4)           NOT NULL,
  ID_LIVELLO                NUMBER(4)           NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_QUADRO_OGG_CONTROL_AMM
(
  ID_QUADRO_OGG_CONTROLLO_AMM  NUMBER(10)       NOT NULL,
  ID_QUADRO_OGGETTO            NUMBER(10)       NOT NULL,
  ID_CONTROLLO_AMMINISTRATIVO  NUMBER(4)        NOT NULL,
  FLAG_OBBLIGATORIO            VARCHAR2(1 BYTE) NOT NULL,
  DATA_FINE_VALIDITA           DATE
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_QUADRO_OGG_CONTROL_AMM.DATA_FINE_VALIDITA IS 'se valorizzata non e'' piu'' utlizzabile nel cruscotto bandi';



CREATE TABLE IUF_R_QUADRO_OGGETTO_CONTROL
(
  ID_CONTROLLO                 NUMBER(4)        NOT NULL,
  FLAG_OBBLIGATORIO            VARCHAR2(1 BYTE) NOT NULL,
  GRAVITA                      VARCHAR2(1 BYTE) NOT NULL,
  ID_QUADRO_OGGETTO            NUMBER(10)       NOT NULL,
  ID_QUADRO_OGGETTO_CONTROLLO  NUMBER(10)       NOT NULL,
  FLAG_GIUSTIFICABILE          VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_RIPARTIZIONE_CONTRIBUT
(
  ID_VOCE_RIPARTIZIONE        NUMBER(4)         NOT NULL,
  ID_TIPO_IMPORTO             NUMBER(4)         NOT NULL,
  ID_LIVELLO                  NUMBER(4)         NOT NULL,
  PERCENTUALE_RIPARTIZIONE    NUMBER(7,4)       NOT NULL,
  FLAG_CRITERIO_RIPARTIZIONE  VARCHAR2(1 BYTE)  NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_RIPARTIZIONE_CONTRIBUT.FLAG_CRITERIO_RIPARTIZIONE IS 'valori possibili: ''P'' sta per calcolato sulla base della percentuale, ''D'' calcolato per differenza';



CREATE TABLE IUF_R_SOLUZIONE_CONTROLLO
(
  ID_TIPO_SOLUZIONE  NUMBER(4)                  NOT NULL,
  ID_CONTROLLO       NUMBER(4)                  NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_TIPO_DOC_RIC_BANDO_OGG
(
  ID_TIPO_DOC_RIC_OGGETTO  NUMBER(10)           NOT NULL,
  ID_BANDO_OGGETTO         NUMBER(10)           NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ALLEGATI_GRADUATORIA
(
  ID_ALLEGATI_GRADUATORIA  NUMBER(10)           NOT NULL,
  NOME_FILE                VARCHAR2(255 BYTE)   NOT NULL,
  DESCRIZIONE              VARCHAR2(200 BYTE)   NOT NULL,
  FILE_ALLEGATO            BLOB                 NOT NULL,
  ID_GRADUATORIA           NUMBER(10)           NOT NULL
)
LOB (FILE_ALLEGATO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ANOMALIA_PARTICELLA
(
  ID_ANOMALIA_PARTICELLA  NUMBER(10)            NOT NULL,
  ID_PARTICELLA_UTILIZZO  NUMBER(10)            NOT NULL,
  ID_CONTROLLO            NUMBER(4)             NOT NULL,
  DESCRIZIONE_ANOMALIA    VARCHAR2(1000 BYTE)   NOT NULL,
  ULTERIORI_INFORMAZIONI  VARCHAR2(2000 BYTE),
  GRAVITA                 VARCHAR2(1 BYTE)      NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ATTIVITA_BANDO_OGGETTO
(
  ID_ATTIVITA_BANDO_OGGETTO    NUMBER(10)       NOT NULL,
  ID_BANDO_OGGETTO             NUMBER(10)       NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL,
  DESC_ATTIVITA                VARCHAR2(200 BYTE) NOT NULL,
  NOTE                         VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_CONCESSIONE
(
  ID_CONCESSIONE               NUMBER(10)       NOT NULL,
  ID_BANDO                     NUMBER(10)       NOT NULL,
  EXT_ID_AMM_COMPETENZA        NUMBER(4)        NOT NULL,
  DATA_PROTOCOLLO              DATE,
  NUMERO_PROTOCOLLO            NUMBER(8),
  ID_TIPO_CONCESSIONE          NUMBER(4),
  NOTE                         NCLOB,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_VIS_MASSIVA_RNA       NUMBER(10),
  FLAG_AZIENDE_INVIATE_RNA     VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL
)
LOB (NOTE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ESTRAZIONE_CAMPIONE
(
  ID_ESTRAZIONE_CAMPIONE    NUMBER(10)          NOT NULL,
  ID_TIPO_ESTRAZIONE        NUMBER(4)           NOT NULL,
  DATA_ESTRAZIONE           DATE                NOT NULL,
  DESCRIZIONE               VARCHAR2(500 BYTE)  NOT NULL,
  FLAG_APPROVATA            VARCHAR2(1 BYTE)    NOT NULL,
  DATA_ANNULLAMENTO         DATE,
  MOTIVAZIONE_ANNULLAMENTO  VARCHAR2(2000 BYTE),
  INFO_AGGIUNTIVE           VARCHAR2(2000 BYTE),
  ID_NUMERO_LOTTO           NUMBER(4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_FILE_FLUSSO_ANOM_SIGOP
(
  ID_FILE_FLUSSO_ANOM_SIGOP  NUMBER(10)         NOT NULL,
  ID_FLUSSO_ANOM_SIGOP       NUMBER(10)         NOT NULL,
  TIPO_RECORD                VARCHAR2(2 BYTE),
  CONTENUTO_RECORD           VARCHAR2(2000 BYTE) NOT NULL,
  ORDINAMENTO                NUMBER(10)         NOT NULL,
  CODICE_FONDO               VARCHAR2(20 BYTE),
  ID_FONTE_LISTA             NUMBER(4),
  CODICE_FONTE               VARCHAR2(10 BYTE),
  NUMERO_LISTA               NUMBER(4),
  DATA_CREAZIONE_LISTA       DATE,
  EXT_ID_AMM_COMPETENZA      NUMBER(4),
  ANNO_CAMPAGNA              NUMBER(4),
  DENOM_INTERVENTO           VARCHAR2(120 BYTE),
  CODICE_INTERVENTO          VARCHAR2(50 BYTE),
  CODICE_AGEA                VARCHAR2(20 BYTE),
  NUMERO_PAGAMENTO           NUMBER(11),
  TIPO_PAGAMENTO             VARCHAR2(5 BYTE),
  CUAA                       VARCHAR2(16 BYTE),
  RAGIONE_SOCIALE            VARCHAR2(500 BYTE),
  DATA_OPERAZIONE            DATE,
  DESC_STATO_AVANZAMENTO     VARCHAR2(40 BYTE),
  NOTE                       VARCHAR2(500 BYTE),
  CONTROLLO                  VARCHAR2(5 BYTE),
  BLOCCANTE                  VARCHAR2(1 BYTE),
  DESC_ANOMALIA              VARCHAR2(500 BYTE),
  IMPORTO                    NUMBER(12,2)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_IMPORTI_ESTRAZ_DP
(
  ID_IMPORTI_ESTRAZ_DP            NUMBER(10)    NOT NULL,
  ID_NUMERO_LOTTO                 NUMBER(4)     NOT NULL,
  ID_LIVELLO                      NUMBER(4),
  IMPORTO_RICHIESTO               NUMBER(12,2),
  TIPO_IMPORTO                    VARCHAR2(1 BYTE),
  PROGRESSIVO                     NUMBER(2),
  IMPORTO_RICHIESTO_PARTE_CASUAL  NUMBER(12,2)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_IMPORTI_ESTRAZ_DP.TIPO_IMPORTO IS 'varra'' solo C=importo Complessivo, A=importo estrazione Attuale, P=importo estrazioni Pregresse';



CREATE TABLE IUF_T_IMPORTO_DICHIARAZIONE
(
  ID_IMPORTO_DICHIARAZIONE  NUMBER(10)          NOT NULL,
  ID_DICHIARAZIONE_SPESA    NUMBER(10)          NOT NULL,
  ID_LIVELLO                NUMBER(4)           NOT NULL,
  ID_FOCUS_AREA             NUMBER(4),
  ID_PRIORITA               NUMBER(4),
  IMPORTO_SPESA             NUMBER(12,2)        NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ITER_CONCESSIONE
(
  ID_ITER_CONCESSIONE          NUMBER(10)       NOT NULL,
  ID_CONCESSIONE               NUMBER(10)       NOT NULL,
  ID_STATO_CONCESSIONE         NUMBER(4)        NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_AGGIORNAMENTO           DATE             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ITER_PIANO_FINANZIARIO
(
  ID_ITER_PIANO_FINANZIARIO    NUMBER(10)       NOT NULL,
  ID_PIANO_FINANZIARIO         NUMBER(10)       NOT NULL,
  ID_STATO_PIANO_FINANZIARIO   NUMBER(4)        NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER           NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_ITER_PIANO_FINANZIARIO IS 'Saranno presenti tutti i cambiamenti di stato comprensivo di quello corrente';



CREATE TABLE IUF_T_LISTA_LIQUIDAZIONE
(
  ID_LISTA_LIQUIDAZIONE        NUMBER(10)       NOT NULL,
  ID_BANDO                     NUMBER(10)       NOT NULL,
  FLAG_AMM_COMPETENZA          VARCHAR2(1 BYTE) DEFAULT 'S' NOT NULL,
  NUMERO_LISTA                 NUMBER(4)        NOT NULL,
  DATA_CREAZIONE               DATE             NOT NULL,
  FLAG_STATO_LISTA             VARCHAR2(1 BYTE) DEFAULT 'B' NOT NULL,
  NOTE                         VARCHAR2(4000 BYTE),
  DATA_APPROVAZIONE            DATE,
  EXT_ID_TECNICO_LIQUIDATORE   NUMBER(4),
  FLAG_INVIO_SIGOP             VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  DATA_INVIO_SIGOP             DATE,
  ID_TIPO_IMPORTO              NUMBER(4)        DEFAULT 1                     NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  EXT_ID_AMM_COMPETENZA        NUMBER(4)        NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_LISTA_LIQUIDAZIONE.FLAG_AMM_COMPETENZA IS 'serve ad esplicitare se sono previste tutte le amministrazioni di competenza o se ne sono state specificate solo alcune';

COMMENT ON COLUMN IUF_T_LISTA_LIQUIDAZIONE.FLAG_STATO_LISTA IS 'B = bozza, A = approvata, D = Da approvare, T = Trasmessa';



CREATE TABLE IUF_T_PROCEDIMENTO
(
  ID_PROCEDIMENTO               NUMBER(10)      NOT NULL,
  ID_BANDO                      NUMBER(10)      NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO   NUMBER(10)      NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO     DATE            NOT NULL,
  ID_STATO_OGGETTO              NUMBER(4)       NOT NULL,
  CODICE_CUP                    VARCHAR2(20 BYTE),
  IDENTIFICATIVO                VARCHAR2(20 BYTE),
  ID_SETTORE_PRODUZIONE         NUMBER(4),
  FLAG_RENDICONTAZIONE_CON_IVA  VARCHAR2(1 BYTE) DEFAULT 'X' NOT NULL,
  NUMERO_VERCOD                 NUMBER(10),
  DATA_VISURA                   DATE,
  ID_PROCEDIMENTO_AGRICOLO      NUMBER(4)       NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_PROCEDIMENTO.ID_STATO_OGGETTO IS 'contiene lo stato corrente del procedimento';

COMMENT ON COLUMN IUF_T_PROCEDIMENTO.FLAG_RENDICONTAZIONE_CON_IVA IS 'S: rendicontazione con IVA, N: rendicontazione senza IVA, X: non impostato';



CREATE TABLE IUF_T_PROCEDIMENTO_AZIENDA
(
  ID_PROCEDIMENTO_AZIENDA      NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO              NUMBER(10)       NOT NULL,
  EXT_ID_AZIENDA               NUMBER(10)       NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  NOTE                         VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PROCEDIMENTO_CONTO_COR
(
  ID_PROCEDIMENTO_CONTO_CORR  NUMBER(10)        NOT NULL,
  EXT_ID_CONTO_CORRENTE       NUMBER(10)        NOT NULL,
  ID_PROCEDIMENTO             NUMBER(10)        NOT NULL,
  DATA_INIZIO                 DATE              NOT NULL,
  DATA_FINE                   DATE
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_PROCEDIMENTO_CONTO_COR.EXT_ID_CONTO_CORRENTE IS 'contiene il legame con PK della tabella anagrafica DB_CONTO_CORRENTE';



CREATE TABLE IUF_T_PROCEDIMENTO_GRUPPO
(
  ID_PROCEDIMENTO_GRUPPO       NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO              NUMBER(10)       NOT NULL,
  CODICE_RAGGRUPPAMENTO        NUMBER(4)        NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  FLAG_GRUPPO_CHIUSO           VARCHAR2(1 BYTE) NOT NULL,
  DATA_FINE                    DATE,
  MOTIVAZIONI                  VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_PROCEDIMENTO_GRUPPO IS 'propedeutica all''implementazione di alcuni vincoli (es. non si deve poter creare un oggetto all''interno di un gruppo con FLAG_GRUPPO_CHIUSO = ''S'')';



CREATE TABLE IUF_T_PROCEDIMENTO_OGGETTO
(
  ID_PROCEDIMENTO_OGGETTO         NUMBER(10)    NOT NULL,
  ID_PROCEDIMENTO                 NUMBER(10)    NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO     NUMBER(10)    NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO       DATE          NOT NULL,
  IDENTIFICATIVO                  VARCHAR2(20 BYTE),
  DATA_INIZIO                     DATE          NOT NULL,
  DATA_FINE                       DATE,
  ID_LEGAME_GRUPPO_OGGETTO        NUMBER(10)    NOT NULL,
  ID_ESITO                        NUMBER(4),
  ID_ESITO_ISTRUTTORIA            NUMBER(4),
  CODICE_RAGGRUPPAMENTO           NUMBER(4)     NOT NULL,
  NOTE                            VARCHAR2(4000 BYTE),
  EXT_COD_ATTORE                  VARCHAR2(50 BYTE),
  EXT_ID_DICHIARAZIONE_CONSISTEN  NUMBER(10),
  EXT_ID_CONTITOLARE              NUMBER(10),
  PERCENTUALE_RIBASSO_INTERVENTI  NUMBER(5,2),
  ID_SETTORE_PRODUZIONE           NUMBER(4),
  FLAG_PREMIO_ACCERTATO           VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_ACQUISIZIONE_GIS           VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_RICHIESTA_CUP              VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_VALIDAZIONE_GRAFICA        VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  ID_ATTO_AMMI                    NUMBER(12)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_PROCEDIMENTO_OGGETTO.CODICE_RAGGRUPPAMENTO IS 'identifica oggetti che solo legati tra di loro nell''ambito del procedimento. Es. un procedimento in cui e'' presente un acconto (gruppo) sara'' costituito da oggetti: domanda d''acconto, istruttoria, liquidazione che tra di loro saranno legati costituendo un unico gruppo, quindi se all''interno del procedimento saranno presenti piu'' acconti, gli oggetti che componongono ciascun''acconto avranno un proprio raggruppamento';

COMMENT ON COLUMN IUF_T_PROCEDIMENTO_OGGETTO.EXT_COD_ATTORE IS 'codice dell''attore presente su PAPUA';

COMMENT ON COLUMN IUF_T_PROCEDIMENTO_OGGETTO.EXT_ID_CONTITOLARE IS 'conterra'' il riferimento a ID_CONTITOLARE della vista SMRGAA_V_SOGGETTI_COLLEGATI_AZ ';

COMMENT ON COLUMN IUF_T_PROCEDIMENTO_OGGETTO.PERCENTUALE_RIBASSO_INTERVENTI IS 'per i bandi che prevedono la gestione della percentuale di riduzione sul totale dell''investimento previsto sugli interventi';

COMMENT ON COLUMN IUF_T_PROCEDIMENTO_OGGETTO.ID_ATTO_AMMI IS 'composto dalla congiunzione del valore di DECO_TIPO_DOCU e ID_PROCEDIMENTO_OGGETTO';



CREATE TABLE IUF_T_PROCEDIM_OGGETTO_QUADR
(
  ID_PROCEDIM_OGGETTO_QUADRO   NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  ID_QUADRO_OGGETTO            NUMBER(10)       NOT NULL,
  ID_BANDO_OGGETTO             NUMBER(10)       NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL,
  FLAG_COMPILATO               VARCHAR2(1 BYTE) NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_PROCEDIM_OGGETTO_QUADR.FLAG_COMPILATO IS 'Varra'' P nel caso di compilazione parziale, S nel caso di compilazione completa';



CREATE TABLE IUF_T_PROCEDIM_OGGETTO_STAMP
(
  ID_PROCEDIM_OGGETTO_STAMPA   NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  ID_BANDO_OGGETTO             NUMBER(10)       NOT NULL,
  ID_OGGETTO_ICONA             NUMBER(10)       NOT NULL,
  EXT_ID_DOCUMENTO_INDEX       NUMBER(10),
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE,
  ID_STATO_STAMPA              NUMBER(4)        NOT NULL,
  DESC_ANOMALIA                VARCHAR2(4000 BYTE),
  DATA_PROTOCOLLO              DATE,
  NUMERO_PROTOCOLLO            VARCHAR2(100 BYTE),
  DATA_PROTOCOLLO_EMERGENZA    DATE,
  NUMERO_PROTOCOLLO_EMERGENZA  VARCHAR2(100 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_PROCEDIM_OGGETTO_STAMP IS 'Qualsiasi documento prodotto (pratica, verbali, lettere, ecc..) verra'' archiviato su Index e questa tabella conterra'' il riferimento. Un'' eventuale rigenerazione del documento storicizzera'' il record corrente e ne inserira'' uno nuovo';

COMMENT ON COLUMN IUF_T_PROCEDIM_OGGETTO_STAMP.EXT_ID_DOCUMENTO_INDEX IS 'chiave esterna della tabella DOQUIAGRI_T_DOCUMENTO_INDEX';

COMMENT ON COLUMN IUF_T_PROCEDIM_OGGETTO_STAMP.DESC_ANOMALIA IS 'Viene memorizzata l''anomalia restituita dal servizio agriwellScriviDoquiAgri nel caso in cui l''archiviazione su Index vada male';



CREATE TABLE IUF_T_PROC_OGGETTO_SANZIONE
(
  ID_PROC_OGGETTO_SANZIONE  NUMBER(10)          NOT NULL,
  ID_SANZIONE_INVESTIMENTO  NUMBER(4),
  NOTE                      VARCHAR2(4000 BYTE),
  IMPORTO                   NUMBER(12,2)        NOT NULL,
  ID_LIVELLO                NUMBER(4)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO   NUMBER(10)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PRODUZIONE_ZOOTECNICA
(
  ID_PRODUZIONE_ZOOTECNICA     NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  EXT_ID_CATEGORIA_ANIMALE     NUMBER(4)        NOT NULL,
  PESO_VIVO_MEDIO              NUMBER(5,1)      NOT NULL,
  GIORNATE_LAVORATIVE_MEDIE    NUMBER(5,2)      NOT NULL,
  NOTE                         NCLOB,
  EXT_ISTAT_COMUNE             VARCHAR2(6 BYTE),
  DATA_ULTIMO_AGGIORNAMENTO    DATE,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)
)
LOB (NOTE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_PRODUZIONE_ZOOTECNICA.EXT_ID_CATEGORIA_ANIMALE IS 'puntamento a SMRGAA_V_ALLEVAMENTI.id_categoria_animale';

COMMENT ON COLUMN IUF_T_PRODUZIONE_ZOOTECNICA.PESO_VIVO_MEDIO IS 'viene impostato di default con il valore medio della tabella di decodifica, ma l''utente potra'' modificarlo entro i limiti minimi e massimi se diversi da null';

COMMENT ON COLUMN IUF_T_PRODUZIONE_ZOOTECNICA.GIORNATE_LAVORATIVE_MEDIE IS 'Rappresenta i giorni lavorati medi nell''anno per la conduzione della categoria animale. Viene impostato di default con il valore medio della tabella di decodifica, ma l''utente potra'' modificarlo entro i limiti minimi e massimi se diversi da null';

COMMENT ON COLUMN IUF_T_PRODUZIONE_ZOOTECNICA.NOTE IS 'Informazioni aggiuntive con descrizione a piacere sull''allevamento. Il campo e'' obbligatorio se la somma del numero_capi dei record della tabella produzione_vendibile supera la quantita della vista V_ALLEVAMENTI';

COMMENT ON COLUMN IUF_T_PRODUZIONE_ZOOTECNICA.DATA_ULTIMO_AGGIORNAMENTO IS 'rappresenta la data in cui e'' stato modificato il record';

COMMENT ON COLUMN IUF_T_PRODUZIONE_ZOOTECNICA.EXT_ID_UTENTE_AGGIORNAMENTO IS 'rappresenta l''id dell''utente che ha effettuato l''ultima modifica del record';



CREATE TABLE IUF_T_REFERENTE_PROGETTO
(
  ID_REFERENTE_PROGETTO    NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  NOME                     VARCHAR2(100 BYTE)   NOT NULL,
  COGNOME                  VARCHAR2(100 BYTE)   NOT NULL,
  CODICE_FISCALE           VARCHAR2(16 BYTE)    NOT NULL,
  CAP                      VARCHAR2(5 BYTE),
  EXT_ISTAT_COMUNE         VARCHAR2(6 BYTE),
  TELEFONO                 VARCHAR2(20 BYTE),
  CELLULARE                VARCHAR2(20 BYTE),
  EMAIL                    VARCHAR2(100 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_REGIME_AIUTO_PREVISTO
(
  ID_REGIME_AIUTO_PREVISTO  NUMBER(10)          NOT NULL,
  ID_BANDO                  NUMBER(10)          NOT NULL,
  ID_LIVELLO                NUMBER(10)          NOT NULL,
  ID_REGIME_AIUTO           NUMBER(4)           NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_REGIME_AIUTO_RICHIESTO
(
  ID_REGIME_AIUTO_RICHIESTO    NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  ID_REGIME_AIUTO_PREVISTO     NUMBER(10)       NOT NULL,
  EXT_ID_SPORTELLO             NUMBER(10),
  ALTRO_ISTITUTO               VARCHAR2(100 BYTE),
  PEC_ISTITUTO                 VARCHAR2(100 BYTE),
  EMAIL_ISTITUTO               VARCHAR2(100 BYTE),
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_RISORSE_LIVELLO_BANDO
(
  ID_RISORSE_LIVELLO_BANDO  NUMBER(10)          NOT NULL,
  DESCRIZIONE               VARCHAR2(200 BYTE)  NOT NULL,
  RISORSE_ATTIVATE          NUMBER(12,2)        NOT NULL,
  DATA_INIZIO               DATE                NOT NULL,
  DATA_FINE                 DATE,
  FLAG_BLOCCATO             VARCHAR2(1 BYTE)    NOT NULL,
  ID_LIVELLO                NUMBER(4)           NOT NULL,
  RAGGRUPPAMENTO            VARCHAR2(200 BYTE),
  ID_BANDO                  NUMBER(10)          NOT NULL,
  ID_TIPO_IMPORTO           NUMBER(4)           NOT NULL,
  FLAG_AMM_COMPETENZA       VARCHAR2(1 BYTE)    DEFAULT 'S'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_RISORSE_LIVELLO_BANDO.FLAG_AMM_COMPETENZA IS 'serve ad esplicitare se sono previste tutte le amministrazioni di competenza o se ne sono state specificate solo alcune';



CREATE TABLE IUF_T_SCORTA_MAGAZZINO
(
  ID_SCORTA_MAGAZZINO      NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  ID_SCORTA                NUMBER(4)            NOT NULL,
  DESCRIZIONE              VARCHAR2(4000 BYTE),
  QUANTITA                 NUMBER(7,2),
  ID_UNITA_MISURA          NUMBER(4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_SOLUZIONE_ANOMALIA
(
  ID_SOLUZIONE_ANOMALIA        NUMBER(10)       NOT NULL,
  ID_CONTROLLO                 NUMBER(4)        NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  ID_TIPO_SOLUZIONE            NUMBER(4)        NOT NULL,
  NOTE                         VARCHAR2(4000 BYTE),
  FILE_ALLEGATO                BLOB,
  NOME_LOGICO                  VARCHAR2(255 BYTE),
  NOME_FISICO                  VARCHAR2(255 BYTE),
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  PROVINCIA_PREFETTURA         VARCHAR2(3 BYTE),
  DATA_PROTOCOLLO              DATE,
  NUMERO_PROTOCOLLO            VARCHAR2(100 BYTE),
  DATA_DOCUMENTO               DATE
)
LOB (FILE_ALLEGATO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_SOSPENSIONE_ANTICIPO
(
  ID_SOSPENSIONE_ANTICIPO  NUMBER(10)           NOT NULL,
  ID_LIVELLO               NUMBER(4)            NOT NULL,
  FLAG_SOSPENSIONE         VARCHAR2(1 BYTE)     NOT NULL,
  MOTIVAZIONE              VARCHAR2(1000 BYTE),
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_SOSPENSIONE_ANTICIPO.FLAG_SOSPENSIONE IS 'se vale S indica che per la data operazione non e'' possibile pagare l''anticipo';

COMMENT ON COLUMN IUF_T_SOSPENSIONE_ANTICIPO.MOTIVAZIONE IS 'indica il motivo per cui non puo'' essere pagato l''anticipo';



CREATE TABLE IUF_T_STORICO_LIVELLO_FA
(
  ID_STORICO_LIVELLO_FA        NUMBER(10)       NOT NULL,
  ID_LIVELLO_FOCUS_AREA        NUMBER(10)       NOT NULL,
  IMPORTO                      NUMBER(12,2)     NOT NULL,
  IMPORTO_TRASCINATO           NUMBER(12,2)     NOT NULL,
  DATA_INSERIMENTO             DATE             NOT NULL,
  DATA_CONSOLIDAMENTO          DATE,
  MOTIVAZIONE                  VARCHAR2(4000 BYTE),
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER           NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_SUPERFICIE_COLTURA
(
  ID_SUPERFICIE_COLTURA           NUMBER(10)    NOT NULL,
  ID_PROCEDIMENTO_OGGETTO         NUMBER(10)    NOT NULL,
  EXT_ID_DICHIARAZIONE_CONSISTEN  NUMBER(10)    NOT NULL,
  EXT_ISTAT_COMUNE                VARCHAR2(6 BYTE) NOT NULL,
  EXT_ID_UTILIZZO                 NUMBER(10)    NOT NULL,
  PRODUZIONE_HA                   NUMBER(8,2),
  GIORNATE_LAVORATE               NUMBER(6,1),
  QLI_REIMPIEGATI                 NUMBER(8,2),
  UF_REIMPIEGATE                  NUMBER(8),
  PREZZO                          NUMBER(6,2),
  RECORD_MODIFICATO               VARCHAR2(1 BYTE) NOT NULL,
  NOTE                            VARCHAR2(4000 BYTE),
  COLTURA_SECONDARIA              VARCHAR2(1 BYTE) NOT NULL,
  PRODUZIONE_TOTALE_DANNO         NUMBER(8,2),
  PERCENTUALE_DANNO               NUMBER(5,2),
  PREZZO_DANNEGGIATO              NUMBER(6,2),
  CODICE_UTILIZZO                 VARCHAR2(10 BYTE),
  CODICE_DESTINAZIONE             VARCHAR2(10 BYTE),
  CODICE_DETTAGLIO_USO            VARCHAR2(10 BYTE),
  CODICE_QUALITA_USO              VARCHAR2(10 BYTE),
  CODICE_VARIETA                  VARCHAR2(10 BYTE),
  SUPERFICIE_UTILIZZATA           NUMBER(10,4),
  PRODUZIONE_HA_DANNO             NUMBER(8,2),
  FLAG_DANNEGGIATO                VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  IMPORTO_RIMBORSO                NUMBER(10,2)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_SUPERFICIE_COLTURA.PRODUZIONE_HA IS 'Indica la produzione lorda in quintali per ettaro. Il dato viene proposto di default prelevando il valore medio dalla tabella di decodifica utilizzo, ma potra'' sempre essere modificato entro i limiti previsti di minimo massimo se diversi da null';

COMMENT ON COLUMN IUF_T_SUPERFICIE_COLTURA.GIORNATE_LAVORATE IS 'Giornate dedicate alla coltura per ettaro. Il dato viene proposto di default prelevando il valore medio dalla tabella utilizzo, ma potra'' sempre essere modificato rimanendo all''interno del range previsto (entro i valori minimo e massimo)';

COMMENT ON COLUMN IUF_T_SUPERFICIE_COLTURA.QLI_REIMPIEGATI IS 'Nel caso in cui una parte della produzione venga reimpiegata all''interno dell''azienda possono essere indicati i quintali utilizzati oppure, in alternativa, le unita'' foraggere. Ad es. se una parte della produzione del mais viene utilizzata per l''allevamento di animali della azienda';

COMMENT ON COLUMN IUF_T_SUPERFICIE_COLTURA.PREZZO IS 'Indica il prezzo del prodotto (coltura) al quintale. Il dato viene proposto di default prelevando il valore medio dalla tabella di decodifica utilizzo, ma potra'' sempre essere modificato entro i limiti previsti di minimo massimo se diversi da null';

COMMENT ON COLUMN IUF_T_SUPERFICIE_COLTURA.RECORD_MODIFICATO IS 'Se vale ''S'' significa che il record e'' stato modificato dall''utente dopo essere stato creato in automatico in fase di creazione della pratica';

COMMENT ON COLUMN IUF_T_SUPERFICIE_COLTURA.NOTE IS 'Campo di libera digitazione commenti';

COMMENT ON COLUMN IUF_T_SUPERFICIE_COLTURA.COLTURA_SECONDARIA IS 'S se il record si riferisce all''utilizzo secondario con relativa superficie. N se e'' primario';

COMMENT ON COLUMN IUF_T_SUPERFICIE_COLTURA.PRODUZIONE_TOTALE_DANNO IS 'Produzione reale in quintali totali conseguiti a seguito del danno alla coltura';

COMMENT ON COLUMN IUF_T_SUPERFICIE_COLTURA.PERCENTUALE_DANNO IS 'Percentuale del danno causato dalla avversita'' atmosferica';

COMMENT ON COLUMN IUF_T_SUPERFICIE_COLTURA.PREZZO_DANNEGGIATO IS 'Nel caso in cui il prodotto danneggiato venga venduto ad un prezzo inferiore a quello del prodotto sano';



CREATE TABLE IUF_T_VALORI_PARAMETRI
(
  ID_VALORI_PARAMETRI  NUMBER(10)               NOT NULL,
  ID_BANDO_OGGETTO     NUMBER(10)               NOT NULL,
  ID_CONTROLLO         NUMBER(4)                NOT NULL,
  VALORE               VARCHAR2(4000 BYTE)      NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_VISITA_LUOGO
(
  ID_VISITA_LUOGO          NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  DATA_VISITA              DATE                 NOT NULL,
  EXT_ID_TECNICO           NUMBER(4)            NOT NULL,
  NOTE                     VARCHAR2(4000 BYTE),
  ID_ESITO                 NUMBER(4)            NOT NULL,
  DATA_VERBALE             DATE,
  NUMERO_VERBALE           VARCHAR2(20 BYTE),
  ID_QUADRO_OGGETTO        NUMBER(10)           NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_VISITA_LUOGO.EXT_ID_TECNICO IS 'Punta alla tabella DB_TECNICO di SMRCOMUNE';



CREATE TABLE IUF_W_PROCEDIMENTO_OGG_AZIEN
(
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  EXT_ID_AZIENDA           NUMBER(10)           NOT NULL,
  NOTE                     VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_W_PROCEDIMENTO_OGGETT_CC
(
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  EXT_ID_CONTO_CORRENTE    NUMBER(10)           NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_W_PROCEDIMENTO_OGGETT_CC IS 'Una volta consolidato il procedimento oggetto, il dato sul conto corrente viene spostato sulla IUF_T_PROCEDIMENTO_CONTO_CORR storiccizzando eventuali conti correnti gia'' presenti. Il record viene poi eliminato.';

COMMENT ON COLUMN IUF_W_PROCEDIMENTO_OGGETT_CC.EXT_ID_CONTO_CORRENTE IS 'contiene il legame con PK della tabella anagrafica DB_CONTO_CORRENTE';



CREATE UNIQUE INDEX AK_IUF_D_GG_LAVORATE_01 ON IUF_D_GG_LAVORATE
(EXT_ID_UTILIZZO, EXT_ID_ZONA_ALTIMETRICA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK_IUF_D_PRODUZIONE_HA ON IUF_D_PRODUZIONE_HA
(EXT_ID_UTILIZZO, EXT_ID_ZONA_ALTIMETRICA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_D_BANDO_AMM_COMPETEN ON IUF_D_BANDO_AMM_COMPETENZA
(ID_BANDO, EXT_ID_AMM_COMPETENZA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_D_CONTROLLO ON IUF_D_CONTROLLO
(CODICE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_D_CRITERIO ON IUF_D_CRITERIO
(CODICE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_R_BANDO_COMUNE ON IUF_R_BANDO_COMUNE
(ID_BANDO, EXT_ISTAT_COMUNE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_R_QUADRO_OGGETTO_CON ON IUF_R_QUADRO_OGGETTO_CONTROL
(ID_QUADRO_OGGETTO, ID_CONTROLLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_T_SOLUZIONE_ANOMALIA ON IUF_T_SOLUZIONE_ANOMALIA
(ID_PROCEDIMENTO_OGGETTO, ID_CONTROLLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_T_VALORI_PARAMETRI ON IUF_T_VALORI_PARAMETRI
(ID_BANDO_OGGETTO, ID_CONTROLLO, VALORE)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_PROCEDIMENTO_AZIEN ON IUF_T_PROCEDIMENTO_AZIENDA
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_PROCEDIMENTO_GRUPP ON IUF_T_PROCEDIMENTO_GRUPPO
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_PROCEDIMENTO_OGGET ON IUF_T_PROCEDIMENTO_OGGETTO
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_PROCEDIM_OGGETTO_S ON IUF_T_PROCEDIM_OGGETTO_STAMP
(ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE2_IUF_T_PROCEDIMENTO_AZIEN ON IUF_T_PROCEDIMENTO_AZIENDA
(EXT_ID_AZIENDA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_BANDO ON IUF_D_BANDO
(ID_BANDO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_BANDO_AMM_COMPETENZ ON IUF_D_BANDO_AMM_COMPETENZA
(ID_BANDO_AMM_COMPETENZA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_CONTROLLO ON IUF_D_CONTROLLO
(ID_CONTROLLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_CRITERIO ON IUF_D_CRITERIO
(ID_CRITERIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_DANNO ON IUF_D_DANNO
(ID_DANNO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_DESCRIZIONE_INTERVE ON IUF_D_DESCRIZIONE_INTERVENTO
(ID_DESCRIZIONE_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_ELEMENTO_QUADRO ON IUF_D_ELEMENTO_QUADRO
(ID_ELEMENTO_QUADRO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_ELENCO_QUERY ON IUF_D_ELENCO_QUERY
(ID_ELENCO_QUERY)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_FOCUS_AREA ON IUF_D_FOCUS_AREA
(ID_FOCUS_AREA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_GG_LAVORATE ON IUF_D_GG_LAVORATE
(ID_GG_LAVORATE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_LEGAME_INFO ON IUF_D_LEGAME_INFO
(ID_LEGAME_INFO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_LIVELLO ON IUF_D_LIVELLO
(ID_LIVELLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_LIV_FOCUS_AREA_PRIN ON IUF_D_LIV_FOCUS_AREA_PRINCIP
(ID_LIVELLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_NUMERO_LOTTO ON IUF_D_NUMERO_LOTTO
(ID_NUMERO_LOTTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_OGUR_DA_REGIONE ON IUF_D_OGUR_DA_REGIONE
(ID_OGUR_DA_REGIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_PRODUZIONE ON IUF_D_PRODUZIONE
(ID_PRODUZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_PRODUZIONE_CERTIFIC ON IUF_D_PRODUZIONE_CERTIFICATA
(ID_PRODUZIONE_CERTIFICATA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_PRODUZIONE_HA ON IUF_D_PRODUZIONE_HA
(ID_PRODUZIONE_HA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_PRODUZIONE_TRADIZIO ON IUF_D_PRODUZIONE_TRADIZIONAL
(ID_PRODUZIONE_TRADIZIONALE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_SANZIONE_INVESTIMEN ON IUF_D_SANZIONE_INVESTIMENTO
(ID_SANZIONE_INVESTIMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_SCORTA ON IUF_D_SCORTA
(ID_SCORTA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TIPO_DANNO_FAUNA ON IUF_D_TIPO_DANNO_FAUNA
(ID_TIPO_DANNO_FAUNA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_VOCE_ELEMENTO ON IUF_D_VOCE_ELEMENTO
(ID_VOCE_ELEMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_L_LOG_BATCH ON IUF_L_LOG_BATCH
(ID_LOG_BATCH)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_AGGREGAZIONE_INTERV ON IUF_R_AGGREGAZIONE_INTERVENT
(ID_AGGREGAZIONE_INTERVENTI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_COMUNE ON IUF_R_BANDO_COMUNE
(ID_BANDO_COMUNE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_COMUNE_FOGLIO ON IUF_R_BANDO_COMUNE_FOGLIO
(ID_BANDO_COMUNE, EXT_FOGLIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_FILIERA ON IUF_R_BANDO_FILIERA
(ID_BANDO, ID_TIPO_FILIERA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_MASTER ON IUF_R_BANDO_MASTER
(ID_BANDO, ID_BANDO_MASTER)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_OGGETTO ON IUF_R_BANDO_OGGETTO
(ID_BANDO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_OGGETTO_CONTR ON IUF_R_BANDO_OGGETTO_CONTROLL
(ID_BANDO_OGGETTO, ID_CONTROLLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_OGGETTO_ICONA ON IUF_R_BANDO_OGGETTO_ICONA
(ID_BANDO_OGGETTO, ID_OGGETTO_ICONA)
TABLESPACE IUFFI_TBL;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_OGGETTO_QUADR ON IUF_R_BANDO_OGGETTO_QUADRO
(ID_QUADRO_OGGETTO, ID_BANDO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_PREMIO_ALLEVA ON IUF_R_BANDO_PREMIO_ALLEVAM
(ID_BANDO, EXT_ID_SPECIE_ANIMALE, EXT_ID_CATEGORIA_ANIMALE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_PREMIO_COLTUR ON IUF_R_BANDO_PREMIO_COLTURA
(ID_BANDO, EXT_ID_UTILIZZO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_UTILIZZO_DANN ON IUF_R_BANDO_UTILIZZO_DANNO
(ID_BANDO, EXT_ID_UTILIZZO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BA_OG_QUA_CO_AM_LIV ON IUF_R_BAN_OG_QUA_CON_AMM_LIV
(ID_BANDO_OGGETTO, ID_QUADRO_OGG_CONTROLLO_AMM, ID_LIVELLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_DANNO_INTERVENTO ON IUF_R_DANNO_INTERVENTO
(ID_DANNO, ID_DESCRIZIONE_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_DANNO_SPECIE ON IUF_R_DANNO_SPECIE
(ID_DANNO_SPECIE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_ELENCO_QUERY_BANDO ON IUF_R_ELENCO_QUERY_BANDO
(ID_ELENCO_QUERY, ID_BANDO, EXT_COD_ATTORE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_FONDO ON IUF_R_FONDO
(ID_BANDO, ID_TIPO_IMPORTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_INFO_CATALOGO ON IUF_R_INFO_CATALOGO
(ID_LIVELLO, ID_QUADRO_OGGETTO, ID_GRUPPO_INFO_CATALOGO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIVELLO_BANDO ON IUF_R_LIVELLO_BANDO
(ID_LIVELLO, ID_BANDO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIVELLO_CRITERIO ON IUF_R_LIVELLO_CRITERIO
(ID_LIVELLO_CRITERIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIVELLO_FG_TIPOLOGI ON IUF_R_LIVELLO_FG_TIPOLOGIA
(ID_LIVELLO, EXT_ID_FG_TIPOLOGIA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIVELLO_FOCUS_AREA ON IUF_R_LIVELLO_FOCUS_AREA
(ID_LIVELLO_FOCUS_AREA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIVELLO_INTERVENTO ON IUF_R_LIVELLO_INTERVENTO
(ID_LIVELLO, ID_DESCRIZIONE_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIVELLO_PADRE ON IUF_R_LIVELLO_PADRE
(ID_LIVELLO, ID_LIVELLO_PADRE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIVELLO_SETTORE_PRO ON IUF_R_LIVELLO_SETTORE_PROD
(ID_LIVELLO, ID_SETTORE_PRODUZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIV_FOCUS_AREA_SECO ON IUF_R_LIV_FOCUS_AREA_SECONDA
(ID_LIVELLO, ID_FOCUS_AREA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIV_PIANO_FINANZIAR ON IUF_R_LIV_PIANO_FINANZIARIO
(ID_LIVELLO, ID_TIPO_PIANO_FINANZIARIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_MISURAZIONE_INTERVE ON IUF_R_MISURAZIONE_INTERVENTO
(ID_MISURAZIONE_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_PROCEDIMENTO_AGRIC_ ON IUF_R_PROCEDIMENTO_AGRIC_LIV
(ID_PROCEDIMENTO_AGRICOLO, ID_LIVELLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_QUADRO_OGG_CONT_AMM ON IUF_R_QUADRO_OGG_CONTROL_AMM
(ID_QUADRO_OGG_CONTROLLO_AMM)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_QUADRO_OGGETTO_CONT ON IUF_R_QUADRO_OGGETTO_CONTROL
(ID_QUADRO_OGGETTO_CONTROLLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_RIPARTIZIONE_CONTRI ON IUF_R_RIPARTIZIONE_CONTRIBUT
(ID_TIPO_IMPORTO, ID_LIVELLO, ID_VOCE_RIPARTIZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_SOLUZIONE_CONTROLLO ON IUF_R_SOLUZIONE_CONTROLLO
(ID_TIPO_SOLUZIONE, ID_CONTROLLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_TIPO_DOC_RI_BAN_OGG ON IUF_R_TIPO_DOC_RIC_BANDO_OGG
(ID_BANDO_OGGETTO, ID_TIPO_DOC_RIC_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ALLEGATI_GRADUATORI ON IUF_T_ALLEGATI_GRADUATORIA
(ID_ALLEGATI_GRADUATORIA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ANOMALIA_PARTICELLA ON IUF_T_ANOMALIA_PARTICELLA
(ID_ANOMALIA_PARTICELLA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ATTIVITA_BANDO_OGGE ON IUF_T_ATTIVITA_BANDO_OGGETTO
(ID_ATTIVITA_BANDO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_CONCESSIONE ON IUF_T_CONCESSIONE
(ID_CONCESSIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ESTRAZIONE_CAMPIONE ON IUF_T_ESTRAZIONE_CAMPIONE
(ID_ESTRAZIONE_CAMPIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_FILE_FLUSSO_ANOM_SI ON IUF_T_FILE_FLUSSO_ANOM_SIGOP
(ID_FILE_FLUSSO_ANOM_SIGOP)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_IMPORTI_ESTRAZ_DP ON IUF_T_IMPORTI_ESTRAZ_DP
(ID_IMPORTI_ESTRAZ_DP)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_IMPORTO_DICHIARAZIO ON IUF_T_IMPORTO_DICHIARAZIONE
(ID_IMPORTO_DICHIARAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ITER_CONCESSIONE ON IUF_T_ITER_CONCESSIONE
(ID_ITER_CONCESSIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ITER_PIANO_FINANZIA ON IUF_T_ITER_PIANO_FINANZIARIO
(ID_ITER_PIANO_FINANZIARIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_LISTA_LIQUIDAZIONE ON IUF_T_LISTA_LIQUIDAZIONE
(ID_LISTA_LIQUIDAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROCEDIMENTO ON IUF_T_PROCEDIMENTO
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROCEDIMENTO_AZIEND ON IUF_T_PROCEDIMENTO_AZIENDA
(ID_PROCEDIMENTO_AZIENDA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROCEDIMENTO_CONTO_ ON IUF_T_PROCEDIMENTO_CONTO_COR
(ID_PROCEDIMENTO_CONTO_CORR)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROCEDIMENTO_GRUPPO ON IUF_T_PROCEDIMENTO_GRUPPO
(ID_PROCEDIMENTO_GRUPPO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROCEDIMENTO_OGGETT ON IUF_T_PROCEDIMENTO_OGGETTO
(ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROCEDIM_OGGETTO_QU ON IUF_T_PROCEDIM_OGGETTO_QUADR
(ID_PROCEDIM_OGGETTO_QUADRO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROCEDIM_OGGETTO_ST ON IUF_T_PROCEDIM_OGGETTO_STAMP
(ID_PROCEDIM_OGGETTO_STAMPA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROC_OGGETTO_SANZIO ON IUF_T_PROC_OGGETTO_SANZIONE
(ID_PROC_OGGETTO_SANZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PRODUZIONE_ZOOTECNI ON IUF_T_PRODUZIONE_ZOOTECNICA
(ID_PRODUZIONE_ZOOTECNICA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_REFERENTE_PROGETTO ON IUF_T_REFERENTE_PROGETTO
(ID_REFERENTE_PROGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_REGIME_AIUTO_PREVIS ON IUF_T_REGIME_AIUTO_PREVISTO
(ID_REGIME_AIUTO_PREVISTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_REGIME_AIUTO_RICHIE ON IUF_T_REGIME_AIUTO_RICHIESTO
(ID_REGIME_AIUTO_RICHIESTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_RISORSE_LIVELLO_BAN ON IUF_T_RISORSE_LIVELLO_BANDO
(ID_RISORSE_LIVELLO_BANDO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_SCORTA_MAGAZZINO ON IUF_T_SCORTA_MAGAZZINO
(ID_SCORTA_MAGAZZINO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_SOLUZIONE_ANOMALIA ON IUF_T_SOLUZIONE_ANOMALIA
(ID_SOLUZIONE_ANOMALIA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_SOSPENSIONE_ANTICIP ON IUF_T_SOSPENSIONE_ANTICIPO
(ID_SOSPENSIONE_ANTICIPO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_STORICO_LIVELLO_FA ON IUF_T_STORICO_LIVELLO_FA
(ID_STORICO_LIVELLO_FA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_SUPERFICIE_COLTURA ON IUF_T_SUPERFICIE_COLTURA
(ID_SUPERFICIE_COLTURA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_VALORI_PARAMETRI ON IUF_T_VALORI_PARAMETRI
(ID_VALORI_PARAMETRI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_VISITA_LUOGO ON IUF_T_VISITA_LUOGO
(ID_VISITA_LUOGO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_W_PROCEDIMEN_OGGET_CC ON IUF_W_PROCEDIMENTO_OGGETT_CC
(ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_W_PROCEDIMENTO_OGG_AZ ON IUF_W_PROCEDIMENTO_OGG_AZIEN
(ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE TABLE IUF_D_ALLEGATI_BANDO
(
  ID_ALLEGATI_BANDO  NUMBER(10)                 NOT NULL,
  DESCRIZIONE        VARCHAR2(200 BYTE)         NOT NULL,
  NOME_FILE          VARCHAR2(255 BYTE)         NOT NULL,
  FILE_ALLEGATO      BLOB                       NOT NULL,
  ID_BANDO           NUMBER(10)                 NOT NULL,
  ORDINE             NUMBER(4),
  FLAG_VISIBILE      VARCHAR2(1 BYTE)           DEFAULT 'S'                   NOT NULL
)
LOB (FILE_ALLEGATO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_D_DETTAGLIO_INFO_CATALOG
(
  ID_DETTAGLIO_INFO_CATALOGO  NUMBER(10)        NOT NULL,
  DESCRIZIONE                 VARCHAR2(2000 BYTE) NOT NULL,
  ORDINE                      NUMBER(4)         NOT NULL,
  ID_GRUPPO_INFO_CATALOGO     NUMBER(10)        NOT NULL,
  FLAG_OBBLIGATORIO           VARCHAR2(1 BYTE)  NOT NULL,
  ID_LEGAME_INFO              NUMBER(10),
  CODICE_INFO                 VARCHAR2(20 BYTE),
  EXT_ID_TIPO_DOCUMENTO       NUMBER(4),
  FLAG_GESTIONE_FILE          VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_DETTAGLIO_INFO_CATALOG.EXT_ID_TIPO_DOCUMENTO IS 'chiave della tabella DOQUIAGRI_D_TIPO_DOCUMENTO';

COMMENT ON COLUMN IUF_D_DETTAGLIO_INFO_CATALOG.FLAG_GESTIONE_FILE IS 'Potra'' assumere i seguenti valori: N = nessun file previsto, F = possibile allegare un file ,O = obbligatorio allegare un file';



CREATE TABLE IUF_D_GRUPPO_INFO
(
  ID_GRUPPO_INFO      NUMBER(10)                NOT NULL,
  DESCRIZIONE         VARCHAR2(2000 BYTE)       NOT NULL,
  ORDINE              NUMBER(4)                 NOT NULL,
  ID_QUADRO_OGGETTO   NUMBER(10)                NOT NULL,
  ID_BANDO_OGGETTO    NUMBER(10)                NOT NULL,
  FLAG_INFO_CATALOGO  VARCHAR2(1 BYTE)          NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_GRUPPO_INFO.FLAG_INFO_CATALOGO IS 'Vale S nel caso in cui la info ?? stata prelevata da D_GRUPPO_INFO_CATALOGO';



CREATE TABLE IUF_D_GRUPPO_TESTO_VERBALE
(
  ID_GRUPPO_TESTO_VERBALE  NUMBER(10)           NOT NULL,
  ID_ELENCO_CDU            NUMBER(4)            NOT NULL,
  ID_BANDO_OGGETTO         NUMBER(10)           NOT NULL,
  TIPO_COLLOCAZIONE_TESTO  NUMBER(4)            NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_GRUPPO_TESTO_VERBALE.TIPO_COLLOCAZIONE_TESTO IS 'La posizione in stampa del gruppo testo deve essere determinata ordinando in modo crescente i record in base al contenuto di questa colonna. Gli xml delle stampe prevedono un tag del tipo <TestoConfiguratoTIPO_COLLOCAZIONE_TESTO> in modo che possa essere generato dinamicamente dall''applicativo senza ulteriori modifiche lato java';



CREATE TABLE IUF_D_IMPEGNO
(
  ID_IMPEGNO          NUMBER(4)                 NOT NULL,
  CODICE_IMPEGNO      VARCHAR2(200 BYTE)        NOT NULL,
  ID_LIVELLO          NUMBER(4)                 NOT NULL,
  TIPO_IMPEGNO        VARCHAR2(1 BYTE)          NOT NULL,
  CODICE_SELEZIONE    VARCHAR2(1 BYTE)          NOT NULL,
  DESCRIZIONE_BREVE   VARCHAR2(200 BYTE)        NOT NULL,
  DESCRIZIONE_ESTESA  VARCHAR2(2000 BYTE)       NOT NULL,
  ANNO_INIZIO         NUMBER(4)                 NOT NULL,
  ANNO_FINE           NUMBER(4),
  ORDINAMENTO         NUMBER(4)                 NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_D_IMPEGNO IS 'tabella di decodifica dei dati relativi agli impegni di base e aggiuntivi previsti per ciascun livello (operazione del PSR) e con l''anno di inizio e fine validita''';

COMMENT ON COLUMN IUF_D_IMPEGNO.CODICE_IMPEGNO IS 'viene utilizzato per attribuire le classi di premio, es: INTRODUZIONE, MANTENIMENTO, AZIONE1, etc. per gli impegni di base, oppure CONFUSIONE_SESSUALE, INERBIMENTO, etc. per gli impegni aggiuntivi';

COMMENT ON COLUMN IUF_D_IMPEGNO.TIPO_IMPEGNO IS 'B impegno di base, A impegno aggiuntivo';

COMMENT ON COLUMN IUF_D_IMPEGNO.CODICE_SELEZIONE IS '''C'' check button (a parita'' di ID_LIVELLO e TIPO_IMPEGNO puo'' essere selezionato piu'' di un valore), ''R'' radio button (a parita'' di ID_LIVELLO e TIPO_IMPEGNO puo'' essere selezionato solo un valore)';



CREATE TABLE IUF_D_TESTO_VERBALE
(
  ID_TESTO_VERBALE         NUMBER(10)           NOT NULL,
  ID_GRUPPO_TESTO_VERBALE  NUMBER(10)           NOT NULL,
  DESCRIZIONE              VARCHAR2(4000 BYTE)  NOT NULL,
  ORDINE                   NUMBER(4)            NOT NULL,
  FLAG_CATALOGO            VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_TESTO_VERBALE.FLAG_CATALOGO IS 'indica se il testo proviene da catalogo ed e'' modificabile (FLAG=''N'') oppure non e'' modificabile (FLAG = ''S'')';



CREATE TABLE IUF_R_BANDO_LIVELLO_CRITERIO
(
  ID_BANDO_LIVELLO_CRITERIO  NUMBER(10)         NOT NULL,
  ID_LIVELLO_CRITERIO        NUMBER(10)         NOT NULL,
  ID_BANDO                   NUMBER(10)         NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_LIV_BANDO_BENEFICIARIO
(
  ID_BANDO             NUMBER(10)               NOT NULL,
  ID_LIVELLO           NUMBER(4)                NOT NULL,
  EXT_ID_FG_TIPOLOGIA  NUMBER(4)                NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_R_LIV_BANDO_BENEFICIARIO IS 'Contiene i beneficiari (Forme Giuridiche) configurati per un bando';

COMMENT ON COLUMN IUF_R_LIV_BANDO_BENEFICIARIO.EXT_ID_FG_TIPOLOGIA IS 'punta alla tabella di anagrafe DB_TIPO_FG_TIPOLOGIA. Per il dettaglio dei dati utilizzare la vista IUF_V_TIPOLOGIA_AZIENDA';



CREATE TABLE IUF_R_LIV_BANDO_GRADUATORIA
(
  ID_GRADUATORIA  NUMBER(10)                    NOT NULL,
  ID_LIVELLO      NUMBER(4)                     NOT NULL,
  ID_BANDO        NUMBER(10)                    NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_LIV_BANDO_INTERVENTO
(
  COSTO_UNITARIO_MINIMO      NUMBER(12,2),
  COSTO_UNITARIO_MASSIMO     NUMBER(12,2),
  ID_BANDO                   NUMBER(10)         NOT NULL,
  ID_LIVELLO                 NUMBER(4)          NOT NULL,
  ID_DESCRIZIONE_INTERVENTO  NUMBER(4)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_MATRICE_IMPEGNI
(
  ID_IMPEGNO_PRINCIPALE   NUMBER(4)             NOT NULL,
  ID_IMPEGNO_COMPATIBILE  NUMBER(4)             NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_R_MATRICE_IMPEGNI IS 'conterra'' la matrice di compatibilita'' degli impegni tra di loro, cioe'' 2 impegni saranno compatibili se su questa tabella esistera'' la loro relazione';



CREATE TABLE IUF_R_PROCEDIMENTO_LIVELLO
(
  ID_PROCEDIMENTO           NUMBER(10)          NOT NULL,
  ID_LIVELLO                NUMBER(4)           NOT NULL,
  SPESA_AMMESSA             NUMBER(12,2),
  CONTRIBUTO_CONCESSO       NUMBER(12,2),
  IMPORTO_INVESTIMENTO      NUMBER(12,2),
  CONTRIBUTO_EROGABILE      NUMBER(12,2),
  CONTRIBUTO_NON_EROGABILE  NUMBER(12,2),
  DATA_AMMISSIONE           DATE
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_R_PROCEDIMENTO_LIVELLO IS 'La tabella serve ad identificare a quali livelli lega il singolo procedimento, in quanto nel caso di Bando multi operazione (piu'' record presenti sulla tabella IUF_R_LIVELLO_BANDO) occorre identificare in modo centralizzato e univoco (misure a premio e investimento si comportano diversamente) a quali operazioni aderisce il beneficiario';

COMMENT ON COLUMN IUF_R_PROCEDIMENTO_LIVELLO.CONTRIBUTO_EROGABILE IS 'Rappresenta il contributo da erogare al beneficiario, determinato complessivamente per tutte le operazioni a cui il beneficiario ha aderito nel procedimento, dalle istruttorie delle domande di pagamento';

COMMENT ON COLUMN IUF_R_PROCEDIMENTO_LIVELLO.CONTRIBUTO_NON_EROGABILE IS 'Rappresenta la somma del contributo non riconosciuto al beneficiario e delle riduzioni/sanzioni applicate, determinato complessivamente per tutte le operazioni a cui il beneficiario ha aderito nel procedimento, dalle istruttorie delle domande di pagamento';



CREATE TABLE IUF_R_PROCEDIMENTO_OGG_LIVEL
(
  ID_PROCEDIMENTO_OGGETTO         NUMBER(10)    NOT NULL,
  ID_LIVELLO                      NUMBER(4)     NOT NULL,
  CONTRIBUTO_EROGABILE            NUMBER(12,2)  NOT NULL,
  CONTRIBUTO_NON_EROGABILE        NUMBER(12,2)  NOT NULL,
  CONTRIBUTO_CALCOLATO            NUMBER(12,2)  NOT NULL,
  CONTRIBUTO_ABBATTUTO            NUMBER(12,2)  NOT NULL,
  CONTRIBUTO_SANZIONABILE         NUMBER(12,2)  NOT NULL,
  CONTRIBUTO_RISPENDIBILE         NUMBER(12,2)  NOT NULL,
  SANZIONI                        NUMBER(12,2),
  ARROTONDAMENTI_CONTR_ABBATTUTO  NUMBER(4,2)   DEFAULT 0                     NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_PROCEDIMENTO_OGG_LIVEL.CONTRIBUTO_EROGABILE IS 'Rappresenta il contributo da erogare al beneficiario, determinato complessivamente per ciascuna operazione a cui il beneficiario ha aderito nel procedimento, dalle istruttorie delle domande di pagamento';

COMMENT ON COLUMN IUF_R_PROCEDIMENTO_OGG_LIVEL.CONTRIBUTO_NON_EROGABILE IS 'Rappresenta il contributo da non erogare al beneficiario, determinato complessivamente per ciascuna operazione a cui il beneficiario ha aderito nel procedimento, dalle istruttorie delle domande di pagamento';

COMMENT ON COLUMN IUF_R_PROCEDIMENTO_OGG_LIVEL.CONTRIBUTO_CALCOLATO IS 'Rappresenta il totale CONTRIBUTO_CALCOLATO per operazione registrato in IUF_T_ACCERTAMENTO_SPESE';

COMMENT ON COLUMN IUF_R_PROCEDIMENTO_OGG_LIVEL.CONTRIBUTO_ABBATTUTO IS 'Rappresenta il totale CONTRIBUTO_ABBATTUTO per operazione registrato in IUF_T_ACCERTAMENTO_SPESE';

COMMENT ON COLUMN IUF_R_PROCEDIMENTO_OGG_LIVEL.CONTRIBUTO_SANZIONABILE IS 'Rappresenta il totale CONTRIBUTO_SANZIONABILE per operazione registrato in IUF_T_ACCERTAMENTO_SPESE';

COMMENT ON COLUMN IUF_R_PROCEDIMENTO_OGG_LIVEL.CONTRIBUTO_RISPENDIBILE IS 'Rappresenta il totale CONTRIBUTO_RISPENDIBILE per operazione registrato in IUF_T_ACCERTAMENTO_SPESE';

COMMENT ON COLUMN IUF_R_PROCEDIMENTO_OGG_LIVEL.SANZIONI IS 'Rappresenta le sanzioni determinate per l''oggetto livello';

COMMENT ON COLUMN IUF_R_PROCEDIMENTO_OGG_LIVEL.ARROTONDAMENTI_CONTR_ABBATTUTO IS 'Serve a contenere l''approssimazione dovuta al riproporzionamento del contributo erogabile sugli interventi, in caso di abbattimenti';



CREATE TABLE IUF_R_PROCEDIMENTO_SCORTA
(
  ID_PROCEDIMENTO_SCORTA  NUMBER(10)            NOT NULL,
  ID_PROCEDIMENTO         NUMBER(10)            NOT NULL,
  ID_SCORTA_MAGAZZINO     NUMBER(10)            NOT NULL,
  DATA_INIZIO             DATE                  NOT NULL,
  DATA_FINE               DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_PROC_PRODUZIONE_ZOOTEC
(
  ID_PROC_PRODUZIONE_ZOOTEC  NUMBER(10)         NOT NULL,
  ID_PROCEDIMENTO            NUMBER(10)         NOT NULL,
  DATA_INIZIO                DATE               NOT NULL,
  DATA_FINE                  DATE,
  ID_PRODUZIONE_ZOOTECNICA   NUMBER(10)         NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_PROC_SUPERFICIE_COLTUR
(
  ID_PROC_SUPERFICIE_COLTUR  NUMBER(10)         NOT NULL,
  ID_SUPERFICIE_COLTURA      NUMBER(10)         NOT NULL,
  ID_PROCEDIMENTO            NUMBER(10)         NOT NULL,
  DATA_INIZIO                DATE               NOT NULL,
  DATA_FINE                  DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_RISOR_LIV_BANDO_AMM_CO
(
  ID_RISORSE_LIVELLO_BANDO  NUMBER(10)          NOT NULL,
  EXT_ID_AMM_COMPETENZA     NUMBER(4)           NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ACCERTAMENTO_DANNO
(
  ID_ACCERTAMENTO_DANNO        NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  FLAG_SOPRALLUOGO             VARCHAR2(1 BYTE) NOT NULL,
  DATA_SOPRALLUOGO             DATE,
  PERITO                       VARCHAR2(200 BYTE) NOT NULL,
  IMPORTO_RIPRISTINO           NUMBER(9,2)      NOT NULL,
  SPESE_PERIZIA                NUMBER(9,2)      NOT NULL,
  SPESE_PREVENZIONE            NUMBER(9,2)      NOT NULL,
  DESCRIZIONE_PREVENZIONE      VARCHAR2(4000 BYTE),
  FLAG_REITERATI_DANNI         VARCHAR2(1 BYTE) NOT NULL,
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  NUMERO_PERIZIA               VARCHAR2(50 BYTE) NOT NULL,
  NOTE                         NCLOB
)
LOB (NOTE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ANALISI_RISCHIO
(
  ID_ANALISI_RISCHIO       NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO          NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  EXT_ID_AMM_COMPETENZA    NUMBER(10),
  EXT_ID_AZIENDA           NUMBER(10)           NOT NULL,
  RAGGRUPPAMENTO           VARCHAR2(20 BYTE),
  PUNTEGGIO                NUMBER,
  FLAG_ESTRATTA            VARCHAR2(1 BYTE),
  DETTAGLIO_INDICI         VARCHAR2(250 BYTE),
  FLAG_ZONA_CAMPIONE       VARCHAR2(1 BYTE),
  CAMPIONE_PRELIMINARE     VARCHAR2(1 BYTE),
  ID_NUMERO_LOTTO          NUMBER(4),
  ID_BANDO                 NUMBER(10),
  ID_TIPO_ESTRAZIONE       NUMBER(4),
  FLAG_CARICATO            VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  FLAG_ANNULLATO           VARCHAR2(1 BYTE)     DEFAULT 'N'                   NOT NULL,
  MISURA                   VARCHAR2(20 BYTE)    NOT NULL,
  CLASSE                   VARCHAR2(1 BYTE)     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ANALISI_RISCHIO_IMP
(
  ID_ANALISI_RISCHIO_IMP  NUMBER(10)            NOT NULL,
  ID_ANALISI_RISCHIO      NUMBER(10)            NOT NULL,
  ID_LIVELLO              NUMBER(4)             NOT NULL,
  IMPORTO_RICHIESTO       NUMBER(12,2)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ANOMALIE_CONTROLLI
(
  ID_ANOMALIE_CONTROLLI    NUMBER               NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10),
  DESCRIZIONE_ANOMALIA     VARCHAR2(1000 BYTE),
  ID_CONTROLLO             NUMBER(4)            NOT NULL,
  ULTERIORI_INFORMAZIONI   VARCHAR2(2000 BYTE),
  GRAVITA                  VARCHAR2(1 BYTE)     NOT NULL,
  ID_PROCEDIMENTO          NUMBER(10)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ANTICIPO
(
  ID_ANTICIPO                NUMBER(10)         NOT NULL,
  ID_PROCEDIMENTO            NUMBER(10)         NOT NULL,
  IMPORTO_INVESTIMENTO       NUMBER(12,2)       NOT NULL,
  IMPORTO_AMMESSO            NUMBER(12,2)       NOT NULL,
  IMPORTO_CONTRIBUTO         NUMBER(12,2)       NOT NULL,
  PERCENTUALE_ANTICIPO       NUMBER(5,2)        NOT NULL,
  IMPORTO_ANTICIPO           NUMBER(12,2)       NOT NULL,
  IMPORTO_FIDEIUSSIONE       NUMBER(12,2),
  NUMERO_FIDEIUSSIONE        VARCHAR2(30 BYTE),
  DATA_STIPULA               DATE,
  DATA_SCADENZA              DATE,
  BENEFICIARIO_FIDEIUSSIONE  VARCHAR2(30 BYTE),
  EXT_ID_SPORTELLO           NUMBER(10),
  ALTRO_ISTITUTO             VARCHAR2(100 BYTE),
  INDIRIZZO_ALTRO_ISTITUTO   VARCHAR2(200 BYTE),
  EXT_ISTAT_COMUNE           VARCHAR2(6 BYTE),
  ID_STATO_OGGETTO           NUMBER(4)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ASSICURAZIONI_COLTURE
(
  ID_ASSICURAZIONI_COLTURE  NUMBER(10)          NOT NULL,
  ID_PROCEDIMENTO_OGGETTO   NUMBER(10)          NOT NULL,
  ID_CONSORZIO_DIFESA       NUMBER(4),
  NOME_ENTE_PRIVATO         VARCHAR2(120 BYTE),
  NUMERO_SOCIO_POLIZZA      VARCHAR2(20 BYTE)   NOT NULL,
  IMPORTO_PREMIO            NUMBER(10,2)        NOT NULL,
  IMPORTO_ASSICURATO        NUMBER(10,2)        NOT NULL,
  IMPORTO_RIMBORSO          NUMBER(10,2)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_ASSICURAZIONI_COLTURE.NOME_ENTE_PRIVATO IS 'In alternativa al nome del consorzio puo'' essere indicato il nome dell''ente di assicurazione privata';

COMMENT ON COLUMN IUF_T_ASSICURAZIONI_COLTURE.NUMERO_SOCIO_POLIZZA IS 'deve essere indicato il numero di socio, nel caso di assicurazione con consorzio, o numero di polizza nel caso di ente privato';

COMMENT ON COLUMN IUF_T_ASSICURAZIONI_COLTURE.IMPORTO_PREMIO IS 'importo del premio pagato';

COMMENT ON COLUMN IUF_T_ASSICURAZIONI_COLTURE.IMPORTO_ASSICURATO IS 'importo assicurato';

COMMENT ON COLUMN IUF_T_ASSICURAZIONI_COLTURE.IMPORTO_RIMBORSO IS 'Importo del risarcimento pagato da parte dell''assicurazione';



CREATE TABLE IUF_T_CONTROLLO_COLTURA
(
  ID_CONTROLLO_COLTURA   NUMBER(10)             NOT NULL,
  ID_SUPERFICIE_COLTURA  NUMBER(10)             NOT NULL,
  DESCRIZIONE_ANOMALIA   VARCHAR2(4000 BYTE)    NOT NULL,
  BLOCCANTE              VARCHAR2(1 BYTE)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_CONTROLLO_IN_LOCO
(
  ID_CONTROLLO_IN_LOCO       NUMBER(10)         NOT NULL,
  ID_LIVELLO                 NUMBER(4)          NOT NULL,
  ID_PROCEDIMENTO_OGGETTO    NUMBER(10)         NOT NULL,
  FLAG_CONTROLLO             VARCHAR2(1 BYTE)   NOT NULL,
  DATA_INIZIO_CONTROLLO      DATE,
  DATA_SOPRALLUOGO           DATE,
  NUMERO_VERBALE             VARCHAR2(50 BYTE),
  EXT_ID_TECNICO             NUMBER(4),
  FLAG_INADEMP_VINCOLATA     VARCHAR2(1 BYTE),
  NOTE_INADEMP_VINCOLATA     VARCHAR2(4000 BYTE),
  FLAG_INADEMP_CONDIZIONATA  VARCHAR2(1 BYTE),
  NOTE_INADEMP_CONDIZIONATA  VARCHAR2(4000 BYTE),
  MOTIVAZIONE                VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_CONTROLLO_IN_LOCO.FLAG_CONTROLLO IS 'Se vale S indica che e'' stato effettuato il controllo in loco';

COMMENT ON COLUMN IUF_T_CONTROLLO_IN_LOCO.DATA_INIZIO_CONTROLLO IS 'Data inizio controllo in loco';



CREATE TABLE IUF_T_CONTROLLO_IN_LOCO_EXPO
(
  ID_CONTROLLO_IN_LOCO_EXPOST  NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  FLAG_CONTROLLO               VARCHAR2(1 BYTE) NOT NULL,
  FLAG_PREAVVISO               VARCHAR2(1 BYTE) NOT NULL,
  DATA_PREAVVISO               DATE,
  ID_TIPOLOGIA_PREAVVISO       NUMBER(4),
  DESCRIZIONE_ALTRO_PREAVVISO  VARCHAR2(200 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_CONTROLLO_IN_LOCO_INVE
(
  ID_CONTROLLO_IN_LOCO_INVEST  NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  FLAG_CONTROLLO               VARCHAR2(1 BYTE) NOT NULL,
  FLAG_PREAVVISO               VARCHAR2(1 BYTE) NOT NULL,
  DATA_PREAVVISO               DATE,
  ID_TIPOLOGIA_PREAVVISO       NUMBER(4),
  DESCRIZIONE_ALTRO_PREAVVISO  VARCHAR2(200 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_DANNO_ATM
(
  ID_DANNO_ATM                 NUMBER(10)       NOT NULL,
  ID_DANNO                     NUMBER(4)        NOT NULL,
  EXT_ID_ENTITA_DANNEGGIATA    NUMBER(10),
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  PROGRESSIVO                  NUMBER(3)        NOT NULL,
  DESCRIZIONE                  NCLOB            NOT NULL,
  QUANTITA                     NUMBER(9,4)      NOT NULL,
  IMPORTO                      NUMBER(9,2)      NOT NULL,
  DATA_CANCELLAZIONE           DATE,
  EXT_ID_UTENTE_CANCELLAZIONE  NUMBER(10),
  ID_UNITA_MISURA              NUMBER(4)
)
LOB (DESCRIZIONE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_DANNO_ATM.EXT_ID_ENTITA_DANNEGGIATA IS 'FK che punta alla tabella corrispondente dell''entita'' selezionata (es: se id_danno= SCORTE, allora puntera'' a IUF_T_SCORTA_MAGAZZINO.id_scorta_magazzino) ';

COMMENT ON COLUMN IUF_T_DANNO_ATM.DATA_CANCELLAZIONE IS 'rappresenta la data in cui il danno e'' stato eliminato nelle fasi successive alla chiusura della domanda';

COMMENT ON COLUMN IUF_T_DANNO_ATM.EXT_ID_UTENTE_CANCELLAZIONE IS 'rappresenta l''id dell''utente che ha eliminato il danno nelle fasi successive alla chiusura della domanda';



CREATE TABLE IUF_T_DANNO_FAUNA
(
  ID_DANNO_FAUNA               NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  PROGRESSIVO                  NUMBER(3)        NOT NULL,
  ID_DANNO_SPECIE              NUMBER(10)       NOT NULL,
  ULTERIORI_INFORMAZIONI       VARCHAR2(4000 BYTE),
  QUANTITA                     NUMBER(9,4),
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_DATI_BILANCIO
(
  ID_DATI_BILANCIO             NUMBER(10),
  EXT_ID_ZONA_ALTIMETRICA      NUMBER(4)        NOT NULL,
  DATA_SCAD_PRESTITO_PREC      DATE             NOT NULL,
  FLAG_RITEN_ACCONTO           VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  TIPO_DOMANDA                 VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  DATA_ULTIMO_BILANCIO         DATE             NOT NULL,
  IMP_CAPITALE_ANTIC_AMMISS    NUMBER(12,2)     NOT NULL,
  IMP_CREDITO_CLIENTI          NUMBER(12,2)     NOT NULL,
  IMP_FATTURATO                NUMBER(12,2)     NOT NULL,
  TEMPO_ESPOSIZ_DA_BILANCIO    NUMBER(10)       NOT NULL,
  TEMPO_ESPOSIZ_BENEF          NUMBER(10)       NOT NULL,
  DATA_DELIBERA_INTERVENTO     DATE             NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  DATA_AGGIORNAMENTO           DATE,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10),
  MOTIVAZIONE_RIT_ACCONTO      VARCHAR2(100 BYTE),
  IMPORTO_MATERIE_PRIME        NUMBER(12,2)     NOT NULL,
  IMPORTO_SERVIZI              NUMBER(12,2)     NOT NULL,
  IMPORTO_BENI_TERZI           NUMBER(12,2)     NOT NULL,
  IMPORTO_PERS_SALARI          NUMBER(12,2)     NOT NULL,
  IMPORTO_PERS_ONERI           NUMBER(12,2)     NOT NULL,
  IMPORTO_TOT_CONCEDIBILE      NUMBER(12,2)     NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_DATI_BILANCIO.TIPO_DOMANDA IS 'puo'' valere N (nuova domanda) o R (rinnovo domanda)';



CREATE TABLE IUF_T_DATI_COMUNI_ELEM_QUADR
(
  ID_DATI_COMUNI_ELEM_QUADRO  NUMBER(10)        NOT NULL,
  NUM_PROGRESSIVO_RECORD      NUMBER(10)        NOT NULL,
  ID_PROCEDIMENTO_OGGETTO     NUMBER(10)        NOT NULL,
  ID_QUADRO                   NUMBER(4)         NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_DATI_DANNO_FAUNA
(
  ID_DATI_DANNO_FAUNA      NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  DATA_DANNO               DATE                 NOT NULL,
  ID_ISTITUTO_DANNI_FAUNA  NUMBER(4)            NOT NULL,
  EXT_ISTAT_COMUNE         VARCHAR2(6 BYTE)     NOT NULL,
  FLAG_URGENZA_PERIZIA     VARCHAR2(1 BYTE)     NOT NULL,
  NOTA_URGENZA             VARCHAR2(4000 BYTE),
  NOTE                     VARCHAR2(4000 BYTE),
  ID_ISTITUTO_NOMINATIVO   NUMBER(4),
  NOMIN_ISTITUTO_ALTRO     VARCHAR2(250 BYTE),
  ID_MOTIVO_URGENZA        NUMBER(4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_DATI_PROCEDIMENTO
(
  ID_DATI_PROCEDIMENTO     NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO          NUMBER(10),
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_DATI_PROCEDIMENTO IS 'tabella di collegamento dati per consentire la creazione di una o piu'' sottostrutture disponibili sia in fase pre-creazione oggetto che in fase post-creazione';

COMMENT ON COLUMN IUF_T_DATI_PROCEDIMENTO.ID_PROCEDIMENTO IS 'valorizzato solo quando la sottostruttura e'' collegata direttamente al procedimento (fase di pre-creazione oggetto); non valorizzato quando la sottostruttura e'' collegata normalmente all''oggetto a cui si riferisce (fase di post-creazione oggetto)';

COMMENT ON COLUMN IUF_T_DATI_PROCEDIMENTO.ID_PROCEDIMENTO_OGGETTO IS 'valorizzato solo quando la sottostruttura e'' collegata normalmente all''oggetto a cui si riferisce (fase di post-creazione oggetto); non valorizzato quando la sottostruttura e'' collegata direttamente al procedimento (fase di pre-creazione oggetto)';



CREATE TABLE IUF_T_DATI_PROCEDIMENTO_PUNT
(
  ID_DATI_PROCEDIMENTO_PUNTI  NUMBER(10)        NOT NULL,
  ID_PROCEDIMENTO             NUMBER(10),
  ID_PROCEDIMENTO_OGGETTO     NUMBER(10)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_DATO_ELEMENTO_QUADRO
(
  ID_DATO_ELEMENTO_QUADRO     NUMBER(10)        NOT NULL,
  VALORE_ELEMENTO             VARCHAR2(4000 BYTE) NOT NULL,
  ID_ELEMENTO_QUADRO          NUMBER(10)        NOT NULL,
  ID_DATI_COMUNI_ELEM_QUADRO  NUMBER(10)        NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_DOCUMENTI_RICHIESTI
(
  ID_DOCUMENTI_RICHIESTI   NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  ALTRO_DOC_RICHIESTO      CLOB
)
LOB (ALTRO_DOC_RICHIESTO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_DOCUMENTI_RICHIESTI.ALTRO_DOC_RICHIESTO IS 'campo descrittivo aggiuntivo, compilare in caso si voglia aggiungere la descrizione di un altro documento richiesto non presente nella tabella IUF_D_TIPO_DOC_RICHIESTI';



CREATE TABLE IUF_T_DOCUMENTO_SPESA
(
  ID_DOCUMENTO_SPESA          NUMBER(10)        NOT NULL,
  ID_PROCEDIMENTO             NUMBER(10)        NOT NULL,
  DATA_ANNULLAMENTO           DATE,
  EXT_ID_UTENTE_ANNULLAMENTO  NUMBER(10)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_DOCUMENTO_SPESA.DATA_ANNULLAMENTO IS 'serve per registrare un annullamento del documento effettuato da un istruttore';



CREATE TABLE IUF_T_DOCUMENTO_SPESA_FILE
(
  ID_DOCUMENTO_SPESA_FILE         NUMBER(10)    NOT NULL,
  ID_DOCUMENTO_SPESA              NUMBER(10)    NOT NULL,
  NOME_FILE_LOGICO_DOCUMENTO_SPE  VARCHAR2(255 BYTE) NOT NULL,
  NOME_FILE_FISICO_DOCUMENTO_SPE  VARCHAR2(255 BYTE) NOT NULL,
  FILE_DOCUMENTO_SPESA            BLOB          NOT NULL,
  EXT_COD_ATTORE                  VARCHAR2(50 BYTE) NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO       DATE          NOT NULL
)
LOB (FILE_DOCUMENTO_SPESA) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_DOCUMENTO_SPESA_FILE.EXT_COD_ATTORE IS 'Serve per distinguere sia la versione dei dati inseriti dal beneficiario che dell''eventuale versione rettificata dall''istruttore. Se l''utente che sta effettuando le modifiche ha un EXT_COD_ATTORE coincidente con quello del record valido i dati vengono aggiornati direttamente, altrimenti il record deve essere storicizzato e le modifiche devono essere riportate in un nuovo record';



CREATE TABLE IUF_T_ECONOMIA
(
  ID_ECONOMIA               NUMBER(10)          NOT NULL,
  ID_RISORSE_LIVELLO_BANDO  NUMBER(10)          NOT NULL,
  DESCRIZIONE               VARCHAR2(200 BYTE)  NOT NULL,
  IMPORTO_ECONOMIA          NUMBER(12,2)        NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ELAB_MASSIVA
(
  ID_ELAB_MASSIVA              NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO              NUMBER(10),
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10),
  ESITO                        VARCHAR2(1 BYTE) NOT NULL,
  MESSAGGIO                    VARCHAR2(4000 BYTE),
  DATA_ELABORAZIONE            DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10),
  TIPO_ELABORAZIONE            VARCHAR2(5 BYTE) NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ESECUZIONE_CONTROLLI
(
  ID_ESECUZIONE_CONTROLLI     NUMBER(10)        NOT NULL,
  ID_PROCEDIMENTO_OGGETTO     NUMBER(10)        NOT NULL,
  EXT_ID_UTENTE               NUMBER(10)        NOT NULL,
  DATA_ESECUZIONE             DATE              NOT NULL,
  ID_FONTE_CONTROLLO          NUMBER(4)         NOT NULL,
  FLAG_ELABORAZIONE_IN_CORSO  VARCHAR2(1 BYTE)  NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ESITO_CONTROLLI_AMM
(
  ID_ESITO_CONTROLLI_AMM       NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  NOTE                         VARCHAR2(4000 BYTE),
  ID_QUADRO_OGG_CONTROLLO_AMM  NUMBER(10)       NOT NULL,
  ID_ESITO                     NUMBER(4)        NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ESITO_FINALE
(
  ID_ESITO_FINALE                NUMBER(10)     NOT NULL,
  ID_PROCEDIMENTO_OGGETTO        NUMBER(10)     NOT NULL,
  EXT_ID_FUNZIONARIO_GRADO_SUP   NUMBER(4),
  EXT_ID_FUNZIONARIO_ISTRUTTORE  NUMBER(4),
  ID_ESITO                       NUMBER(4),
  ID_ESITO_DEFINITIVO            NUMBER(4),
  MOTIVAZIONE                    CLOB
)
LOB (MOTIVAZIONE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_ESITO_FINALE.EXT_ID_FUNZIONARIO_GRADO_SUP IS 'selezione dalla view SMRCOMUNE_V_TECNICO con ID_AMM_COMPETENZA e ID_UFFICIO_ZONA a cui e'' legato il procedimento';

COMMENT ON COLUMN IUF_T_ESITO_FINALE.EXT_ID_FUNZIONARIO_ISTRUTTORE IS 'FK virtuale con tabella DB_TECNICO di DB Comune';



CREATE TABLE IUF_T_ESITO_OPERAZIONE
(
  ID_ESITO_OPERAZIONE            NUMBER(10)     NOT NULL,
  ID_ESITO_FINALE                NUMBER(10)     NOT NULL,
  ID_LIVELLO                     NUMBER(4)      NOT NULL,
  ID_ESITO_ISTRUTTORIA           NUMBER(4)      NOT NULL,
  MOTIVAZIONE                    CLOB,
  EXT_ID_FUNZIONARIO_ISTRUTTORE  NUMBER(4)      NOT NULL,
  ID_ESITO_CONTROLLO_IN_LOCO     NUMBER(4),
  DATA_FINE_CONTROLLO            DATE,
  DATA_CHIUSURA_ISTRUTTORIA      DATE           NOT NULL,
  ID_MOTIVAZIONE_POST_ISTR       NUMBER(4)
)
LOB (MOTIVAZIONE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_ESITO_OPERAZIONE.ID_ESITO_ISTRUTTORIA IS 'gestira'' i record con TIPO_ESITO = ''P'' ';

COMMENT ON COLUMN IUF_T_ESITO_OPERAZIONE.MOTIVAZIONE IS 'obbligatoria nel caso in cui l''esito dell''istruttoria non sia Positivo (CODICE <> ''P'')';

COMMENT ON COLUMN IUF_T_ESITO_OPERAZIONE.EXT_ID_FUNZIONARIO_ISTRUTTORE IS 'selezione dalla view SMRCOMUNE_V_TECNICO con ID_AMM_COMPETENZA e ID_UFFICIO_ZONA a cui e'' legato il procedimento';

COMMENT ON COLUMN IUF_T_ESITO_OPERAZIONE.DATA_FINE_CONTROLLO IS 'non puo'' essere futura';



CREATE TABLE IUF_T_ESITO_TECNICO
(
  ID_ESITO_TECNICO               NUMBER(10)     NOT NULL,
  ID_PROCEDIMENTO_OGGETTO        NUMBER(10)     NOT NULL,
  EXT_ID_TECNICO                 NUMBER(4),
  EXT_ID_FUNZIONARIO_GRADO_SUP   NUMBER(4),
  NOTE                           VARCHAR2(4000 BYTE),
  ID_QUADRO_OGGETTO              NUMBER(10)     NOT NULL,
  FLAG_CONTROLLO_IN_LOCO         VARCHAR2(1 BYTE),
  DATA_CONTROLLO_IN_LOCO         DATE,
  DATA_CHIUSURA_VERBALE_IN_LOCO  DATE,
  ID_ESITO                       NUMBER(4),
  ID_TIPO_ATTO                   NUMBER(4),
  NUMERO_ATTO                    VARCHAR2(200 BYTE),
  DATA_AMMISSIONE                DATE
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_ESITO_TECNICO IS 'gestisce gli esiti dei controlli amministrativi e/o in loco da parte del tecnico ';

COMMENT ON COLUMN IUF_T_ESITO_TECNICO.EXT_ID_TECNICO IS 'Punta alla tabella DB_TECNICO di SMRCOMUNE';



CREATE TABLE IUF_T_ESITO_TECNICO_ISTRUT
(
  PRESCRIZIONI      CLOB,
  ID_ESITO_TECNICO  NUMBER(10)                  NOT NULL,
  MOTIVAZIONE       CLOB
)
LOB (PRESCRIZIONI) STORE AS (
  TABLESPACE  IUFFI_LOB)
LOB (MOTIVAZIONE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_FILE_LISTA_LIQUIDAZION
(
  ID_FILE_LISTA_LIQUIDAZIONE   NUMBER(10)       NOT NULL,
  ID_LISTA_LIQUIDAZIONE        NUMBER(10)       NOT NULL,
  NOME_FILE                    VARCHAR2(255 BYTE) NOT NULL,
  FILE_ALLEGATO                BLOB,
  ID_STATO_STAMPA              NUMBER(4)        NOT NULL,
  DESC_ANOMALIA                VARCHAR2(4000 BYTE),
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL,
  EXT_ID_DOCUMENTO_INDEX       NUMBER(10),
  DATA_PROTOCOLLO              DATE,
  NUMERO_PROTOCOLLO            VARCHAR2(100 BYTE),
  DATA_PROTOCOLLO_EMERGENZA    DATE,
  NUMERO_PROTOCOLLO_EMERGENZA  VARCHAR2(100 BYTE)
)
LOB (FILE_ALLEGATO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_FINE_LAVORI
(
  ID_FINE_LAVORI                NUMBER(10)      NOT NULL,
  ID_PROCEDIMENTO_OGGETTO       NUMBER(10)      NOT NULL,
  DATA_FINE_LAVORI              DATE,
  DATA_TERMINE_RENDICONTAZIONE  DATE,
  DATA_PROROGA                  DATE,
  NOTE                          VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_IMPORTI_LIQUIDATI
(
  ID_IMPORTI_LIQUIDATI     NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  ID_LIVELLO               NUMBER(4)            NOT NULL,
  RAGGRUPPAMENTO           VARCHAR2(200 BYTE),
  IMPORTO_COMPLESSIVO      NUMBER(12,2),
  IMPORTO_LIQUIDATO        NUMBER(12,2)         NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_INFO_CINGHIALI
(
  ID_INFO_CINGHIALI            NUMBER(10)       NOT NULL,
  CENSITI_ADULTI_M             NUMBER(10),
  CENSITI_ADULTI_F             NUMBER(10),
  CENSITI_PICCOLI_STRIATI      NUMBER(10),
  CENSITI_PICCOLI_ROSSI        NUMBER(10),
  PRELIEVO_ADULTI_M            NUMBER(10),
  PRELIEVO_ADULTI_F            NUMBER(10),
  PRELIEVO_PICCOLI             NUMBER(10),
  VALORE_METODO_CENSIMENTO     NUMBER(10,4),
  DESCR_ALTRA_METOD            VARCHAR2(250 BYTE),
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  ID_METODO_SPECIE             NUMBER(4)        NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_INFO_EXPOST
(
  ID_INFO_EXPOST        NUMBER(10)              NOT NULL,
  ID_DATI_PROCEDIMENTO  NUMBER(10)              NOT NULL,
  ID_RISCHIO_ELEVATO    NUMBER(4),
  NOTE                  VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_INTERVENTO
(
  ID_INTERVENTO               NUMBER(10)        NOT NULL,
  ID_PROCEDIMENTO             NUMBER(10)        NOT NULL,
  ID_DESCRIZIONE_INTERVENTO   NUMBER(4)         NOT NULL,
  FLAG_INTERVENTO_COMPLETATO  VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_INTERVENTO.FLAG_INTERVENTO_COMPLETATO IS 'Serve per contenere l''impostazione piu'' recente del dato effettuata nelle domande di acconto e nelle rispettive istruttorie, in corrispondenza delle tabelle IUF_T_RENDICONTAZIONE_SPESE e IUF_T_ACCERTAMENTO_SPESE';



CREATE TABLE IUF_T_ITER_PROCEDIMENTO_GRUP
(
  ID_ITER_PROCEDIMENTO_GRUPPO  NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO              NUMBER(10)       NOT NULL,
  ID_STATO_OGGETTO             NUMBER(4)        NOT NULL,
  CODICE_RAGGRUPPAMENTO        NUMBER(4)        NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  NOTE                         VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ITER_PROCEDIMENTO_OGGE
(
  ID_ITER_PROCEDIMENTO_OGGETT  NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  ID_STATO_OGGETTO             NUMBER(4)        NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  NOTE                         VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_NOTIFICA
(
  ID_NOTIFICA                  NUMBER(10)       NOT NULL,
  NOTE                         VARCHAR2(4000 BYTE) NOT NULL,
  ID_VISIBILITA                NUMBER(4)        NOT NULL,
  ID_PROCEDIMENTO              NUMBER(10)       NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  ID_GRAVITA_NOTIFICA          NUMBER(4)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_NOTIFICA IS 'Gli utenti che saranno abilitati potranno mettere delle notifiche in modo da poter bloccare un procedimento, oppure inserire anche solo una segnalazione di waring';



CREATE TABLE IUF_T_OGUR
(
  ID_OGUR                      NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  PROGRESSIVO                  NUMBER(3)        NOT NULL,
  ID_SPECIE_OGUR               NUMBER(4)        NOT NULL,
  SUPERFICIE_TOTALE_ATCCA      NUMBER(10,4),
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_OGUR_DISTRETTO
(
  ID_DISTRETTO                 NUMBER(10)       NOT NULL,
  NOMIN_DISTRETTO              VARCHAR2(250 BYTE) NOT NULL,
  ID_OGUR                      NUMBER(10)       NOT NULL,
  SUPERFICIE_DISTRETTO         NUMBER(10,4),
  SUPERF_VENAB_DISTRETTO       NUMBER(10,4),
  SUS                          NUMBER(10,4),
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_OGUR_IPOTESI_PRELIEVO
(
  ID_IPOTESI_PRELIEVO          NUMBER(10)       NOT NULL,
  ID_DISTRETTO                 NUMBER(10)       NOT NULL,
  ANNO                         NUMBER(4)        NOT NULL,
  PERCENTUALE                  NUMBER(5,2),
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PARTECIPANTE
(
  ID_PARTECIPANTE               NUMBER(10)      NOT NULL,
  ID_DATI_PROCEDIMENTO          NUMBER(10)      NOT NULL,
  EXT_ID_AZIENDA                NUMBER(10),
  CUAA                          VARCHAR2(16 BYTE),
  DENOMINAZIONE                 VARCHAR2(1000 BYTE),
  INDIRIZZO_SEDE_LEGALE         VARCHAR2(250 BYTE),
  EXT_ISTAT_COMUNE_SEDE_LEGALE  VARCHAR2(6 BYTE),
  CAP_SEDE_LEGALE               VARCHAR2(6 BYTE),
  MAIL                          VARCHAR2(100 BYTE),
  FLAG_CAPOFILA                 VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_PARTECIPANTE IS 'aziende che partecipano insieme al beneficiario al progetto';

COMMENT ON COLUMN IUF_T_PARTECIPANTE.EXT_ID_AZIENDA IS 'se il partecipante esiste gia'' in anagrafe verra'' valorizzato tale valore';



CREATE TABLE IUF_T_PARTICELLA_UTILIZZO
(
  ID_PARTICELLA_UTILIZZO        NUMBER(10)      NOT NULL,
  ID_DATI_PROCEDIMENTO          NUMBER(10)      NOT NULL,
  EXT_ID_CONDUZIONE_DICHIARATA  NUMBER(10)      NOT NULL,
  EXT_ID_UTILIZZO_DICHIARATO    NUMBER(10)      NOT NULL,
  SUPERFICIE_UTILIZZATA         NUMBER(10,4)    NOT NULL,
  SUPERFICIE_IMPEGNO            NUMBER(10,4),
  SUPERFICIE_RINUNCIATA         NUMBER(10,4)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_PARTICELLA_UTILIZZO IS 'contiene l''acquisizione delle particelle di anagrafe';

COMMENT ON COLUMN IUF_T_PARTICELLA_UTILIZZO.SUPERFICIE_UTILIZZATA IS 'costituisce la massima superficie ammissibile all''impegno, cioe'' richiedibile a premio';

COMMENT ON COLUMN IUF_T_PARTICELLA_UTILIZZO.SUPERFICIE_IMPEGNO IS 'per le particelle richieste a premio sara'' uguale su tutti gli impegni';



CREATE TABLE IUF_T_PARTICELLE_FAUNA
(
  ID_PARTICELLE_FAUNA         NUMBER(10)        NOT NULL,
  EXT_ID_UTILIZZO_DICHIARATO  NUMBER(10),
  SUPERFICIE_DANNEGGIATA      NUMBER(10,4),
  ID_DANNO_FAUNA              NUMBER(10)        NOT NULL,
  FLAG_UTILIZZO_SEC           VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL,
  EXT_ID_UTILIZZO             NUMBER(10)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PIANO_FINANZIARIO_LEAD
(
  ID_PIANO_FINANZIARIO_LEADER  NUMBER(10)       NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER           NOT NULL,
  EXT_ID_AMM_COMPETENZA        NUMBER(4),
  ID_TIPO_PIANO_FINANZIARIO    NUMBER(4)        NOT NULL,
  EXT_ID_AZIENDA               NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_PIANO_FINANZIARIO_LEAD.EXT_ID_AMM_COMPETENZA IS 'punta alla tabella DB_AMM_COMPETENZA presente su comune';



CREATE TABLE IUF_T_PIANO_OGUR
(
  ID_PIANO_OGUR                NUMBER(10)       NOT NULL,
  ID_SPECIE_OGUR               NUMBER(4)        NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10),
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_PIANO_OGUR IS 'piano di selezione OGUR';



CREATE TABLE IUF_T_POSIZIONE_GRADUATORIA
(
  ID_POSIZIONE_GRADUATORIA  NUMBER(10)          NOT NULL,
  ID_GRADUATORIA            NUMBER(10)          NOT NULL,
  ORDINAMENTO1_VALORE       NUMBER(12,2)        NOT NULL,
  ORDINAMENTO2_VALORE       NUMBER(12,2),
  ORDINAMENTO3_VALORE       NUMBER(12,2),
  ORDINAMENTO4_VALORE       NUMBER(12,2),
  ORDINAMENTO5_VALORE       NUMBER(12,2),
  FLAG_ISTRUTTORIA          VARCHAR2(1 BYTE)    NOT NULL,
  POSIZIONE                 NUMBER(10),
  ID_PROCEDIMENTO           NUMBER(10)          NOT NULL,
  RAGGRUPPAMENTO            VARCHAR2(200 BYTE),
  NOTE                      VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PRATICHE_CONCESSIONE
(
  ID_PRATICHE_CONCESSIONE      NUMBER(10)       NOT NULL,
  ID_CONCESSIONE               NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  IMPORTO_LIQUIDAZIONE         NUMBER(11,2)     NOT NULL,
  CODICE_VERCOR                VARCHAR2(20 BYTE),
  DATA_VISURA                  DATE,
  NOTE                         NCLOB,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  DATA_LIQUIDAZIONE            DATE,
  IMPORTO_PERIZIA              NUMBER(11,2)     NOT NULL,
  FLAG_IMPORTO_CONCESSO        VARCHAR2(1 BYTE) DEFAULT 'X' NOT NULL
)
LOB (NOTE) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PREMIO_ALLEVAM
(
  ID_PREMIO_ALLEVAM            NUMBER(10)       NOT NULL,
  EXT_ID_SPECIE                NUMBER(4)        NOT NULL,
  EXT_ID_CATEGORIA_ANIMALE     NUMBER(4)        NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  IMPORTO_PREMIO               NUMBER(12,2)     NOT NULL,
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  UBA_PREMIO                   NUMBER(7,2)      NOT NULL,
  IMPORTO_UNITARIO             NUMBER(12,2)     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PREMIO_COLTURE
(
  ID_PREMIO_COLTURE            NUMBER(10)       NOT NULL,
  EXT_ID_UTILIZZO              NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  IMPORTO_PREMIO               NUMBER(12,2)     NOT NULL,
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  SUPERFICIE_PREMIO            NUMBER(10,4)     NOT NULL,
  IMPORTO_UNITARIO             NUMBER(12,2)     NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_PREMIO_COLTURE.EXT_ID_UTILIZZO IS 'fa riferimento a SMRGAA_V_CONDUZIONE_UTILIZZO';



CREATE TABLE IUF_T_PREMIO_COMPLESSIVO
(
  ID_PREMIO_COMPLESSIVO  NUMBER(10)             NOT NULL,
  ID_LIVELLO             NUMBER(4),
  SUPERFICIE_A_PREMIO    NUMBER(10,4),
  UBA_A_PREMIO           NUMBER(9,4),
  IMPORTO_PREMIO         NUMBER(12,2)           NOT NULL,
  ID_DATI_PROCEDIMENTO   NUMBER(10)             NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_PREMIO_COMPLESSIVO IS 'tabella con il riepilogo dei premi complessivi';



CREATE TABLE IUF_T_PRESTITI_AGRARI
(
  ID_PRESTITI_AGRARI       NUMBER(10)           NOT NULL,
  DATA_SCADENZA            DATE                 NOT NULL,
  FINALITA_PRESTITO        VARCHAR2(1000 BYTE),
  IMPORTO                  NUMBER(10,2)         NOT NULL,
  ISTITUTO_EROGANTE        VARCHAR2(100 BYTE),
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_PRESTITI_AGRARI.DATA_SCADENZA IS 'Data scadenza della singola rata da pagare o la data finale nel caso di piu'' rate';

COMMENT ON COLUMN IUF_T_PRESTITI_AGRARI.IMPORTO IS 'importo da restituire, che puo'' essere una singola rata di un mutuo o la somma di piu'' rate';

COMMENT ON COLUMN IUF_T_PRESTITI_AGRARI.ISTITUTO_EROGANTE IS 'nome dell''istituto di credito che ha erogato il prestito';



CREATE TABLE IUF_T_PROC_DOMANDA_PREC
(
  ID_PROC_DOMANDA_PREC  NUMBER(10)              NOT NULL,
  ID_PROCEDIMENTO       NUMBER(10),
  ID_PROCEDIMENTO_PREC  NUMBER(10)              NOT NULL,
  EXT_ID_AZIENDA        NUMBER(10)              NOT NULL,
  ID_BANDO              NUMBER(10)              NOT NULL,
  FLAG_ELABORATA        VARCHAR2(1 BYTE)        DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PROCEDIM_AMMINISTRAZIO
(
  ID_PROCEDIM_AMMINISTRAZIONE  NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO              NUMBER(10)       NOT NULL,
  EXT_ID_AMM_COMPETENZA        NUMBER(4)        NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  NOTE                         VARCHAR2(4000 BYTE),
  EXT_ID_TECNICO               NUMBER(4),
  EXT_ID_UFFICIO_ZONA          NUMBER(4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PROCEDIMENTO_ESTRATTO
(
  ID_PROCEDIMENTO_ESTRATTO  NUMBER(10)          NOT NULL,
  ID_PROCEDIMENTO           NUMBER(10),
  ID_PROCEDIMENTO_OGGETTO   NUMBER(10),
  FLAG_ESTRATTA             VARCHAR2(1 BYTE)    NOT NULL,
  ID_ESTRAZIONE_CAMPIONE    NUMBER(10)          NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_PROCEDIMENTO_ESTRATTO.ID_PROCEDIMENTO IS 'Una delle 2 colonne tra ID_PROCEDIMENTO e ID_PROCEDIMENTO_OGGETTO dovra'' essere valorizzata a seconda che l''estrazione riguardi l''intero procedimento (misure a premio), oppure la singola istanza di pagamento (misure a investimento)';

COMMENT ON COLUMN IUF_T_PROCEDIMENTO_ESTRATTO.ID_PROCEDIMENTO_OGGETTO IS 'Una delle 2 colonne tra ID_PROCEDIMENTO e ID_PROCEDIMENTO_OGGETTO dovra'' essere valorizzata a seconda che l''estrazione riguardi l''intero procedimento (misure a premio), oppure la singola istanza di pagamento (misure a investimento)';



CREATE TABLE IUF_T_PROCEDIMENTO_ESTR_EXPO
(
  ID_PROCEDIMENTO_ESTR_EXPOST  NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO              NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10),
  FLAG_ESTRATTA                VARCHAR2(1 BYTE) NOT NULL,
  ID_ESTRAZIONE_CAMPIONE       NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_IDX
;

COMMENT ON COLUMN IUF_T_PROCEDIMENTO_ESTR_EXPO.ID_PROCEDIMENTO IS 'Valorizzata al momento dell''estrazione';



CREATE TABLE IUF_T_PRODOTTO_TRASFORMATO
(
  ID_PRODOTTO_TRASFORMATO  NUMBER(10)           NOT NULL,
  ID_DATI_PROCEDIMENTO     NUMBER(10)           NOT NULL,
  ID_PRODOTTO              NUMBER(4)            NOT NULL,
  NOTE_BIOLOGICO           VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PRODUZIONE_AZIENDA
(
  ID_PRODUZIONE_AZIENDA       NUMBER(10)        NOT NULL,
  ID_DATI_PROCEDIMENTO        NUMBER(10)        NOT NULL,
  ID_PRODUZIONE_CERTIFICATA   NUMBER(4),
  ID_PRODUZIONE_TRADIZIONALE  NUMBER(4),
  FLAG_BIO                    VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PRODUZIONE_VENDIBILE
(
  ID_PRODUZIONE_VENDIBILE   NUMBER(10)          NOT NULL,
  ID_PRODUZIONE             NUMBER(4)           NOT NULL,
  NUMERO_CAPI               NUMBER(7)           NOT NULL,
  QUANTITA_PRODOTTA         NUMBER(6,1)         NOT NULL,
  QUANTITA_REIMPIEGATA      NUMBER(6,1),
  PREZZO                    NUMBER(7,2)         NOT NULL,
  ID_PRODUZIONE_ZOOTECNICA  NUMBER(10)          NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_PRODUZIONE_VENDIBILE.NUMERO_CAPI IS 'Quantita'' effettiva dell''allevamento (espressa nell''unita'' di misura della categoria animale) che contribuisce alla produzione totale';

COMMENT ON COLUMN IUF_T_PRODUZIONE_VENDIBILE.QUANTITA_PRODOTTA IS 'Verra'' impostato di default con il valore medio della tabella di decodifica produzione ma l''utente potra'' modiifcarlo rimanendo all''interno dei valori minimi e massimi previsti';

COMMENT ON COLUMN IUF_T_PRODUZIONE_VENDIBILE.QUANTITA_REIMPIEGATA IS 'Nel caso in cui parte della produzione venga reimpiegata all''interno della azienda questa viene indicata e la produzione lorda vendibile viene decrementata (es: se parte del latte prodotto si reimpiega per l''allattamento dei vitelli)';

COMMENT ON COLUMN IUF_T_PRODUZIONE_VENDIBILE.PREZZO IS 'prezzo unitario della produzione';



CREATE TABLE IUF_T_PUBBLICA_ALLEVAMENTO
(
  ID_PUBBLICA_ALLEVAMENTO   NUMBER(10)          NOT NULL,
  ID_DATI_PROCEDIMENTO      NUMBER(10)          NOT NULL,
  EXT_ID_ALLEVAMENTO        NUMBER(10)          NOT NULL,
  EXT_ID_SPECIE_ANIMALE     NUMBER(4)           NOT NULL,
  EXT_ID_CATEGORIA_ANIMALE  NUMBER(4)           NOT NULL,
  FLAG_PUBBLICA             VARCHAR2(1 BYTE)    DEFAULT 'N'                   NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PUBBLICA_PARTICELLA
(
  ID_PUBBLICA_PARTICELLA        NUMBER(10)      NOT NULL,
  ID_DATI_PROCEDIMENTO          NUMBER(10)      NOT NULL,
  EXT_ID_CONDUZIONE_DICHIARATA  NUMBER(10)      NOT NULL,
  EXT_ID_UTILIZZO_DICHIARATO    NUMBER(10)      NOT NULL,
  FLAG_PUBBLICA                 VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PUNTEGGIO_CALCOLATO
(
  ID_PUNTEGGIO_CALCOLATO      NUMBER(10)        NOT NULL,
  ID_DATI_PROCEDIMENTO_PUNTI  NUMBER(10)        NOT NULL,
  PUNTEGGIO_CALCOLATO         NUMBER(6,2)       NOT NULL,
  ID_BANDO_LIVELLO_CRITERIO   NUMBER(10)        NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PUNTEGGIO_ISTRUTTORIA
(
  ID_PUNTEGGIO_ISTRUTTORIA    NUMBER(10)        NOT NULL,
  ID_DATI_PROCEDIMENTO_PUNTI  NUMBER(10)        NOT NULL,
  ID_BANDO_LIVELLO_CRITERIO   NUMBER(10)        NOT NULL,
  PUNTEGGIO_ISTRUTTORIA       NUMBER(6,2)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_RENDICONTAZIONE_SPESE
(
  ID_RENDICONTAZIONE_SPESE    NUMBER(10)        NOT NULL,
  ID_INTERVENTO               NUMBER(10)        NOT NULL,
  ID_PROCEDIMENTO_OGGETTO     NUMBER(10)        NOT NULL,
  IMPORTO_SPESA               NUMBER(12,2)      NOT NULL,
  FLAG_INTERVENTO_COMPLETATO  VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL,
  NOTE                        VARCHAR2(4000 BYTE),
  CONTRIBUTO_RICHIESTO        NUMBER(12,2)      NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_RICEVUTA_PAGAMENTO
(
  ID_RICEVUTA_PAGAMENTO  NUMBER(10)             NOT NULL,
  ID_DOCUMENTO_SPESA     NUMBER(10)             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_RIEPILOGO_DANNO_FAUNA
(
  ID_RIEPILOGO_DANNO_FAUNA  NUMBER(10)          NOT NULL,
  ID_DANNO_FAUNA            NUMBER(10)          NOT NULL,
  EXT_ID_UTILIZZO           NUMBER(10)          NOT NULL,
  EXT_ISTAT_COMUNE          VARCHAR2(6 BYTE)    NOT NULL,
  SUPERFICIE_ACCERTATA      NUMBER(10,4)        NOT NULL,
  IMPORTO_DANNO_EFFETTIVO   NUMBER(12,2)        NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_W_DETT_INTERV_PROC_OGG
(
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  ID_INTERVENTO                NUMBER(10)       NOT NULL,
  IMPORTO_INVESTIMENTO         NUMBER(12,2)     NOT NULL,
  IMPORTO_AMMESSO              NUMBER(12,2),
  PERCENTUALE_CONTRIBUTO       NUMBER(5,2),
  IMPORTO_CONTRIBUTO           NUMBER(12,2),
  ID_DETT_INTERV_PROC_OGG      NUMBER(10)       NOT NULL,
  FLAG_TIPO_OPERAZIONE         VARCHAR2(1 BYTE) NOT NULL,
  ULTERIORI_INFORMAZIONI       VARCHAR2(500 BYTE),
  IMPORTO_UNITARIO             NUMBER(12,2),
  FLAG_ASSOCIATO_ALTRA_MISURA  VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  CUAA_BENEFICIARIO            VARCHAR2(16 BYTE),
  EXT_ID_AZIENDA_BENEFICIARIO  NUMBER(10),
  FLAG_CANALE                  VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_OPERA_PRESA             VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_CONDOTTA                VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_W_DETT_INTERV_PROC_OGG.FLAG_TIPO_OPERAZIONE IS 'Vale I nel caso in cui si debba fare un inserimento, D nel caso di cancellazione fisica, U nel caso di aggiornamento, E Modifica dei dati economici di Spesa Ammesa e % contributo';

COMMENT ON COLUMN IUF_W_DETT_INTERV_PROC_OGG.FLAG_ASSOCIATO_ALTRA_MISURA IS 'gestito solo dagli investimenti';

COMMENT ON COLUMN IUF_W_DETT_INTERV_PROC_OGG.FLAG_CANALE IS 'vale ''S'' nel caso in cui e'' stato selezionato come opera danneggiata il "Canale"';

COMMENT ON COLUMN IUF_W_DETT_INTERV_PROC_OGG.FLAG_OPERA_PRESA IS 'vale ''S'' nel caso in cui sia stata selezionata come opera danneggiata l''"Opera di presa" ';

COMMENT ON COLUMN IUF_W_DETT_INTERV_PROC_OGG.FLAG_CONDOTTA IS 'vale ''S'' nel caso in cui sia stata selezionata come opera danneggiata la "Condotta"';



CREATE TABLE IUF_W_FILE_ALL_INTE_PROC_OGG
(
  ID_DETT_INTERV_PROC_OGG      NUMBER(10)       NOT NULL,
  ID_FILE_ALLEGATI_INTERVENTO  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_W_LOCAL_INTERV_PROC_OGG
(
  ID_LOCAL_INTERV_PROC_OGG       NUMBER(10)     NOT NULL,
  ISTAT_COMUNE                   VARCHAR2(6 BYTE),
  EXT_ID_PARTICELLA_CERTIFICATA  NUMBER(10),
  EXT_ID_CONDUZIONE_DICHIARATA   NUMBER(10),
  EXT_ID_UTILIZZO_DICHIARATO     NUMBER(20),
  ID_DETT_INTERV_PROC_OGG        NUMBER(10)     NOT NULL,
  SUPERFICIE_IMPEGNO             NUMBER(10,4),
  SUPERFICIE_EFFETTIVA           NUMBER(10,4),
  SUPERFICIE_ISTRUTTORIA         NUMBER(10,4),
  SUPERFICIE_ACCERTATA_GIS       NUMBER(10,4)
)
TABLESPACE IUFFI_TBL
;


CREATE UNIQUE INDEX AK1_IUF_T_ANOMALIE_CONTROLLI ON IUF_T_ANOMALIE_CONTROLLI
(ID_PROCEDIMENTO_OGGETTO, ID_CONTROLLO, ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_T_DANNO_ATM ON IUF_T_DANNO_ATM
(ID_PROCEDIMENTO_OGGETTO, PROGRESSIVO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_T_ESECUZIONE_CONTROL ON IUF_T_ESECUZIONE_CONTROLLI
(ID_PROCEDIMENTO_OGGETTO, ID_FONTE_CONTROLLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_T_ESITO_FINALE ON IUF_T_ESITO_FINALE
(ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_T_ESITO_OPERAZIONE ON IUF_T_ESITO_OPERAZIONE
(ID_ESITO_FINALE, ID_LIVELLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_T_IMPORTI_LIQUIDATI ON IUF_T_IMPORTI_LIQUIDATI
(ID_PROCEDIMENTO_OGGETTO, ID_LIVELLO, RAGGRUPPAMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_T_PRODUZIONE_VENDIBI ON IUF_T_PRODUZIONE_VENDIBILE
(ID_PRODUZIONE_ZOOTECNICA, ID_PRODUZIONE)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_R_PROC_PRODUZIONE_ZO ON IUF_R_PROC_PRODUZIONE_ZOOTEC
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_R_PROC_SUPERFICIE_CO ON IUF_R_PROC_SUPERFICIE_COLTUR
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_DATI_CO_ELEM_QUADR ON IUF_T_DATI_COMUNI_ELEM_QUADR
(ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_DATI_PROCEDIMENTO ON IUF_T_DATI_PROCEDIMENTO
(ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_DATO_ELEMENTO_QUAD ON IUF_T_DATO_ELEMENTO_QUADRO
(ID_ELEMENTO_QUADRO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_ITER_PROCEDIMENTO_ ON IUF_T_ITER_PROCEDIMENTO_GRUP
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_ITER_PROCEDIM_OGGE ON IUF_T_ITER_PROCEDIMENTO_OGGE
(ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_NOTIFICA ON IUF_T_NOTIFICA
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_PARTICELLA_UTILIZZ ON IUF_T_PARTICELLA_UTILIZZO
(ID_DATI_PROCEDIMENTO, EXT_ID_CONDUZIONE_DICHIARATA, EXT_ID_UTILIZZO_DICHIARATO)
TABLESPACE IUFFI_TBL;


CREATE INDEX IE1_IUF_T_PREMIO_COMPLESSIVO ON IUF_T_PREMIO_COMPLESSIVO
(ID_DATI_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_PROCEDIM_AMMINISTR ON IUF_T_PROCEDIM_AMMINISTRAZIO
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_PROCEDIMENTO_ESTRA ON IUF_T_PROCEDIMENTO_ESTRATTO
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_RENDICONTAZIONE_SP ON IUF_T_RENDICONTAZIONE_SPESE
(ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE2_IUF_T_DATO_ELEMENTO_QUAD ON IUF_T_DATO_ELEMENTO_QUADRO
(ID_DATI_COMUNI_ELEM_QUADRO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE2_IUF_T_PROCEDIMENTO_ESTRA ON IUF_T_PROCEDIMENTO_ESTRATTO
(ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_ALLEGATI_BANDO ON IUF_D_ALLEGATI_BANDO
(ID_ALLEGATI_BANDO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_DETTAGLIO_INFO_CATA ON IUF_D_DETTAGLIO_INFO_CATALOG
(ID_DETTAGLIO_INFO_CATALOGO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_GRUPPO_INFO ON IUF_D_GRUPPO_INFO
(ID_GRUPPO_INFO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_GRUPPO_TESTO_VERBAL ON IUF_D_GRUPPO_TESTO_VERBALE
(ID_GRUPPO_TESTO_VERBALE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_IMPEGNO ON IUF_D_IMPEGNO
(ID_IMPEGNO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_TESTO_VERBALE ON IUF_D_TESTO_VERBALE
(ID_TESTO_VERBALE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_BANDO_LIVELLO_CRITE ON IUF_R_BANDO_LIVELLO_CRITERIO
(ID_BANDO_LIVELLO_CRITERIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIV_BANDO_BENEFICIA ON IUF_R_LIV_BANDO_BENEFICIARIO
(ID_LIVELLO, ID_BANDO, EXT_ID_FG_TIPOLOGIA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIV_BANDO_GRADUATOR ON IUF_R_LIV_BANDO_GRADUATORIA
(ID_LIVELLO, ID_BANDO, ID_GRADUATORIA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIV_BANDO_INTERVENT ON IUF_R_LIV_BANDO_INTERVENTO
(ID_BANDO, ID_DESCRIZIONE_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_MATRICE_IMPEGNI ON IUF_R_MATRICE_IMPEGNI
(ID_IMPEGNO_PRINCIPALE, ID_IMPEGNO_COMPATIBILE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_PROCEDIMENTO_LIVELL ON IUF_R_PROCEDIMENTO_LIVELLO
(ID_PROCEDIMENTO, ID_LIVELLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_PROCEDIMENTO_OGG_LI ON IUF_R_PROCEDIMENTO_OGG_LIVEL
(ID_PROCEDIMENTO_OGGETTO, ID_LIVELLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_PROCEDIMENTO_SCORTA ON IUF_R_PROCEDIMENTO_SCORTA
(ID_PROCEDIMENTO_SCORTA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_PROC_PRODUZIONE_ZOO ON IUF_R_PROC_PRODUZIONE_ZOOTEC
(ID_PROC_PRODUZIONE_ZOOTEC)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_PROC_SUPERFICIE_COL ON IUF_R_PROC_SUPERFICIE_COLTUR
(ID_PROC_SUPERFICIE_COLTUR)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_RISORSE_LIV_BANDO_A ON IUF_R_RISOR_LIV_BANDO_AMM_CO
(ID_RISORSE_LIVELLO_BANDO, EXT_ID_AMM_COMPETENZA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ACCERTAMENTO_DANNO ON IUF_T_ACCERTAMENTO_DANNO
(ID_ACCERTAMENTO_DANNO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ANALISI_RISCHIO ON IUF_T_ANALISI_RISCHIO
(ID_ANALISI_RISCHIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ANALISI_RISCHIO_IMP ON IUF_T_ANALISI_RISCHIO_IMP
(ID_ANALISI_RISCHIO_IMP)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ANOMALIE_CONTROLLI ON IUF_T_ANOMALIE_CONTROLLI
(ID_ANOMALIE_CONTROLLI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ANTICIPO ON IUF_T_ANTICIPO
(ID_ANTICIPO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ASSICURAZIONI_COLTU ON IUF_T_ASSICURAZIONI_COLTURE
(ID_ASSICURAZIONI_COLTURE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_CONTROLLO_COLTURA ON IUF_T_CONTROLLO_COLTURA
(ID_CONTROLLO_COLTURA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_CONTROLLO_IN_LOCO ON IUF_T_CONTROLLO_IN_LOCO
(ID_CONTROLLO_IN_LOCO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_CONTROLLO_IN_LOCO_E ON IUF_T_CONTROLLO_IN_LOCO_EXPO
(ID_CONTROLLO_IN_LOCO_EXPOST)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_CONTROLLO_IN_LOCO_I ON IUF_T_CONTROLLO_IN_LOCO_INVE
(ID_CONTROLLO_IN_LOCO_INVEST)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DANNO_ATM ON IUF_T_DANNO_ATM
(ID_DANNO_ATM)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DANNO_FAUNA ON IUF_T_DANNO_FAUNA
(ID_DANNO_FAUNA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DATI_BILANCIO ON IUF_T_DATI_BILANCIO
(ID_DATI_BILANCIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DATI_COMUNI_ELEM_QU ON IUF_T_DATI_COMUNI_ELEM_QUADR
(ID_DATI_COMUNI_ELEM_QUADRO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DATI_DANNO_FAUNA ON IUF_T_DATI_DANNO_FAUNA
(ID_DATI_DANNO_FAUNA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DATI_PROCEDIMENTO ON IUF_T_DATI_PROCEDIMENTO
(ID_DATI_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DATI_PROCEDIMENTO_P ON IUF_T_DATI_PROCEDIMENTO_PUNT
(ID_DATI_PROCEDIMENTO_PUNTI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DATO_ELEMENTO_QUADR ON IUF_T_DATO_ELEMENTO_QUADRO
(ID_DATO_ELEMENTO_QUADRO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DOCUMENTI_RICHIESTI ON IUF_T_DOCUMENTI_RICHIESTI
(ID_DOCUMENTI_RICHIESTI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DOCUMENTO_SPESA ON IUF_T_DOCUMENTO_SPESA
(ID_DOCUMENTO_SPESA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DOCUMENTO_SPESA_FIL ON IUF_T_DOCUMENTO_SPESA_FILE
(ID_DOCUMENTO_SPESA_FILE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ECONOMIA ON IUF_T_ECONOMIA
(ID_ECONOMIA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ELAB_MASSIVA ON IUF_T_ELAB_MASSIVA
(ID_ELAB_MASSIVA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ESECUZIONE_CONTROLL ON IUF_T_ESECUZIONE_CONTROLLI
(ID_ESECUZIONE_CONTROLLI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ESITO_CONTROLLI_AMM ON IUF_T_ESITO_CONTROLLI_AMM
(ID_ESITO_CONTROLLI_AMM)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ESITO_FINALE ON IUF_T_ESITO_FINALE
(ID_ESITO_FINALE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ESITO_OPERAZIONE ON IUF_T_ESITO_OPERAZIONE
(ID_ESITO_OPERAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ESITO_TECNICO ON IUF_T_ESITO_TECNICO
(ID_ESITO_TECNICO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ESITO_TECNICO_ISTRU ON IUF_T_ESITO_TECNICO_ISTRUT
(ID_ESITO_TECNICO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_FILE_LISTA_LIQUIDAZ ON IUF_T_FILE_LISTA_LIQUIDAZION
(ID_FILE_LISTA_LIQUIDAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_FINE_LAVORI ON IUF_T_FINE_LAVORI
(ID_FINE_LAVORI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_IMPORTI_LIQUIDATI ON IUF_T_IMPORTI_LIQUIDATI
(ID_IMPORTI_LIQUIDATI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_INFO_CINGHIALI ON IUF_T_INFO_CINGHIALI
(ID_INFO_CINGHIALI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_INFO_EXPOST ON IUF_T_INFO_EXPOST
(ID_INFO_EXPOST)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_INTERVENTO ON IUF_T_INTERVENTO
(ID_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ITER_PROCEDIMENTO_G ON IUF_T_ITER_PROCEDIMENTO_GRUP
(ID_ITER_PROCEDIMENTO_GRUPPO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ITER_PROCEDIMENTO_O ON IUF_T_ITER_PROCEDIMENTO_OGGE
(ID_ITER_PROCEDIMENTO_OGGETT)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_NOTIFICA ON IUF_T_NOTIFICA
(ID_NOTIFICA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_OGUR ON IUF_T_OGUR
(ID_OGUR)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_OGUR_DISTRETTO ON IUF_T_OGUR_DISTRETTO
(ID_DISTRETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_OGUR_IPOTESI_PRELIE ON IUF_T_OGUR_IPOTESI_PRELIEVO
(ID_IPOTESI_PRELIEVO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PARTECIPANTE ON IUF_T_PARTECIPANTE
(ID_PARTECIPANTE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PARTICELLA_UTILIZZO ON IUF_T_PARTICELLA_UTILIZZO
(ID_PARTICELLA_UTILIZZO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PARTICELLE_FAUNA ON IUF_T_PARTICELLE_FAUNA
(ID_PARTICELLE_FAUNA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PIANO_FINANZIARIO_L ON IUF_T_PIANO_FINANZIARIO_LEAD
(ID_PIANO_FINANZIARIO_LEADER)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PIANO_OGUR ON IUF_T_PIANO_OGUR
(ID_PIANO_OGUR)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_POSIZIONE_GRADUATOR ON IUF_T_POSIZIONE_GRADUATORIA
(ID_POSIZIONE_GRADUATORIA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PRATICHE_CONCESSION ON IUF_T_PRATICHE_CONCESSIONE
(ID_PRATICHE_CONCESSIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PREMIO_ALLEVAM ON IUF_T_PREMIO_ALLEVAM
(ID_PREMIO_ALLEVAM)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PREMIO_COLTURE ON IUF_T_PREMIO_COLTURE
(ID_PREMIO_COLTURE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PREMIO_COMPLESSIVO ON IUF_T_PREMIO_COMPLESSIVO
(ID_PREMIO_COMPLESSIVO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PRESTITI_AGRARI ON IUF_T_PRESTITI_AGRARI
(ID_PRESTITI_AGRARI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROC_DOMANDA_PREC ON IUF_T_PROC_DOMANDA_PREC
(ID_PROC_DOMANDA_PREC)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROCEDIM_AMMINISTRA ON IUF_T_PROCEDIM_AMMINISTRAZIO
(ID_PROCEDIM_AMMINISTRAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROCEDIMENTO_ESTRAT ON IUF_T_PROCEDIMENTO_ESTRATTO
(ID_PROCEDIMENTO_ESTRATTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PROCEDIMENTO_ESTR_E ON IUF_T_PROCEDIMENTO_ESTR_EXPO
(ID_PROCEDIMENTO_ESTR_EXPOST)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PRODOTTO_TRASFORMAT ON IUF_T_PRODOTTO_TRASFORMATO
(ID_PRODOTTO_TRASFORMATO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PRODUZIONE_AZIENDA ON IUF_T_PRODUZIONE_AZIENDA
(ID_PRODUZIONE_AZIENDA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PRODUZIONE_VENDIBIL ON IUF_T_PRODUZIONE_VENDIBILE
(ID_PRODUZIONE_VENDIBILE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PUBBLICA_ALLEVAMENT ON IUF_T_PUBBLICA_ALLEVAMENTO
(ID_PUBBLICA_ALLEVAMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PUBBLICA_PARTICELLA ON IUF_T_PUBBLICA_PARTICELLA
(ID_PUBBLICA_PARTICELLA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PUNTEGGIO_CALCOLATO ON IUF_T_PUNTEGGIO_CALCOLATO
(ID_PUNTEGGIO_CALCOLATO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PUNTEGGIO_ISTRUTTOR ON IUF_T_PUNTEGGIO_ISTRUTTORIA
(ID_PUNTEGGIO_ISTRUTTORIA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_RENDICONTAZIONE_SPE ON IUF_T_RENDICONTAZIONE_SPESE
(ID_RENDICONTAZIONE_SPESE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_RICEVUTA_PAGAMENTO ON IUF_T_RICEVUTA_PAGAMENTO
(ID_RICEVUTA_PAGAMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_RIEPILOGO_DANNO_FAU ON IUF_T_RIEPILOGO_DANNO_FAUNA
(ID_RIEPILOGO_DANNO_FAUNA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_W_DETT_INTERV_PROC_OG ON IUF_W_DETT_INTERV_PROC_OGG
(ID_DETT_INTERV_PROC_OGG)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_W_FILE_ALL_INT_PROC_O ON IUF_W_FILE_ALL_INTE_PROC_OGG
(ID_DETT_INTERV_PROC_OGG, ID_FILE_ALLEGATI_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_W_LOCAL_INTERV_PROC_O ON IUF_W_LOCAL_INTERV_PROC_OGG
(ID_LOCAL_INTERV_PROC_OGG)
TABLESPACE IUFFI_IDX;


CREATE TABLE IUF_D_DETTAGLIO_INFO
(
  ID_DETTAGLIO_INFO      NUMBER(10)             NOT NULL,
  ID_GRUPPO_INFO         NUMBER(10)             NOT NULL,
  DESCRIZIONE            VARCHAR2(2000 BYTE)    NOT NULL,
  ORDINE                 NUMBER(4)              NOT NULL,
  FLAG_OBBLIGATORIO      VARCHAR2(1 BYTE)       NOT NULL,
  ID_LEGAME_INFO         NUMBER(10),
  FLAG_GESTIONE_FILE     VARCHAR2(1 BYTE)       DEFAULT 'N'                   NOT NULL,
  EXT_ID_TIPO_DOCUMENTO  NUMBER(4),
  CODICE_INFO            VARCHAR2(20 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_D_DETTAGLIO_INFO.FLAG_GESTIONE_FILE IS 'Potra'' assumere i seguenti valori: N = nessun file previsto, F = possibile allegare un file ,O = obbligatorio allegare un file';

COMMENT ON COLUMN IUF_D_DETTAGLIO_INFO.EXT_ID_TIPO_DOCUMENTO IS 'chiave della tabella DOQUIAGRI_D_TIPO_DOCUMENTO';



CREATE TABLE IUF_R_ANNI_EXPOST
(
  ID_INFO_EXPOST  NUMBER(10)                    NOT NULL,
  ID_ANNO_EXPOST  NUMBER(4)                     NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_ANTICIPO_LIVELLO
(
  ID_ANTICIPO           NUMBER(10)              NOT NULL,
  ID_LIVELLO            NUMBER(4)               NOT NULL,
  IMPORTO_ANTICIPO      NUMBER(12,2)            NOT NULL,
  IMPORTO_INVESTIMENTO  NUMBER(12,2)            NOT NULL,
  IMPORTO_AMMESSO       NUMBER(12,2)            NOT NULL,
  IMPORTO_CONTRIBUTO    NUMBER(12,2)            NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_ANTICIPO_LIVELLO.IMPORTO_ANTICIPO IS 'Rappresenta la quota parte di anticipo relativo a ciascuna operazione associata agli interventi costituenti la domanda, determinata automaticamente ripartendo in modo proporzionale l''importo totale dell''anticipo rispetto agli importi degli interventi ';



CREATE TABLE IUF_R_ANTICIPO_PROC_OGG
(
  ID_ANTICIPO              NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_R_ANTICIPO_PROC_OGG IS 'Consente di legare piu'' "procedimento oggetto" allo stesso record di anticipo (ad esempio la domanda di anticipo e la relativa istruttoria)';



CREATE TABLE IUF_R_DANNO_ATM_INTERVENTO
(
  ID_INTERVENTO            NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  PROGRESSIVO              NUMBER(3)            NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_DETT_INTE_PROC_OGG_MIS
(
  ID_DETT_INTERV_PROC_OGG    NUMBER(10)         NOT NULL,
  ID_MISURAZIONE_INTERVENTO  NUMBER(10)         NOT NULL,
  QUANTITA                   NUMBER             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_DOC_SPESA_INT_RICEV_PA
(
  ID_INTERVENTO                NUMBER(10)       NOT NULL,
  ID_RICEVUTA_PAGAMENTO        NUMBER(10)       NOT NULL,
  ID_DOCUMENTO_SPESA           NUMBER(10)       NOT NULL,
  IMPORTO                      NUMBER(12,2)     NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_DOC_SPESA_PROC_OGG
(
  ID_DOC_SPESA_PROC_OGG    NUMBER(10)           NOT NULL,
  ID_DOCUMENTO_SPESA       NUMBER(10)           NOT NULL,
  ID_DOCUMENTO_SPESA_FILE  NUMBER(10)           NOT NULL,
  ID_RICEVUTA_PAGAMENTO    NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_R_DOC_SPESA_PROC_OGG IS 'serve ad identificare il set di dati dei documenti di spesa, file e ricevute di pagamento associate ad un gruppo di domanda di pagamento identificato da ID_PROCEDIMENTO/CODICE_RAGGRUPPAMENTO';



CREATE TABLE IUF_R_DOCUMENTO_SPESA_INTERV
(
  ID_DOCUMENTO_SPESA           NUMBER(10)       NOT NULL,
  ID_INTERVENTO                NUMBER(10)       NOT NULL,
  IMPORTO                      NUMBER(12,2)     NOT NULL,
  ID_DOCUMENTO_SPESA_INTERVEN  NUMBER(10)       NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_LISTA_LIQUIDAZ_IMP_LIQ
(
  ID_LISTA_LIQUIDAZ_IMP_LIQ  NUMBER(10)         NOT NULL,
  ID_LISTA_LIQUIDAZIONE      NUMBER(10)         NOT NULL,
  ID_IMPORTI_LIQUIDATI       NUMBER(10)         NOT NULL,
  FLAG_ESITO_LIQUIDAZIONE    VARCHAR2(1 BYTE)   DEFAULT 'N'                   NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO  DATE               NOT NULL,
  CODICE_FONDO               VARCHAR2(10 BYTE),
  NUMERO_MANDATO             NUMBER(10),
  ANNO_ESERCIZIO             NUMBER(4),
  CODICE_AGEA                VARCHAR2(20 BYTE),
  CODICE_PAGAMENTO           VARCHAR2(100 BYTE),
  NUMERO_PAGAMENTO           NUMBER(11),
  DATA_CREAZIONE_DECRETO     DATE,
  NUMERO_DECRETO             NUMBER(5),
  DATA_CREAZIONE_MANDATO     DATE,
  NUMERO_PROGRESSIVO         NUMBER(10),
  IMPORTO                    NUMBER(11,2),
  IMPORTO_REC                NUMBER(11,2),
  DATA_EFFETUAZIONE          DATE,
  NOTE                       VARCHAR2(4000 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_LISTA_LIQUIDAZ_IMP_LIQ.FLAG_ESITO_LIQUIDAZIONE IS '''N'' - In Liquidazione, ''S'' - Liquidata, ''R'' - Pagamento respinto';



CREATE TABLE IUF_R_LIV_FOCUS_AREA_LEADER
(
  ID_PIANO_FINANZIARIO_LEADER  NUMBER(10)       NOT NULL,
  COSTO_TOTALE                 NUMBER(12,2)     NOT NULL,
  ID_LIV_FOCUS_AREA_LEADER     NUMBER(10)       NOT NULL,
  RISORSE_PUBBLICHE            NUMBER(12,2)     NOT NULL,
  ID_LIVELLO                   NUMBER(4)        NOT NULL,
  ID_AMBITO_TEMATICO           NUMBER(4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_PARTICELLA_DANNEGGIATA
(
  ID_DANNO_ATM                NUMBER(10)        NOT NULL,
  EXT_ID_UTILIZZO_DICHIARATO  NUMBER(10)        NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_R_PARTICELLA_DANNEGGIATA.EXT_ID_UTILIZZO_DICHIARATO IS 'punta alla vista di anagrafe SMRGAA_V_CONDUZIONE_UTILIZZO';



CREATE TABLE IUF_R_PROC_ASSICURAZ_COLTURE
(
  ID_PROCEDIMENTO_ASSICURAZ_COLT  NUMBER(10)    NOT NULL,
  ID_PROCEDIMENTO                 NUMBER(10)    NOT NULL,
  ID_ASSICURAZIONI_COLTURE        NUMBER(10)    NOT NULL,
  DATA_INIZIO                     DATE          NOT NULL,
  DATA_FINE                       DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_PROCEDIMEN_DANNO_FAUNA
(
  ID_PROCEDIMEN_DANNO_FAUNA  NUMBER(10)         NOT NULL,
  ID_PROCEDIMENTO            NUMBER(10)         NOT NULL,
  ID_DANNO_FAUNA             NUMBER(10)         NOT NULL,
  DATA_INIZIO                DATE               NOT NULL,
  DATA_FINE                  DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_PROCEDIMENTO_DANNO
(
  ID_PROCEDIMENTO_DANNO  NUMBER(10)             NOT NULL,
  ID_DANNO_ATM           NUMBER(10)             NOT NULL,
  DATA_INIZIO            DATE                   NOT NULL,
  DATA_FINE              DATE,
  ID_PROCEDIMENTO        NUMBER(10)             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_PROC_PRESTITI_AGRARI
(
  ID_PROC_PRESTITI_AGRARI  NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO          NUMBER(10)           NOT NULL,
  ID_PRESTITI_AGRARI       NUMBER(10)           NOT NULL,
  DATA_INIZIO              DATE                 NOT NULL,
  DATA_FINE                DATE
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_RISOR_LIV_BAND_IMP_LIQ
(
  ID_RISORSE_LIVELLO_BANDO  NUMBER(10)          NOT NULL,
  ID_IMPORTI_LIQUIDATI      NUMBER(10)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_TIPO_DOCUMENTI_RICHIES
(
  ID_DOCUMENTI_RICHIESTI  NUMBER(10)            NOT NULL,
  ID_TIPO_DOC_RICHIESTI   NUMBER(4)             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ACCERTAMENTO_SPESE
(
  ID_ACCERTAMENTO_SPESE       NUMBER(10)        NOT NULL,
  ID_INTERVENTO               NUMBER(10)        NOT NULL,
  ID_PROCEDIMENTO_OGGETTO     NUMBER(10)        NOT NULL,
  IMPORTO_ACCERTATO           NUMBER(12,2)      NOT NULL,
  IMPORTO_NON_RICONOSCIUTO    NUMBER(12,2)      NOT NULL,
  IMPORTO_DISPONIBILE         NUMBER(12,2)      NOT NULL,
  IMPORTO_CALCOLO_CONTRIBUTO  NUMBER(12,2)      NOT NULL,
  FLAG_INTERVENTO_COMPLETATO  VARCHAR2(1 BYTE)  DEFAULT 'N'                   NOT NULL,
  NOTE                        VARCHAR2(4000 BYTE),
  CONTRIBUTO_CALCOLATO        NUMBER(12,2)      NOT NULL,
  CONTRIBUTO_ABBATTUTO        NUMBER(12,2)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_ACCERTAMENTO_SPESE.CONTRIBUTO_CALCOLATO IS 'Rappresenta il contributo calcolato applicando la percentuale di contributo all''IMPORTO_CALCOLO_CONTRIBUTO';

COMMENT ON COLUMN IUF_T_ACCERTAMENTO_SPESE.CONTRIBUTO_ABBATTUTO IS 'Rappresenta il contributo effettivamente attribuito abbattuto proporzionalmente rispetto al CONTRIBUTO_EROGABILE, che tiene conto di eventuali riduzioni e/o sanzioni';



CREATE TABLE IUF_T_ALLEVAMENTO
(
  ID_ALLEVAMENTO                  NUMBER(10)    NOT NULL,
  ID_DATI_PROCEDIMENTO            NUMBER(10)    NOT NULL,
  EXT_ID_DICHIARAZIONE_CONSISTEN  NUMBER(10)    NOT NULL,
  EXT_ID_ALLEVAMENTO              NUMBER(10)    NOT NULL,
  EXT_ID_CATEGORIE_ALLEVAMENTO    NUMBER(10)    NOT NULL,
  EXT_ID_SOTTOCATEGORIA_ALLEVAME  NUMBER(10)    NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ATTIVITA
(
  ID_ATTIVITA                  NUMBER(10)       NOT NULL,
  TITOLO_ATTIVITA              VARCHAR2(4000 BYTE) NOT NULL,
  ID_DATI_PROCEDIMENTO         NUMBER(10)       NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10),
  PROGRESSIVO                  NUMBER(4),
  ID_TIPO_AGGREGAZIONE         NUMBER(4)        NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_AZIENDA_BIO
(
  ID_AZIENDA_BIO                NUMBER(10)      NOT NULL,
  ID_DATI_PROCEDIMENTO          NUMBER(10)      NOT NULL,
  DENOMINAZIONE                 VARCHAR2(1000 BYTE) NOT NULL,
  DESCRIZIONE                   VARCHAR2(4000 BYTE),
  EXT_COD_UE_ODC                VARCHAR2(12 BYTE) NOT NULL,
  ALTRO_TIPO_ATTIVITA           VARCHAR2(100 BYTE),
  ALTRA_FILIERA_PRODUTTIVA      VARCHAR2(100 BYTE),
  ALTRA_MULTIFUNZIONALITA       VARCHAR2(100 BYTE),
  DESC_TRASFORMAZIONE_PRODOTTI  VARCHAR2(1000 BYTE)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_CONTATTI
(
  ID_CONTATTI           NUMBER(10)              NOT NULL,
  ID_DATI_PROCEDIMENTO  NUMBER(10)              NOT NULL,
  ALTRO_CANALE_VENDITA  VARCHAR2(1000 BYTE),
  SITO_WEB              VARCHAR2(1000 BYTE),
  AMAZON                VARCHAR2(1000 BYTE),
  ORARI_APERTURA        VARCHAR2(1000 BYTE),
  INDIRIZZO_VENDITA     VARCHAR2(1000 BYTE),
  TELEFONO_VENDITA      VARCHAR2(1000 BYTE),
  EMAIL_VENDITA         VARCHAR2(1000 BYTE),
  DETTAGLI_MERCATI      VARCHAR2(1000 BYTE),
  COME_ARRIVARE         VARCHAR2(4000 BYTE),
  FACEBOOK              VARCHAR2(1000 BYTE),
  INSTAGRAM             VARCHAR2(1000 BYTE),
  NOTE                  VARCHAR2(4000 BYTE),
  ID_IMG_AGRIQ          NUMBER(4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_DATE_CENS_CINGHIALI
(
  ID_DATE_CENS_CINGHIALI       NUMBER(10)       NOT NULL,
  ID_INFO_CINGHIALI            NUMBER(10)       NOT NULL,
  PROGR_INFO                   NUMBER(4)        NOT NULL,
  DATA_CENSIMENTO              DATE             NOT NULL,
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_DETTAGLIO_INTERVENTO
(
  ID_DETTAGLIO_INTERVENTO      NUMBER(10)       NOT NULL,
  ID_INTERVENTO                NUMBER(10)       NOT NULL,
  IMPORTO_INVESTIMENTO         NUMBER(12,2)     NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE,
  IMPORTO_AMMESSO              NUMBER(12,2),
  PERCENTUALE_CONTRIBUTO       NUMBER(5,2),
  IMPORTO_CONTRIBUTO           NUMBER(12,2),
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  PROGRESSIVO                  NUMBER(4)        NOT NULL,
  ULTERIORI_INFORMAZIONI       VARCHAR2(500 BYTE),
  IMPORTO_UNITARIO             NUMBER(12,2),
  FLAG_ASSOCIATO_ALTRA_MISURA  VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_TIPO_OPERAZIONE         VARCHAR2(1 BYTE) NOT NULL,
  CUAA_BENEFICIARIO            VARCHAR2(16 BYTE),
  EXT_ID_AZIENDA_BENEFICIARIO  NUMBER(10),
  FLAG_CANALE                  VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_OPERA_PRESA             VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
  FLAG_CONDOTTA                VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_DETTAGLIO_INTERVENTO.FLAG_ASSOCIATO_ALTRA_MISURA IS 'gestito solo dagli investimenti';

COMMENT ON COLUMN IUF_T_DETTAGLIO_INTERVENTO.FLAG_TIPO_OPERAZIONE IS 'Vale I nel caso in cui si debba fare un inserimento, D nel caso di cancellazione fisica, U nel caso di aggiornamento, E Modifica dei dati economici di Spesa Ammesa e % contributo';

COMMENT ON COLUMN IUF_T_DETTAGLIO_INTERVENTO.FLAG_CANALE IS 'vale ''S'' nel caso in cui e'' stato selezionato come opera danneggiata il "Canale"';

COMMENT ON COLUMN IUF_T_DETTAGLIO_INTERVENTO.FLAG_OPERA_PRESA IS 'vale ''S'' nel caso in cui sia stata selezionata come opera danneggiata l''"Opera di presa" ';

COMMENT ON COLUMN IUF_T_DETTAGLIO_INTERVENTO.FLAG_CONDOTTA IS 'vale ''S'' nel caso in cui sia stata selezionata come opera danneggiata la "Condotta"';



CREATE TABLE IUF_T_DETT_DOCUMENTO_SPESA
(
  ID_DETT_DOCUMENTO_SPESA         NUMBER(10)    NOT NULL,
  ID_FORNITORE                    NUMBER(10),
  DATA_DOCUMENTO_SPESA            DATE,
  NUMERO_DOCUMENTO_SPESA          VARCHAR2(60 BYTE),
  ID_TIPO_DOCUMENTO_SPESA         NUMBER(4)     NOT NULL,
  DATA_PAGAMENTO                  DATE,
  ID_MODALITA_PAGAMENTO           NUMBER(4),
  IMPORTO_SPESA                   NUMBER(9,2)   NOT NULL,
  NOTE                            VARCHAR2(4000 BYTE),
  NOME_FILE_LOGICO_DOCUMENTO_SPE  VARCHAR2(255 BYTE),
  FILE_DOCUMENTO_SPESA            BLOB,
  NOME_FILE_FISICO_DOCUMENTO_SPE  VARCHAR2(255 BYTE),
  ID_DOCUMENTO_SPESA              NUMBER(10)    NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO       DATE          NOT NULL,
  EXT_COD_ATTORE                  VARCHAR2(50 BYTE) NOT NULL,
  DATA_INIZIO                     DATE          NOT NULL,
  DATA_FINE                       DATE,
  IMPORTO_IVA_SPESA               NUMBER(9,2)
)
LOB (FILE_DOCUMENTO_SPESA) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_DETT_DOCUMENTO_SPESA.EXT_COD_ATTORE IS 'Serve per distinguere sia la versione dei dati inseriti dal beneficiario che dell''eventuale versione rettificata dall''istruttore. Se l''utente che sta effettuando le modifiche ha un EXT_COD_ATTORE coincidente con quello del record valido i dati vengono aggiornati direttamente, altrimenti il record deve essere storicizzato e le modifiche devono essere riportate in un nuovo record';



CREATE TABLE IUF_T_DETT_RICEVUTA_PAGAMENT
(
  ID_DETT_RICEVUTA_PAGAMENTO     NUMBER(10)     NOT NULL,
  ID_RICEVUTA_PAGAMENTO          NUMBER(10)     NOT NULL,
  NUMERO_RICEVUTA_PAGAMENTO      VARCHAR2(60 BYTE),
  DATA_PAGAMENTO                 DATE,
  ID_MODALITA_PAGAMENTO          NUMBER(4)      NOT NULL,
  IMPORTO_PAGAMENTO              NUMBER(9,2)    NOT NULL,
  NOTE                           VARCHAR2(4000 BYTE),
  NOME_FILE_LOGICO_RICEVUTA_PAG  VARCHAR2(255 BYTE),
  FILE_RICEVUTA_PAGAMENTO        BLOB,
  NOME_FILE_FISICO_RICEVUTA_PAG  VARCHAR2(255 BYTE),
  DATA_ULTIMO_AGGIORNAMENTO      DATE           NOT NULL,
  EXT_COD_ATTORE                 VARCHAR2(50 BYTE) NOT NULL,
  DATA_INIZIO                    DATE           NOT NULL,
  DATA_FINE                      DATE
)
LOB (FILE_RICEVUTA_PAGAMENTO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_ITER_PIANO_FINANZ_LEAD
(
  ID_ITER_PIANO_FINANZ_LEADER  NUMBER(10)       NOT NULL,
  ID_PIANO_FINANZIARIO_LEADER  NUMBER(10)       NOT NULL,
  ID_STATO_PIANO_FINANZIARIO   NUMBER(4)        NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER           NOT NULL,
  DATA_INIZIO                  DATE             NOT NULL,
  DATA_FINE                    DATE
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_ITER_PIANO_FINANZ_LEAD IS 'Saranno presenti tutti i cambiamenti di stato comprensivo di quello corrente';



CREATE TABLE IUF_T_LOCALIZZAZIONE_INTERV
(
  ID_LOCALIZZAZIONE_INTERV       NUMBER(10)     NOT NULL,
  ID_DETTAGLIO_INTERVENTO        NUMBER(10)     NOT NULL,
  ISTAT_COMUNE                   VARCHAR2(6 BYTE),
  EXT_ID_PARTICELLA_CERTIFICATA  NUMBER(10),
  EXT_ID_CONDUZIONE_DICHIARATA   NUMBER(10),
  EXT_ID_UTILIZZO_DICHIARATO     NUMBER(20),
  SUPERFICIE_IMPEGNO             NUMBER(10,4),
  SUPERFICIE_EFFETTIVA           NUMBER(10,4),
  SUPERFICIE_ISTRUTTORIA         NUMBER(10,4),
  SUPERFICIE_ACCERTATA_GIS       NUMBER(10,4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_OGUR_ANNI_CENSITI
(
  ID_ANNI_CENSITI              NUMBER(10)       NOT NULL,
  ID_DISTRETTO                 NUMBER(10)       NOT NULL,
  ANNO                         NUMBER(4)        NOT NULL,
  TOT_CENSITO                  NUMBER(10),
  SUPERF_CENSITA               NUMBER(10,4),
  PIANO_NUMERICO               NUMBER(10),
  TOT_PRELEVATO                NUMBER(10),
  DANNI_CAUSATI                NUMBER(10,2),
  INCIDENTI_STRADALI           NUMBER(10),
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_OGUR_CENSIMENTO
(
  ID_CENSIMENTO                NUMBER(10)       NOT NULL,
  ID_DISTRETTO                 NUMBER(10)       NOT NULL,
  ANNO                         NUMBER(4)        NOT NULL,
  DENSITA_SUP_CENS             NUMBER(10,4),
  DENSITA_CAPI_SUS             NUMBER(10,4),
  DENSITA_OBIETTIVO            NUMBER(10,4),
  CONSISTENZA_POTENZ           NUMBER(10,4),
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PARTICELLA_GIS
(
  ID_PARTICELLA_GIS         NUMBER(10)          NOT NULL,
  ID_PARTICELLA_UTILIZZO    NUMBER(10)          NOT NULL,
  ID_LIVELLO                NUMBER(4)           NOT NULL,
  SUPE_AMMI                 NUMBER(10,4)        NOT NULL,
  SUPE_AMMI_CONDOTTA        NUMBER(10,4)        NOT NULL,
  DATA_FOTOINTERPRETAZIONE  DATE,
  NOTE                      VARCHAR2(4000 BYTE),
  SUPE_AMMI_ISTRUTTORIA     NUMBER(10,4)
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_PIANO_DISTRETTO_OGUR
(
  ID_PIANO_DISTRETTO_OGUR      NUMBER(10)       NOT NULL,
  ID_PIANO_OGUR                NUMBER(4)        NOT NULL,
  ID_DISTRETTO                 NUMBER(10),
  ID_OGUR_DA_REGIONE           NUMBER(4),
  TOTALE_CENSITO               NUMBER(10),
  INDETERMINATI_CENSITO        NUMBER(10),
  TOTALE_PRELIEVO              NUMBER(10),
  INDETERMINATI_PRELIEVO       NUMBER(10),
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  MAX_CAPI_PRELIEVO            NUMBER(10),
  ESITO_TOTALE_PRELIEVO        VARCHAR2(1 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_PIANO_DISTRETTO_OGUR IS 'distretti legati al piano di selezione OGUR';

COMMENT ON COLUMN IUF_T_PIANO_DISTRETTO_OGUR.ID_DISTRETTO IS 'presente in alternativa a ID_OGUR_DA_REGIONE';

COMMENT ON COLUMN IUF_T_PIANO_DISTRETTO_OGUR.ID_OGUR_DA_REGIONE IS 'presente in alternativa a ID_DISTRETTO';



CREATE TABLE IUF_T_SELEZIONE_INFO
(
  ID_SELEZIONE_INFO        NUMBER(10)           NOT NULL,
  ID_PROCEDIMENTO_OGGETTO  NUMBER(10)           NOT NULL,
  ID_DETTAGLIO_INFO        NUMBER(10)           NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_VALORI_INSERITI
(
  ID_VALORI_INSERITI  NUMBER(10)                NOT NULL,
  ID_SELEZIONE_INFO   NUMBER(10),
  VALORE              VARCHAR2(4000 BYTE)       NOT NULL,
  POSIZIONE           NUMBER(4)                 NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE UNIQUE INDEX AK1_IUF_R_LISTA_LIQUIDAZ_IMP ON IUF_R_LISTA_LIQUIDAZ_IMP_LIQ
(ID_LISTA_LIQUIDAZIONE, ID_IMPORTI_LIQUIDATI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX AK1_IUF_T_SELEZIONE_INFO ON IUF_T_SELEZIONE_INFO
(ID_PROCEDIMENTO_OGGETTO, ID_DETTAGLIO_INFO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_R_LISTA_LIQUIDAZ_IMP ON IUF_R_LISTA_LIQUIDAZ_IMP_LIQ
(ID_IMPORTI_LIQUIDATI)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_R_PROCEDIMENTO_DANNO ON IUF_R_PROCEDIMENTO_DANNO
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_R_PROC_PRESTITI_AGRA ON IUF_R_PROC_PRESTITI_AGRARI
(ID_PROCEDIMENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_DETTAGLIO_INTERVEN ON IUF_T_DETTAGLIO_INTERVENTO
(ID_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE1_IUF_T_LOCALIZZAZIONE_INT ON IUF_T_LOCALIZZAZIONE_INTERV
(ID_DETTAGLIO_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE INDEX IE2_IUF_T_DETTAGLIO_INTERVEN ON IUF_T_DETTAGLIO_INTERVENTO
(ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_D_DETTAGLIO_INFO ON IUF_D_DETTAGLIO_INFO
(ID_DETTAGLIO_INFO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_ANNI_EXPOST ON IUF_R_ANNI_EXPOST
(ID_INFO_EXPOST, ID_ANNO_EXPOST)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_ANTICIPO_LIVELLO ON IUF_R_ANTICIPO_LIVELLO
(ID_ANTICIPO, ID_LIVELLO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_ANTICIPO_PROC_OGG ON IUF_R_ANTICIPO_PROC_OGG
(ID_ANTICIPO, ID_PROCEDIMENTO_OGGETTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_DANNO_ATM_INTERVENT ON IUF_R_DANNO_ATM_INTERVENTO
(ID_INTERVENTO, ID_PROCEDIMENTO_OGGETTO, PROGRESSIVO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_DETT_INT_PROC_OGG_M ON IUF_R_DETT_INTE_PROC_OGG_MIS
(ID_DETT_INTERV_PROC_OGG, ID_MISURAZIONE_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_DOC_SPESA_INT_RICEV ON IUF_R_DOC_SPESA_INT_RICEV_PA
(ID_INTERVENTO, ID_RICEVUTA_PAGAMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_DOC_SPESA_PROC_OGG ON IUF_R_DOC_SPESA_PROC_OGG
(ID_DOC_SPESA_PROC_OGG)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_DOCUMENTO_SPESA_INT ON IUF_R_DOCUMENTO_SPESA_INTERV
(ID_DOCUMENTO_SPESA_INTERVEN)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LISTA_LIQUIDAZ_IMP_ ON IUF_R_LISTA_LIQUIDAZ_IMP_LIQ
(ID_LISTA_LIQUIDAZ_IMP_LIQ)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_LIV_FOCUS_AREA_LEAD ON IUF_R_LIV_FOCUS_AREA_LEADER
(ID_LIV_FOCUS_AREA_LEADER)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_PARTICELLA_DANNEGGI ON IUF_R_PARTICELLA_DANNEGGIATA
(ID_DANNO_ATM, EXT_ID_UTILIZZO_DICHIARATO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_PROC_ASSICURAZ_COLT ON IUF_R_PROC_ASSICURAZ_COLTURE
(ID_PROCEDIMENTO_ASSICURAZ_COLT)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_PROCEDIMEN_DANNO_FA ON IUF_R_PROCEDIMEN_DANNO_FAUNA
(ID_PROCEDIMEN_DANNO_FAUNA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_PROCEDIMENTO_DANNO ON IUF_R_PROCEDIMENTO_DANNO
(ID_PROCEDIMENTO_DANNO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_PROC_PRESTITI_AGRAR ON IUF_R_PROC_PRESTITI_AGRARI
(ID_PROC_PRESTITI_AGRARI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_RI_LIV_BAND_IMP_LIQ ON IUF_R_RISOR_LIV_BAND_IMP_LIQ
(ID_RISORSE_LIVELLO_BANDO, ID_IMPORTI_LIQUIDATI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_TIPO_DOCUMENTI_RICH ON IUF_R_TIPO_DOCUMENTI_RICHIES
(ID_DOCUMENTI_RICHIESTI, ID_TIPO_DOC_RICHIESTI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ACCERTAMENTO_SPESE ON IUF_T_ACCERTAMENTO_SPESE
(ID_ACCERTAMENTO_SPESE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ALLEVAMENTO ON IUF_T_ALLEVAMENTO
(ID_ALLEVAMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ATTIVITA ON IUF_T_ATTIVITA
(ID_ATTIVITA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_AZIENDA_BIO ON IUF_T_AZIENDA_BIO
(ID_AZIENDA_BIO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_CONTATTI ON IUF_T_CONTATTI
(ID_CONTATTI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DATE_CENS_CINGHIALI ON IUF_T_DATE_CENS_CINGHIALI
(ID_DATE_CENS_CINGHIALI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DETTAGLIO_INTERVENT ON IUF_T_DETTAGLIO_INTERVENTO
(ID_DETTAGLIO_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DETT_DOCUMENTO_SPES ON IUF_T_DETT_DOCUMENTO_SPESA
(ID_DETT_DOCUMENTO_SPESA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DETT_RICEVUTA_PAGAM ON IUF_T_DETT_RICEVUTA_PAGAMENT
(ID_DETT_RICEVUTA_PAGAMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_ITER_PIANO_FINANZ_L ON IUF_T_ITER_PIANO_FINANZ_LEAD
(ID_ITER_PIANO_FINANZ_LEADER)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_LOCALIZZAZIONE_INTE ON IUF_T_LOCALIZZAZIONE_INTERV
(ID_LOCALIZZAZIONE_INTERV)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_OGUR_ANNI_CENSITI ON IUF_T_OGUR_ANNI_CENSITI
(ID_ANNI_CENSITI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_OGUR_CENSIMENTO ON IUF_T_OGUR_CENSIMENTO
(ID_CENSIMENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PARTICELLA_GIS ON IUF_T_PARTICELLA_GIS
(ID_PARTICELLA_GIS)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_PIANO_DISTRETT_OGUR ON IUF_T_PIANO_DISTRETTO_OGUR
(ID_PIANO_DISTRETTO_OGUR)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_SELEZIONE_INFO ON IUF_T_SELEZIONE_INFO
(ID_SELEZIONE_INFO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_VALORI_INSERITI ON IUF_T_VALORI_INSERITI
(ID_VALORI_INSERITI)
TABLESPACE IUFFI_IDX;


CREATE TABLE IUF_R_ATTIVITA_PARTECIPANTE
(
  ID_ATTIVITA_PARTECIPANTE  VARCHAR2(20 BYTE)   NOT NULL,
  ID_ATTIVITA               NUMBER(10)          NOT NULL,
  ID_PARTECIPANTE           NUMBER(10)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_ATTIV_PARTECIP_INTERV
(
  ID_ATTIVITA_PARTECIPANTE  VARCHAR2(20 BYTE)   NOT NULL,
  ID_INTERVENTO             NUMBER(10)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_AZIENDA_BIO_ATTIVITA
(
  ID_AZIENDA_BIO             NUMBER(10)         NOT NULL,
  EXT_ID_CATEGORIA_ATTIVITA  NUMBER(4)          NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_AZIENDA_BIO_FILIERA_PR
(
  ID_AZIENDA_BIO         NUMBER(10)             NOT NULL,
  ID_FILIERA_PRODUTTIVA  NUMBER(4)              NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_AZIENDA_BIO_METODO_COL
(
  ID_AZIENDA_BIO          NUMBER(10)            NOT NULL,
  ID_METODO_COLTIVAZIONE  NUMBER(4)             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_AZIENDA_BIO_MULTIFUNZ
(
  ID_AZIENDA_BIO        NUMBER(10)              NOT NULL,
  ID_MULTIFUNZIONALITA  NUMBER(4)               NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_CONTATTI_CANALE_VENDIT
(
  ID_CONTATTI        NUMBER(10)                 NOT NULL,
  ID_CANALE_VENDITA  NUMBER(4)                  NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_DETT_INTERV_MISURAZION
(
  ID_DETTAGLIO_INTERVENTO    NUMBER(10)         NOT NULL,
  ID_MISURAZIONE_INTERVENTO  NUMBER(10)         NOT NULL,
  QUANTITA                   NUMBER             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_DOC_SPESA_INT_ACC_SPES
(
  ID_DOC_SPESA_INT_ACC_SPESE   NUMBER(10)       NOT NULL,
  ID_DOCUMENTO_SPESA_INTERVEN  NUMBER(10)       NOT NULL,
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  IMPORTO_ACCERTATO            NUMBER(12,2)     NOT NULL,
  IMPORTO_NON_RICONOSCIUTO     NUMBER(12,2)     NOT NULL,
  IMPORTO_DISPONIBILE          NUMBER(12,2)     NOT NULL,
  IMPORTO_CALCOLO_CONTRIBUTO   NUMBER(12,2)     NOT NULL,
  NOTE                         VARCHAR2(4000 BYTE),
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_DOC_SPESA_INT_PROC_OGG
(
  ID_PROCEDIMENTO_OGGETTO      NUMBER(10)       NOT NULL,
  IMPORTO_RENDICONTATO         NUMBER(12,2)     NOT NULL,
  ID_DOCUMENTO_SPESA_INTERVEN  NUMBER(10)       NOT NULL,
  ID_DOC_SPESA_INT_PROC_OGG    NUMBER(10)       NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL,
  DATA_ULTIMO_AGGIORNAMENTO    DATE             NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_FILE_ALLEGATI_DETT_INT
(
  ID_DETTAGLIO_INTERVENTO      NUMBER(10)       NOT NULL,
  ID_FILE_ALLEGATI_INTERVENTO  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_R_IMPORTI_RIPARTITI
(
  ID_IMPORTI_RIPARTITI       NUMBER(10)         NOT NULL,
  ID_VOCE_RIPARTIZIONE       NUMBER(4)          NOT NULL,
  PERCENTUALE_RIPARTIZIONE   NUMBER(7,4)        NOT NULL,
  IMPORTO_RIPARTITO          NUMBER(12,2)       NOT NULL,
  ID_LISTA_LIQUIDAZ_IMP_LIQ  NUMBER(10)         NOT NULL
)
TABLESPACE IUFFI_TBL
;


CREATE TABLE IUF_T_CENSITO_PRELIEVO_OGUR
(
  ID_CENSITO_PRELIEVO_OGUR  NUMBER(10)          NOT NULL,
  ID_PIANO_DISTRETTO_OGUR   NUMBER(10)          NOT NULL,
  ID_SPECIE_OGUR            NUMBER(4)           NOT NULL,
  PROGRESSIVO               NUMBER(4)           NOT NULL,
  CENSITO                   NUMBER(10),
  PRELEVATO                 NUMBER(10),
  PERCENTUALE               NUMBER(5,2),
  ESITO_CONTROLLO           VARCHAR2(1 BYTE)
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_CENSITO_PRELIEVO_OGUR IS 'Tabella con i dati di censimento e prelievo della specie OGUR per tipologia "Maschi/Femmine e classe", l''etichetta che definisce la tipologia del censito e prelevato si trova nella tabella IUF_R_CONTROLLI_PIANO_OGUR accedendo per ID_SPECIE_OGUR/PROGRESSIVO';



CREATE TABLE IUF_T_DATE_CENS_OGUR
(
  ID_DATE_CENS_OGUR            NUMBER(10)       NOT NULL,
  ID_PIANO_DISTRETTO_OGUR      NUMBER(10)       NOT NULL,
  DATA_CENSIMENTO              DATE             NOT NULL,
  ID_METODO_SPECIE             NUMBER(4),
  VALORE_METODO_CENSIMENTO     NUMBER(10,4),
  DATA_AGGIORNAMENTO           DATE             NOT NULL,
  EXT_ID_UTENTE_AGGIORNAMENTO  NUMBER(10)       NOT NULL
)
TABLESPACE IUFFI_TBL
;

COMMENT ON TABLE IUF_T_DATE_CENS_OGUR IS 'date di censimento legate al piano del distretto OGUR';



CREATE TABLE IUF_T_FILE_ALLEGATI
(
  ID_FILE_ALLEGATI        NUMBER(10)            NOT NULL,
  ID_SELEZIONE_INFO       NUMBER(10)            NOT NULL,
  EXT_ID_DOCUMENTO_INDEX  NUMBER(10),
  NOME_LOGICO             VARCHAR2(255 BYTE)    NOT NULL,
  NOME_FISICO             VARCHAR2(255 BYTE)    NOT NULL,
  FILE_ALLEGATO           BLOB
)
LOB (FILE_ALLEGATO) STORE AS (
  TABLESPACE  IUFFI_LOB)
TABLESPACE IUFFI_TBL
;

COMMENT ON COLUMN IUF_T_FILE_ALLEGATI.EXT_ID_DOCUMENTO_INDEX IS 'chiave esterna della tabella DOQUIAGRI_T_DOCUMENTO_INDEX';

COMMENT ON COLUMN IUF_T_FILE_ALLEGATI.FILE_ALLEGATO IS 'Alla trasmissione della domanda il file fisico verra'' spostato su DOQUIAGRI';



CREATE INDEX IE1_IUF_R_IMPORTI_RIPARTITI ON IUF_R_IMPORTI_RIPARTITI
(ID_LISTA_LIQUIDAZ_IMP_LIQ)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_ATTIVITA_PARTECIPAN ON IUF_R_ATTIVITA_PARTECIPANTE
(ID_ATTIVITA_PARTECIPANTE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_ATTIV_PARTECIP_INTE ON IUF_R_ATTIV_PARTECIP_INTERV
(ID_ATTIVITA_PARTECIPANTE, ID_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_AZIENDA_BIO_ATTIVIT ON IUF_R_AZIENDA_BIO_ATTIVITA
(ID_AZIENDA_BIO, EXT_ID_CATEGORIA_ATTIVITA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_AZIENDA_BIO_FILIERA ON IUF_R_AZIENDA_BIO_FILIERA_PR
(ID_AZIENDA_BIO, ID_FILIERA_PRODUTTIVA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_AZIENDA_BIO_METODO ON IUF_R_AZIENDA_BIO_METODO_COL
(ID_AZIENDA_BIO, ID_METODO_COLTIVAZIONE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_AZIENDA_BIO_MULTIFU ON IUF_R_AZIENDA_BIO_MULTIFUNZ
(ID_AZIENDA_BIO, ID_MULTIFUNZIONALITA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_CONTATTI_CANALE_VEN ON IUF_R_CONTATTI_CANALE_VENDIT
(ID_CONTATTI, ID_CANALE_VENDITA)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_DETT_INTERV_MISURAZ ON IUF_R_DETT_INTERV_MISURAZION
(ID_DETTAGLIO_INTERVENTO, ID_MISURAZIONE_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_DOC_SPESA_INT_ACC_S ON IUF_R_DOC_SPESA_INT_ACC_SPES
(ID_DOC_SPESA_INT_ACC_SPESE)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_DOC_SPESA_INT_PROC_ ON IUF_R_DOC_SPESA_INT_PROC_OGG
(ID_DOC_SPESA_INT_PROC_OGG)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_FILE_ALLEGATI_DETT_ ON IUF_R_FILE_ALLEGATI_DETT_INT
(ID_DETTAGLIO_INTERVENTO, ID_FILE_ALLEGATI_INTERVENTO)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_R_IMPORTI_RIPARTITI ON IUF_R_IMPORTI_RIPARTITI
(ID_IMPORTI_RIPARTITI)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_CENSITO_PRELIE_OGUR ON IUF_T_CENSITO_PRELIEVO_OGUR
(ID_CENSITO_PRELIEVO_OGUR)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_DATE_CENS_OGUR ON IUF_T_DATE_CENS_OGUR
(ID_DATE_CENS_OGUR)
TABLESPACE IUFFI_IDX;


CREATE UNIQUE INDEX PK_IUF_T_FILE_ALLEGATI ON IUF_T_FILE_ALLEGATI
(ID_FILE_ALLEGATI)
TABLESPACE IUFFI_IDX;


ALTER TABLE IUF_D_ANNO_EXPOST ADD (
  CONSTRAINT PK_IUF_D_ANNO_EXPOST
  PRIMARY KEY
  (ID_ANNO_EXPOST)
  USING INDEX PK_IUF_D_ANNO_EXPOST
  ENABLE VALIDATE);

ALTER TABLE IUF_D_AZIONE ADD (
  CONSTRAINT PK_IUF_D_AZIONE
  PRIMARY KEY
  (ID_AZIONE)
  USING INDEX PK_IUF_D_AZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_CANALE_VENDITA ADD (
  CONSTRAINT PK_IUF_D_CANALE_VENDITA
  PRIMARY KEY
  (ID_CANALE_VENDITA)
  USING INDEX PK_IUF_D_CANALE_VENDITA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_CATEGORIA_ANIMALE ADD (
  CONSTRAINT PK_IUF_D_CATEGORIA_ANIMALE
  PRIMARY KEY
  (EXT_ID_CATEGORIA_ANIMALE)
  USING INDEX PK_IUF_D_CATEGORIA_ANIMALE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_CATEGORIA_EVENTO ADD (
  CONSTRAINT PK_IUF_D_CATEGORIA_EVENTO
  PRIMARY KEY
  (ID_CATEGORIA_EVENTO)
  USING INDEX PK_IUF_D_CATEGORIA_EVENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_CATEGORIA_INTERVENTO ADD (
  CONSTRAINT CK_FLAG_37
  CHECK (FLAG_ESCLUDI_CATALOGO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_CATEGORIA_INTERVENT
  PRIMARY KEY
  (ID_CATEGORIA_INTERVENTO)
  USING INDEX PK_IUF_D_CATEGORIA_INTERVENT
  ENABLE VALIDATE);

ALTER TABLE IUF_D_CONSORZIO_DIFESA ADD (
  CONSTRAINT PK_IUF_D_CONSORZIO_DIFESA
  PRIMARY KEY
  (ID_CONSORZIO_DIFESA)
  USING INDEX PK_IUF_D_CONSORZIO_DIFESA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_CONTROLLO_AMMINISTRATI ADD (
  CONSTRAINT PK_IUF_D_CONTROLLO_AMMINISTR
  PRIMARY KEY
  (ID_CONTROLLO_AMMINISTRATIVO)
  USING INDEX PK_IUF_D_CONTROLLO_AMMINISTR
  ENABLE VALIDATE);

ALTER TABLE IUF_D_EDIZIONE_TRFCONF ADD (
  CONSTRAINT PK_IUF_D_EDIZIONE_TRFCONF
  PRIMARY KEY
  (ID_EDIZIONE_PSR)
  USING INDEX PK_IUF_D_EDIZIONE_TRFCONF
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ELENCO_CDU ADD (
  CONSTRAINT CK_TIPO_AZIONE_01
  CHECK (TIPO_AZIONE IN ('R','W'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_ELENCO_CDU
  PRIMARY KEY
  (ID_ELENCO_CDU)
  USING INDEX PK_IUF_D_ELENCO_CDU
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_D_ELENCO_CDU
  UNIQUE (CODICE_CDU)
  USING INDEX AK1_IUF_D_ELENCO_CDU
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ERRORE_BATCH ADD (
  CONSTRAINT PK_IUF_D_ERRORE_BATCH
  PRIMARY KEY
  (CODICE_ERRORE)
  USING INDEX PK_IUF_D_ERRORE_BATCH
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ESITO ADD (
  CONSTRAINT PK_IUF_D_ESITO
  PRIMARY KEY
  (ID_ESITO)
  USING INDEX PK_IUF_D_ESITO
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_D_ESITO
  UNIQUE (CODICE, TIPO_ESITO)
  USING INDEX AK1_IUF_D_ESITO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_EVENTO_CALAMITOSO ADD (
  CONSTRAINT PK_IUF_D_EVENTO_CALAMITOSO
  PRIMARY KEY
  (ID_EVENTO_CALAMITOSO)
  USING INDEX PK_IUF_D_EVENTO_CALAMITOSO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_FABBISOGNO ADD (
  CONSTRAINT PK_IUF_D_FABBISOGNO
  PRIMARY KEY
  (ID_FABBISOGNO)
  USING INDEX PK_IUF_D_FABBISOGNO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_FILIERA_PRODUTTIVA ADD (
  CONSTRAINT PK_IUF_D_FILIERA_PRODUTTIVA
  PRIMARY KEY
  (ID_FILIERA_PRODUTTIVA)
  USING INDEX PK_IUF_D_FILIERA_PRODUTTIVA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_FINALITA_AMBIENTALE ADD (
  CONSTRAINT PK_IUF_D_FINALITA_AMBIENTALE
  PRIMARY KEY
  (ID_FINALITA_AMBIENTALE)
  USING INDEX PK_IUF_D_FINALITA_AMBIENTALE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_FLAG_ESTRATTA ADD (
  CONSTRAINT CK_FLAG_85
  CHECK (FLAG_CONTROLLO_IN_LOCO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_FLAG_ESTRATTA
  PRIMARY KEY
  (FLAG_ESTRATTA)
  USING INDEX PK_IUF_D_FLAG_ESTRATTA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_FONTE_CONTROLLO ADD (
  CONSTRAINT PK_IUF_D_FONTE_CONTROLLO
  PRIMARY KEY
  (ID_FONTE_CONTROLLO)
  USING INDEX PK_IUF_D_FONTE_CONTROLLO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_GRAVITA_NOTIFICA ADD (
  CONSTRAINT PK_IUF_D_GRAVITA_NOTIFICA
  PRIMARY KEY
  (ID_GRAVITA_NOTIFICA)
  USING INDEX PK_IUF_D_GRAVITA_NOTIFICA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_GRUPPO_INFO_CATALOGO ADD (
  CONSTRAINT CK_FLAG_27
  CHECK (FLAG_INFO_OBBLIGATORIA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_GRUPPO_INFO_CATALOG
  PRIMARY KEY
  (ID_GRUPPO_INFO_CATALOGO)
  USING INDEX PK_IUF_D_GRUPPO_INFO_CATALOG
  ENABLE VALIDATE);

ALTER TABLE IUF_D_GRUPPO_OGGETTO ADD (
  CONSTRAINT PK_IUF_D_GRUPPO_OGGETTO
  PRIMARY KEY
  (ID_GRUPPO_OGGETTO)
  USING INDEX PK_IUF_D_GRUPPO_OGGETTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ICONA ADD (
  CONSTRAINT PK_IUF_D_ICONA
  PRIMARY KEY
  (ID_ICONA)
  USING INDEX PK_IUF_D_ICONA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_IMG_AGRIQ ADD (
  CONSTRAINT CK_FLAG_110
  CHECK (FLAG_IMMAGINE_DEFAULT IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_IMG_AGRIQ
  PRIMARY KEY
  (ID_IMG_AGRIQ)
  USING INDEX PK_IUF_D_IMG_AGRIQ
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ISTITUTO_DANNI_FAUNA ADD (
  CONSTRAINT PK_IUF_D_ISTITUTO_DANNI_FAUN
  PRIMARY KEY
  (ID_ISTITUTO_DANNI_FAUNA)
  USING INDEX PK_IUF_D_ISTITUTO_DANNI_FAUN
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ISTITUTO_NOMINATIVO ADD (
  CONSTRAINT PK_IUF_D_ISTITUTO_NOMINATIVO
  PRIMARY KEY
  (ID_ISTITUTO_NOMINATIVO)
  USING INDEX PK_IUF_D_ISTITUTO_NOMINATIVO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_MESSAGGIO_ERRORE ADD (
  CONSTRAINT PK_IUF_D_MESSAGGIO_ERRORE
  PRIMARY KEY
  (ID_MESSAGGIO_ERRORE)
  USING INDEX PK_IUF_D_MESSAGGIO_ERRORE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_METODO_CENSIMENTO ADD (
  CONSTRAINT PK_IUF_D_METODO_CENSIMENTO
  PRIMARY KEY
  (ID_METODO_CENSIMENTO)
  USING INDEX PK_IUF_D_METODO_CENSIMENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_METODO_COLTIVAZIONE ADD (
  CONSTRAINT PK_IUF_D_METODO_COLTIVAZIONE
  PRIMARY KEY
  (ID_METODO_COLTIVAZIONE)
  USING INDEX PK_IUF_D_METODO_COLTIVAZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_MODALITA_PAGAMENTO ADD (
  CONSTRAINT PK_IUF_D_MODALITA_PAGAMENTO
  PRIMARY KEY
  (ID_MODALITA_PAGAMENTO)
  USING INDEX PK_IUF_D_MODALITA_PAGAMENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_MOTIVO_URGENZA ADD (
  CONSTRAINT PK_IUF_D_MOTIVO_URGENZA
  PRIMARY KEY
  (ID_MOTIVO_URGENZA)
  USING INDEX PK_IUF_D_MOTIVO_URGENZA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_MULTIFUNZIONALITA ADD (
  CONSTRAINT PK_IUF_D_MULTIFUNZIONALITA
  PRIMARY KEY
  (ID_MULTIFUNZIONALITA)
  USING INDEX PK_IUF_D_MULTIFUNZIONALITA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_NOME_BATCH ADD (
  CONSTRAINT PK_IUF_D_NOME_BATCH
  PRIMARY KEY
  (ID_NOME_BATCH)
  USING INDEX PK_IUF_D_NOME_BATCH
  ENABLE VALIDATE);

ALTER TABLE IUF_D_OGGETTO ADD (
  CONSTRAINT CK_ESTRAZIONE_CAMPIONE_01
  CHECK (FLAG_ESTRAZIONE_CAMPIONE IN ('S','A','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_03
  CHECK (FLAG_ISTANZA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_108
  CHECK (FLAG_ESCLUDI_SEPARAZIONE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_87
  CHECK (FLAG_AMMISSIONE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_94
  CHECK (FLAG_SCARICO_CAA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_MULTIPLO_01
  CHECK (FLAG_OGGETTO_MULTIPLO IN ('G','N','S'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_OGGETTO
  PRIMARY KEY
  (ID_OGGETTO)
  USING INDEX PK_IUF_D_OGGETTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_OTE_SOTTOSETTORI ADD (
  CONSTRAINT PK_IUF_D_OTE_SOTTOSETTORI
  PRIMARY KEY
  (CODICE_OTE)
  USING INDEX PK_IUF_D_OTE_SOTTOSETTORI
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PARAMETRO ADD (
  CONSTRAINT PK_IUF_D_PARAMETRO
  PRIMARY KEY
  (CODICE)
  USING INDEX PK_IUF_D_PARAMETRO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PRINCIPIO_SELEZIONE ADD (
  CONSTRAINT PK_IUF_D_PRINCIPIO_SELEZIONE
  PRIMARY KEY
  (ID_PRINCIPIO_SELEZIONE)
  USING INDEX PK_IUF_D_PRINCIPIO_SELEZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PRIORITA ADD (
  CONSTRAINT PK_IUF_D_PRIORITA
  PRIMARY KEY
  (ID_PRIORITA)
  USING INDEX PK_IUF_D_PRIORITA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PROCEDIMENTO_AGRICOLO ADD (
  CONSTRAINT PK_IUF_D_PROCEDIMENTO_AGRICO
  PRIMARY KEY
  (ID_PROCEDIMENTO_AGRICOLO)
  USING INDEX PK_IUF_D_PROCEDIMENTO_AGRICO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PRODOTTO ADD (
  CONSTRAINT PK_IUF_D_PRODOTTO
  PRIMARY KEY
  (ID_PRODOTTO)
  USING INDEX PK_IUF_D_PRODOTTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_QUADRO ADD (
  CONSTRAINT PK_IUF_D_QUADRO
  PRIMARY KEY
  (ID_QUADRO)
  USING INDEX PK_IUF_D_QUADRO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_QUADRO_DINAMICO ADD (
  CONSTRAINT CK_FLAG_15
  CHECK (flag_visualizzazione_elenco IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_QUADRO_DINAMICO
  PRIMARY KEY
  (ID_QUADRO)
  USING INDEX PK_IUF_D_QUADRO_DINAMICO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_RANGE_IDENTIFICATIVO ADD (
  CONSTRAINT PK_IUF_D_RANGE_IDENTIFICATIV
  PRIMARY KEY
  (ID_RANGE_IDENTIFICATIVO)
  USING INDEX PK_IUF_D_RANGE_IDENTIFICATIV
  ENABLE VALIDATE);

ALTER TABLE IUF_D_REGIME_AIUTO ADD (
  CONSTRAINT PK_IUF_D_REGIME_AIUTO
  PRIMARY KEY
  (ID_REGIME_AIUTO)
  USING INDEX PK_IUF_D_REGIME_AIUTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_REGIME_QUALITA ADD (
  CONSTRAINT PK_IUF_D_REGIME_QUALITA
  PRIMARY KEY
  (ID_REGIME_QUALITA)
  USING INDEX PK_IUF_D_REGIME_QUALITA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_RISCHIO_ELEVATO ADD (
  CONSTRAINT PK_IUF_D_RISCHIO_ELEVATO
  PRIMARY KEY
  (ID_RISCHIO_ELEVATO)
  USING INDEX PK_IUF_D_RISCHIO_ELEVATO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_SEGNAPOSTO ADD (
  CONSTRAINT PK_IUF_D_SEGNAPOSTO
  PRIMARY KEY
  (ID_SEGNAPOSTO)
  USING INDEX PK_IUF_D_SEGNAPOSTO
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_D_SEGNAPOSTO
  UNIQUE (NOME)
  USING INDEX AK1_IUF_D_SEGNAPOSTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_SETTORE ADD (
  CONSTRAINT PK_IUF_D_SETTORE
  PRIMARY KEY
  (ID_SETTORE)
  USING INDEX PK_IUF_D_SETTORE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_SETTORE_PRODUZIONE ADD (
  CONSTRAINT PK_IUF_D_SETTORE_PRODUZIONE
  PRIMARY KEY
  (ID_SETTORE_PRODUZIONE)
  USING INDEX PK_IUF_D_SETTORE_PRODUZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_SEZIONE_DOC_RICHIESTI ADD (
  CONSTRAINT PK_IUF_D_SEZIONE_DOC_RICHIES
  PRIMARY KEY
  (ID_SEZIONE_DOC_RICHIESTI)
  USING INDEX PK_IUF_D_SEZIONE_DOC_RICHIES
  ENABLE VALIDATE);

ALTER TABLE IUF_D_SPECIE_FAUNA ADD (
  CONSTRAINT PK_IUF_D_SPECIE_FAUNA
  PRIMARY KEY
  (ID_SPECIE_FAUNA)
  USING INDEX PK_IUF_D_SPECIE_FAUNA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_SPECIE_OGUR ADD (
  CONSTRAINT CK_FLAG_113
  CHECK (FLAG_OGUR IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_SPECIE_OGUR
  PRIMARY KEY
  (ID_SPECIE_OGUR)
  USING INDEX PK_IUF_D_SPECIE_OGUR
  ENABLE VALIDATE);

ALTER TABLE IUF_D_STATO_CONCESSIONE ADD (
  CONSTRAINT PK_IUF_D_STATO_CONCESSIONE
  PRIMARY KEY
  (ID_STATO_CONCESSIONE)
  USING INDEX PK_IUF_D_STATO_CONCESSIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_STATO_ESTRAZIONE ADD (
  CONSTRAINT PK_IUF_D_STATO_ESTRAZIONE
  PRIMARY KEY
  (ID_STATO_ESTRAZIONE)
  USING INDEX PK_IUF_D_STATO_ESTRAZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_STATO_OGGETTO ADD (
  CONSTRAINT CK_CODICE_STATO_ANAGRA_01
  CHECK (CODICE_STATO_ANAGRAFE IN ('B','I','C','A'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_95
  CHECK (FLAG_SCARICO_CAA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_STATO_OGGETTO
  PRIMARY KEY
  (ID_STATO_OGGETTO)
  USING INDEX PK_IUF_D_STATO_OGGETTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_STATO_PIANO_FINANZIARI ADD (
  CONSTRAINT PK_IUF_D_STATO_PIANO_FINANZI
  PRIMARY KEY
  (ID_STATO_PIANO_FINANZIARIO)
  USING INDEX PK_IUF_D_STATO_PIANO_FINANZI
  ENABLE VALIDATE);

ALTER TABLE IUF_D_STATO_STAMPA ADD (
  CONSTRAINT PK_IUF_D_STATO_STAMPA
  PRIMARY KEY
  (ID_STATO_STAMPA)
  USING INDEX PK_IUF_D_STATO_STAMPA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_STRUTT_TESTO_VERBALE ADD (
  CONSTRAINT CK_FLAG_72
  CHECK (FLAG_VISIBILE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_STRUTT_TESTO_VERBAL
  PRIMARY KEY
  (ID_ELENCO_CDU, TIPO_COLLOCAZIONE_TESTO)
  USING INDEX PK_IUF_D_STRUTT_TESTO_VERBAL
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_AGGREGAZIONE ADD (
  CONSTRAINT PK_IUF_D_TIPO_AGGREGAZIONE
  PRIMARY KEY
  (ID_TIPO_AGGREGAZIONE)
  USING INDEX PK_IUF_D_TIPO_AGGREGAZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_ATTO ADD (
  CONSTRAINT CK_FLAG_86
  CHECK (FLAG_ALTRE_INFO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_TIPO_ATTO
  PRIMARY KEY
  (ID_TIPO_ATTO)
  USING INDEX PK_IUF_D_TIPO_ATTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_ATTO_CONCESSIONE ADD (
  CONSTRAINT PK_IUF_D_TIPO_ATTO_CONCESSIO
  PRIMARY KEY
  (ID_TIPO_CONCESSIONE)
  USING INDEX PK_IUF_D_TIPO_ATTO_CONCESSIO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_CLASSIFICAZIONE ADD (
  CONSTRAINT PK_IUF_D_TIPO_CLASSIFICAZION
  PRIMARY KEY
  (ID_TIPO_CLASSIFICAZIONE)
  USING INDEX PK_IUF_D_TIPO_CLASSIFICAZION
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_DATO ADD (
  CONSTRAINT PK_IUF_D_TIPO_DATO
  PRIMARY KEY
  (ID_TIPO_DATO)
  USING INDEX PK_IUF_D_TIPO_DATO
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_D_TIPO_DATO
  UNIQUE (CODICE)
  USING INDEX AK1_IUF_D_TIPO_DATO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_DOC_RICHIESTI ADD (
  CONSTRAINT PK_IUF_D_TIPO_DOC_RICHIESTI
  PRIMARY KEY
  (ID_TIPO_DOC_RICHIESTI)
  USING INDEX PK_IUF_D_TIPO_DOC_RICHIESTI
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_DOCUMENTO_SPESA ADD (
  CONSTRAINT CK_FLAG_K_01
  CHECK (FLAG_ID_FORNITORE IN ('S','N','K','F'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_K_02
  CHECK (FLAG_DATA_DOCUMENTO_SPESA IN ('S','N','K','F'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_K_03
  CHECK (FLAG_NUMERO_DOCUMENTO_SPESA IN ('S','N','K','F'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_K_04
  CHECK (FLAG_DATA_PAGAMENTO IN ('S','N','K','F'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_K_05
  CHECK (FLAG_ID_MODALITA_PAGAMENTO IN ('S','N','K','F'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_K_07
  CHECK (FLAG_NOTE IN ('S','N','K','F'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_K_08
  CHECK (FLAG_FILE_DOCUMENTO_SPESA IN ('S','N','K','F'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_TIPO_DOCUMENTO_SPES
  PRIMARY KEY
  (ID_TIPO_DOCUMENTO_SPESA)
  USING INDEX PK_IUF_D_TIPO_DOCUMENTO_SPES
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_ELABORAZIONE ADD (
  CONSTRAINT PK_IUF_D_TIPO_ELABORAZIONE
  PRIMARY KEY
  (TIPO_ELABORAZIONE)
  USING INDEX PK_IUF_D_TIPO_ELABORAZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_ESTRAZIONE ADD (
  CONSTRAINT CK_FLAG_58
  CHECK (FLAG_ATTIVO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_65
  CHECK (FLAG_FIRST_EXTR IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_99
  CHECK (FLAG_MIX_MIS IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_TIPO_ESTRAZIONE
  PRIMARY KEY
  (ID_TIPO_ESTRAZIONE)
  USING INDEX PK_IUF_D_TIPO_ESTRAZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_IMPORTO ADD (
  CONSTRAINT PK_IUF_D_TIPO_IMPORTO
  PRIMARY KEY
  (ID_TIPO_IMPORTO)
  USING INDEX PK_IUF_D_TIPO_IMPORTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_LIVELLO ADD (
  CONSTRAINT PK_IUF_D_TIPO_LIVELLO
  PRIMARY KEY
  (ID_TIPO_LIVELLO)
  USING INDEX PK_IUF_D_TIPO_LIVELLO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_LOCALIZZAZIONE ADD (
  CONSTRAINT PK_IUF_D_TIPO_LOCALIZZAZIONE
  PRIMARY KEY
  (ID_TIPO_LOCALIZZAZIONE)
  USING INDEX PK_IUF_D_TIPO_LOCALIZZAZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPOLOGIA_LIVELLO ADD (
  CONSTRAINT PK_IUF_D_TIPOLOGIA_LIVELLO
  PRIMARY KEY
  (ID_TIPOLOGIA_LIVELLO)
  USING INDEX PK_IUF_D_TIPOLOGIA_LIVELLO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPOLOGIA_PREAVVISO ADD (
  CONSTRAINT PK_IUF_D_TIPOLOGIA_PREAVVISO
  PRIMARY KEY
  (ID_TIPOLOGIA_PREAVVISO)
  USING INDEX PK_IUF_D_TIPOLOGIA_PREAVVISO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPOLOGIA_SANZIONE ADD (
  CONSTRAINT PK_IUF_D_TIPOLOGIA_SANZIONE
  PRIMARY KEY
  (ID_TIPOLOGIA_SANZIONE)
  USING INDEX PK_IUF_D_TIPOLOGIA_SANZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_OPERAZIONE ADD (
  CONSTRAINT PK_IUF_D_TIPO_OPERAZIONE
  PRIMARY KEY
  (ID_TIPO_OPERAZIONE)
  USING INDEX PK_IUF_D_TIPO_OPERAZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_PIANO_FINANZIARIO ADD (
  CONSTRAINT PK_IUF_D_TIPO_PIANO_FINANZIA
  PRIMARY KEY
  (ID_TIPO_PIANO_FINANZIARIO)
  USING INDEX PK_IUF_D_TIPO_PIANO_FINANZIA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_PRODUZIONE ADD (
  CONSTRAINT PK_IUF_D_TIPO_PRODUZIONE
  PRIMARY KEY
  (ID_TIPO_PRODUZIONE)
  USING INDEX PK_IUF_D_TIPO_PRODUZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_SOLUZIONE ADD (
  CONSTRAINT CK_FLAG_74
  CHECK (FLAG_NOTE_OBBLIGATORIE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_75
  CHECK (FLAG_FILE_OBBLIGATORIO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_TIPO_SOLUZIONE
  PRIMARY KEY
  (ID_TIPO_SOLUZIONE)
  USING INDEX PK_IUF_D_TIPO_SOLUZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_VISUALIZZAZIONE ADD (
  CONSTRAINT CHK_FLAG_05
  CHECK (FLAG_ELENCO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_TIPO_VISUALIZZAZION
  PRIMARY KEY
  (ID_TIPO_VISUALIZZAZIONE)
  USING INDEX PK_IUF_D_TIPO_VISUALIZZAZION
  ENABLE VALIDATE);

ALTER TABLE IUF_D_UNITA_MISURA ADD (
  CONSTRAINT PK_IUF_D_UNITA_MISURA
  PRIMARY KEY
  (ID_UNITA_MISURA)
  USING INDEX PK_IUF_D_UNITA_MISURA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_UTILIZZO ADD (
  CONSTRAINT PK_IUF_D_UTILIZZO
  PRIMARY KEY
  (EXT_ID_UTILIZZO)
  USING INDEX PK_IUF_D_UTILIZZO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_UTILIZZO_RESE ADD (
  CONSTRAINT PK_IUF_D_UTILIZZO_RESE
  PRIMARY KEY
  (ID_UTILIZZO_RESE)
  USING INDEX PK_IUF_D_UTILIZZO_RESE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_VINCOLO_INFO ADD (
  CONSTRAINT PK_IUF_D_VINCOLO_INFO
  PRIMARY KEY
  (ID_VINCOLO_DICHIARAZIONE)
  USING INDEX PK_IUF_D_VINCOLO_INFO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_VISIBILITA ADD (
  CONSTRAINT PK_IUF_D_VISIBILITA
  PRIMARY KEY
  (ID_VISIBILITA)
  USING INDEX PK_IUF_D_VISIBILITA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_VOCE_RIPARTIZIONE ADD (
  CONSTRAINT PK_IUF_D_VOCE_RIPARTIZIONE
  PRIMARY KEY
  (ID_VOCE_RIPARTIZIONE)
  USING INDEX PK_IUF_D_VOCE_RIPARTIZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_L_PROCESSO_BATCH ADD (
  CONSTRAINT PK_IUF_L_PROCESSO_BATCH
  PRIMARY KEY
  (ID_PROCESSO_BATCH)
  USING INDEX PK_IUF_L_PROCESSO_BATCH
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BAND_OG_QUAD_CONTR_AMM ADD (
  CONSTRAINT PK_IUF_R_BANDO_OGG_QUAD_CONT
  PRIMARY KEY
  (ID_BANDO_OGGETTO, ID_QUADRO_OGG_CONTROLLO_AMM)
  USING INDEX PK_IUF_R_BANDO_OGG_QUAD_CONT
  ENABLE VALIDATE);

ALTER TABLE IUF_R_CONTROLLI_PIANO_OGUR ADD (
  CONSTRAINT PK_IUF_R_CONTROLLI_PIAN_OGUR
  PRIMARY KEY
  (ID_CONTROLLO_PIANO_OGUR)
  USING INDEX PK_IUF_R_CONTROLLI_PIAN_OGUR
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ESITO_DECODIFICATO ADD (
  CONSTRAINT PK_IUF_R_ESITO_DECODIFICATO
  PRIMARY KEY
  (ID_ESITO, ID_TIPO_OPERAZIONE)
  USING INDEX PK_IUF_R_ESITO_DECODIFICATO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ISTITUTO_TIPO_AMM ADD (
  CONSTRAINT PK_IUF_R_ISTITUTO_TIPO_AMM
  PRIMARY KEY
  (ID_ISTITUTO_DANNI_FAUNA, EXT_ID_TIPO_AMM)
  USING INDEX PK_IUF_R_ISTITUTO_TIPO_AMM
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LEGAME_GRUPPO_OGGETTO ADD (
  CONSTRAINT PK_IUF_R_LEGAME_GRUPPO_OGGET
  PRIMARY KEY
  (ID_LEGAME_GRUPPO_OGGETTO)
  USING INDEX PK_IUF_R_LEGAME_GRUPPO_OGGET
  ENABLE VALIDATE);

ALTER TABLE IUF_R_METODO_CENS_SPECIE ADD (
  CONSTRAINT PK_IUF_R_METODO_CENS_SPECIE
  PRIMARY KEY
  (ID_METODO_SPECIE)
  USING INDEX PK_IUF_R_METODO_CENS_SPECIE
  ENABLE VALIDATE);

ALTER TABLE IUF_R_OGGETTO_ICONA ADD (
  CONSTRAINT CK_FLAG_X_02
  CHECK (FLAG_FIRMA_GRAFOMETRICA IN ('S','N','X'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_20
  CHECK (FLAG_STAMPA_OGGETTO_APERTO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_69
  CHECK (FLAG_DA_FIRMARE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_70
  CHECK (FLAG_DA_PROTOCOLLARE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_79
  CHECK (FLAG_INVIA_MAIL IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_80
  CHECK (FLAG_VISIBILE_TUTTI IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_82
  CHECK (FLAG_ATTESTAZIONE_CAA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_OGGETTO_ICONA
  PRIMARY KEY
  (ID_OGGETTO_ICONA)
  USING INDEX PK_IUF_R_OGGETTO_ICONA
  ENABLE VALIDATE);

ALTER TABLE IUF_R_OPERAZION_TIPO_ESTR_DP ADD (
  CONSTRAINT CK_FLAG_78
  CHECK (FLAG_ATTIVO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_OPERAZ_TIPO_ESTR_DP
  PRIMARY KEY
  (ID_OPERAZIONE_TIPO_ESTR_DP)
  USING INDEX PK_IUF_R_OPERAZ_TIPO_ESTR_DP
  ENABLE VALIDATE);

ALTER TABLE IUF_R_QUADRO_OGGETTO ADD (
  CONSTRAINT CK_FLAG_04
  CHECK (FLAG_OBBLIGATORIO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_QUADRO_OGGETTO
  PRIMARY KEY
  (ID_QUADRO_OGGETTO)
  USING INDEX PK_IUF_R_QUADRO_OGGETTO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_QUADRO_OGGETTO_AZIONE ADD (
  CONSTRAINT PK_IUF_R_QUADRO_OGGETTO_AZIO
  PRIMARY KEY
  (ID_AZIONE, ID_QUADRO_OGGETTO, ID_ELENCO_CDU)
  USING INDEX PK_IUF_R_QUADRO_OGGETTO_AZIO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_TIPO_DOC_RIC_OGGETTO ADD (
  CONSTRAINT PK_IUF_R_TIPO_DOC_RIC_OGGETT
  PRIMARY KEY
  (ID_TIPO_DOC_RIC_OGGETTO)
  USING INDEX PK_IUF_R_TIPO_DOC_RIC_OGGETT
  ENABLE VALIDATE);

ALTER TABLE IUF_R_VISIBILITA_ATTORE ADD (
  CONSTRAINT PK_IUF_R_VISIBILITA_ATTORE
  PRIMARY KEY
  (ID_VISIBILITA_ATTORE)
  USING INDEX PK_IUF_R_VISIBILITA_ATTORE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_BUDGET ADD (
  CONSTRAINT PK_IUF_T_BUDGET
  PRIMARY KEY
  (ID_BUDGET)
  USING INDEX PK_IUF_T_BUDGET
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DICHIARAZIONE_SPESA ADD (
  CONSTRAINT CK_FLAG_92
  CHECK (FLAG_STATO_DICHIARAZIONE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_DICHIARAZIONE_SPESA
  PRIMARY KEY
  (ID_DICHIARAZIONE_SPESA)
  USING INDEX PK_IUF_T_DICHIARAZIONE_SPESA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_FILE_ALLEGATI_INTERVEN ADD (
  CONSTRAINT PK_IUF_T_FILE_ALLEGATI_INTER
  PRIMARY KEY
  (ID_FILE_ALLEGATI_INTERVENTO)
  USING INDEX PK_IUF_T_FILE_ALLEGATI_INTER
  ENABLE VALIDATE);

ALTER TABLE IUF_T_FLUSSO_ANOM_SIGOP ADD (
  CONSTRAINT CK_FLAG_109
  CHECK (FLAG_PROCESSATO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_FLUSSO_ANOM_SIGOP
  PRIMARY KEY
  (ID_FLUSSO_ANOM_SIGOP)
  USING INDEX PK_IUF_T_FLUSSO_ANOM_SIGOP
  ENABLE VALIDATE);

ALTER TABLE IUF_T_FORNITORE ADD (
  CONSTRAINT PK_IUF_T_FORNITORE
  PRIMARY KEY
  (ID_FORNITORE)
  USING INDEX PK_IUF_T_FORNITORE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_GRADUATORIA ADD (
  CONSTRAINT CK_FLAG_40
  CHECK (FLAG_APPROVATA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_GRADUATORIA
  PRIMARY KEY
  (ID_GRADUATORIA)
  USING INDEX PK_IUF_T_GRADUATORIA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_IMPORTO_BUDGET_ANNUALE ADD (
  CONSTRAINT PK_IUF_T_IMPORTO_BUDGET_ANNU
  PRIMARY KEY
  (ID_IMPORTO_BUDGET_ANNUALE)
  USING INDEX PK_IUF_T_IMPORTO_BUDGET_ANNU
  ENABLE VALIDATE);

ALTER TABLE IUF_T_LOG ADD (
  CONSTRAINT PK_IUF_T_LOG
  PRIMARY KEY
  (ID_LOG)
  USING INDEX PK_IUF_T_LOG
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PIANO_FINANZIARIO ADD (
  CONSTRAINT PK_IUF_T_PIANO_FINANZIARIO
  PRIMARY KEY
  (ID_PIANO_FINANZIARIO)
  USING INDEX PK_IUF_T_PIANO_FINANZIARIO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_STORICO_AMBITI_TEMATIC ADD (
  CONSTRAINT PK_IUF_T_STORICO_AMBITI_TEMA
  PRIMARY KEY
  (ID_STORICO_AMBITI_TEMATICI)
  USING INDEX PK_IUF_T_STORICO_AMBITI_TEMA
  ENABLE VALIDATE);

ALTER TABLE IUF_W_AZ_DATI_PARTI_1014_AZ1 ADD (
  CONSTRAINT PK_IUF_W_AZ_DA_PART_1014_AZ1
  PRIMARY KEY
  (ID_AZ_DATI_PARTICE_1014_AZ1)
  USING INDEX PK_IUF_W_AZ_DA_PART_1014_AZ1
  ENABLE VALIDATE);

ALTER TABLE IUF_W_PARTICELLE_1014_AZ1 ADD (
  CONSTRAINT PK_IUF_W_PARTICELLE_1014_AZ1
  PRIMARY KEY
  (ID_PARTICELLE_1014_AZ1)
  USING INDEX PK_IUF_W_PARTICELLE_1014_AZ1
  ENABLE VALIDATE);

ALTER TABLE IUF_D_BANDO ADD (
  CONSTRAINT CK_FLAG_01
  CHECK (FLAG_MASTER IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_10
  CHECK (FLAG_TITOLARITA_REGIONALE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_23
  CHECK (FLAG_DOMANDA_MULTIPLA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_33
  CHECK (FLAG_RIBASSO_INTERVENTI IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_88
  CHECK (FLAG_RENDICONTAZIONE_DOC_SPESA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_BANDO
  PRIMARY KEY
  (ID_BANDO)
  USING INDEX PK_IUF_D_BANDO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_BANDO_AMM_COMPETENZA ADD (
  CONSTRAINT PK_IUF_D_BANDO_AMM_COMPETENZ
  PRIMARY KEY
  (ID_BANDO_AMM_COMPETENZA)
  USING INDEX PK_IUF_D_BANDO_AMM_COMPETENZ
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_D_BANDO_AMM_COMPETEN
  UNIQUE (ID_BANDO, EXT_ID_AMM_COMPETENZA)
  USING INDEX AK1_IUF_D_BANDO_AMM_COMPETEN
  ENABLE VALIDATE);

ALTER TABLE IUF_D_CONTROLLO ADD (
  CONSTRAINT PK_IUF_D_CONTROLLO
  PRIMARY KEY
  (ID_CONTROLLO)
  USING INDEX PK_IUF_D_CONTROLLO
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_D_CONTROLLO
  UNIQUE (CODICE)
  USING INDEX AK1_IUF_D_CONTROLLO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_CRITERIO ADD (
  CONSTRAINT CK_ELABORAZIONE_01
  CHECK (FLAG_ELABORAZIONE IN ('A','M'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_CRITERIO
  PRIMARY KEY
  (ID_CRITERIO)
  USING INDEX PK_IUF_D_CRITERIO
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_D_CRITERIO
  UNIQUE (CODICE)
  USING INDEX AK1_IUF_D_CRITERIO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_DANNO ADD (
  CONSTRAINT PK_IUF_D_DANNO
  PRIMARY KEY
  (ID_DANNO)
  USING INDEX PK_IUF_D_DANNO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_DESCRIZIONE_INTERVENTO ADD (
  CONSTRAINT CK_FLAG_X_01
  CHECK (FLAG_CONSUMO_SUOLO IN ('S','N','X'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_21
  CHECK (FLAG_GESTIONE_COSTO_UNITARIO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_29
  CHECK (FLAG_ELEVATA_INTENSITA_LAVORO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_31
  CHECK (FLAG_INVESTIMENTO_FISSO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_32
  CHECK (FLAG_QUALITA_PROD_PROCESSO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_61
  CHECK (FLAG_SPESE_GENERALI IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_91
  CHECK (FLAG_BENEFICIARIO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_DESCRIZIONE_INTERVE
  PRIMARY KEY
  (ID_DESCRIZIONE_INTERVENTO)
  USING INDEX PK_IUF_D_DESCRIZIONE_INTERVE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ELEMENTO_QUADRO ADD (
  CONSTRAINT CK_FLAG_11
  CHECK (flag_obbligatorio IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_12
  CHECK (flag_presenza_in_elenco IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_13
  CHECK (flag_PROTETTO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_14
  CHECK (FLAG_STAMPA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_ELEMENTO_QUADRO
  PRIMARY KEY
  (ID_ELEMENTO_QUADRO)
  USING INDEX PK_IUF_D_ELEMENTO_QUADRO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ELENCO_QUERY ADD (
  CONSTRAINT PK_IUF_D_ELENCO_QUERY
  PRIMARY KEY
  (ID_ELENCO_QUERY)
  USING INDEX PK_IUF_D_ELENCO_QUERY
  ENABLE VALIDATE);

ALTER TABLE IUF_D_FOCUS_AREA ADD (
  CONSTRAINT PK_IUF_D_FOCUS_AREA
  PRIMARY KEY
  (ID_FOCUS_AREA)
  USING INDEX PK_IUF_D_FOCUS_AREA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_GG_LAVORATE ADD (
  CONSTRAINT PK_IUF_D_GG_LAVORATE
  PRIMARY KEY
  (ID_GG_LAVORATE)
  USING INDEX PK_IUF_D_GG_LAVORATE
  ENABLE VALIDATE,
  CONSTRAINT AK_IUF_D_GG_LAVORATE_01
  UNIQUE (EXT_ID_UTILIZZO, EXT_ID_ZONA_ALTIMETRICA)
  USING INDEX AK_IUF_D_GG_LAVORATE_01
  ENABLE VALIDATE);

ALTER TABLE IUF_D_LEGAME_INFO ADD (
  CONSTRAINT PK_IUF_D_LEGAME_INFO
  PRIMARY KEY
  (ID_LEGAME_INFO)
  USING INDEX PK_IUF_D_LEGAME_INFO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_LIVELLO ADD (
  CONSTRAINT CK_FLAG_02
  CHECK (FLAG_AMBITO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_25
  CHECK (FLAG_PROPOSTA_GAL IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_90
  CHECK (FLAG_VERCOD IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_96
  CHECK (FLAG_ANTICIPO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_LIVELLO
  PRIMARY KEY
  (ID_LIVELLO)
  USING INDEX PK_IUF_D_LIVELLO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_LIV_FOCUS_AREA_PRINCIP ADD (
  CONSTRAINT PK_IUF_D_LIV_FOCUS_AREA_PRIN
  PRIMARY KEY
  (ID_LIVELLO)
  USING INDEX PK_IUF_D_LIV_FOCUS_AREA_PRIN
  ENABLE VALIDATE);

ALTER TABLE IUF_D_NUMERO_LOTTO ADD (
  CONSTRAINT PK_IUF_D_NUMERO_LOTTO
  PRIMARY KEY
  (ID_NUMERO_LOTTO)
  USING INDEX PK_IUF_D_NUMERO_LOTTO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_OGUR_DA_REGIONE ADD (
  CONSTRAINT PK_IUF_D_OGUR_DA_REGIONE
  PRIMARY KEY
  (ID_OGUR_DA_REGIONE)
  USING INDEX PK_IUF_D_OGUR_DA_REGIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PRODUZIONE ADD (
  CONSTRAINT PK_IUF_D_PRODUZIONE
  PRIMARY KEY
  (ID_PRODUZIONE)
  USING INDEX PK_IUF_D_PRODUZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PRODUZIONE_CERTIFICATA ADD (
  CONSTRAINT PK_IUF_D_PRODUZIONE_CERTIFIC
  PRIMARY KEY
  (ID_PRODUZIONE_CERTIFICATA)
  USING INDEX PK_IUF_D_PRODUZIONE_CERTIFIC
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PRODUZIONE_HA ADD (
  CONSTRAINT PK_IUF_D_PRODUZIONE_HA
  PRIMARY KEY
  (ID_PRODUZIONE_HA)
  USING INDEX PK_IUF_D_PRODUZIONE_HA
  ENABLE VALIDATE,
  CONSTRAINT AK_IUF_D_PRODUZIONE_HA
  UNIQUE (EXT_ID_UTILIZZO, EXT_ID_ZONA_ALTIMETRICA)
  USING INDEX AK_IUF_D_PRODUZIONE_HA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PRODUZIONE_TRADIZIONAL ADD (
  CONSTRAINT PK_IUF_D_PRODUZIONE_TRADIZIO
  PRIMARY KEY
  (ID_PRODUZIONE_TRADIZIONALE)
  USING INDEX PK_IUF_D_PRODUZIONE_TRADIZIO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_SANZIONE_INVESTIMENTO ADD (
  CONSTRAINT PK_IUF_D_SANZIONE_INVESTIMEN
  PRIMARY KEY
  (ID_SANZIONE_INVESTIMENTO)
  USING INDEX PK_IUF_D_SANZIONE_INVESTIMEN
  ENABLE VALIDATE);

ALTER TABLE IUF_D_SCORTA ADD (
  CONSTRAINT PK_IUF_D_SCORTA
  PRIMARY KEY
  (ID_SCORTA)
  USING INDEX PK_IUF_D_SCORTA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_DANNO_FAUNA ADD (
  CONSTRAINT PK_IUF_D_TIPO_DANNO_FAUNA
  PRIMARY KEY
  (ID_TIPO_DANNO_FAUNA)
  USING INDEX PK_IUF_D_TIPO_DANNO_FAUNA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_VOCE_ELEMENTO ADD (
  CONSTRAINT PK_IUF_D_VOCE_ELEMENTO
  PRIMARY KEY
  (ID_VOCE_ELEMENTO)
  USING INDEX PK_IUF_D_VOCE_ELEMENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_L_LOG_BATCH ADD (
  CONSTRAINT PK_IUF_L_LOG_BATCH
  PRIMARY KEY
  (ID_LOG_BATCH)
  USING INDEX PK_IUF_L_LOG_BATCH
  ENABLE VALIDATE);

ALTER TABLE IUF_R_AGGREGAZIONE_INTERVENT ADD (
  CONSTRAINT PK_IUF_R_AGGREGAZIONE_INTERV
  PRIMARY KEY
  (ID_AGGREGAZIONE_INTERVENTI)
  USING INDEX PK_IUF_R_AGGREGAZIONE_INTERV
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_COMUNE ADD (
  CONSTRAINT CK_FLAG_18
  CHECK (flag_foglio IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_BANDO_COMUNE
  PRIMARY KEY
  (ID_BANDO_COMUNE)
  USING INDEX PK_IUF_R_BANDO_COMUNE
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_R_BANDO_COMUNE
  UNIQUE (ID_BANDO, EXT_ISTAT_COMUNE)
  USING INDEX AK1_IUF_R_BANDO_COMUNE
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_COMUNE_FOGLIO ADD (
  CONSTRAINT PK_IUF_R_BANDO_COMUNE_FOGLIO
  PRIMARY KEY
  (ID_BANDO_COMUNE, EXT_FOGLIO)
  USING INDEX PK_IUF_R_BANDO_COMUNE_FOGLIO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_FILIERA ADD (
  CONSTRAINT PK_IUF_R_BANDO_FILIERA
  PRIMARY KEY
  (ID_BANDO, ID_TIPO_FILIERA)
  USING INDEX PK_IUF_R_BANDO_FILIERA
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_MASTER ADD (
  CONSTRAINT PK_IUF_R_BANDO_MASTER
  PRIMARY KEY
  (ID_BANDO, ID_BANDO_MASTER)
  USING INDEX PK_IUF_R_BANDO_MASTER
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_OGGETTO ADD (
  CONSTRAINT CK_FLAG_07
  CHECK (FLAG_ATTIVO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT FLAG_1078693160
  CHECK (FLAG_PROTOCOLLA_RICEVUTA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_BANDO_OGGETTO
  PRIMARY KEY
  (ID_BANDO_OGGETTO)
  USING INDEX PK_IUF_R_BANDO_OGGETTO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_OGGETTO_CONTROLL ADD (
  CONSTRAINT CK_FLAG_77
  CHECK (FLAG_GIUSTIFICABILE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_GRAVITA_01
  CHECK (GRAVITA IN ('G','B','W'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_BANDO_OGGETTO_CONTR
  PRIMARY KEY
  (ID_BANDO_OGGETTO, ID_CONTROLLO)
  USING INDEX PK_IUF_R_BANDO_OGGETTO_CONTR
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_OGGETTO_ICONA ADD (
  CONSTRAINT PK_IUF_R_BANDO_OGGETTO_ICONA
  PRIMARY KEY
  (ID_BANDO_OGGETTO, ID_OGGETTO_ICONA)
  USING INDEX PK_IUF_R_BANDO_OGGETTO_ICONA
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_OGGETTO_QUADRO ADD (
  CONSTRAINT PK_IUF_R_BANDO_OGGETTO_QUADR
  PRIMARY KEY
  (ID_QUADRO_OGGETTO, ID_BANDO_OGGETTO)
  USING INDEX PK_IUF_R_BANDO_OGGETTO_QUADR
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_PREMIO_ALLEVAM ADD (
  CONSTRAINT PK_IUF_R_BANDO_PREMIO_ALLEVA
  PRIMARY KEY
  (ID_BANDO, EXT_ID_SPECIE_ANIMALE, EXT_ID_CATEGORIA_ANIMALE)
  USING INDEX PK_IUF_R_BANDO_PREMIO_ALLEVA
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_PREMIO_COLTURA ADD (
  CONSTRAINT PK_IUF_R_BANDO_PREMIO_COLTUR
  PRIMARY KEY
  (ID_BANDO, EXT_ID_UTILIZZO)
  USING INDEX PK_IUF_R_BANDO_PREMIO_COLTUR
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_UTILIZZO_DANNO ADD (
  CONSTRAINT PK_IUF_R_BANDO_UTILIZZO_DANN
  PRIMARY KEY
  (ID_BANDO, EXT_ID_UTILIZZO)
  USING INDEX PK_IUF_R_BANDO_UTILIZZO_DANN
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BAN_OG_QUA_CON_AMM_LIV ADD (
  CONSTRAINT IUF_R_BAN_OG_QUA_CON_AMM_LIV
  PRIMARY KEY
  (ID_BANDO_OGGETTO, ID_QUADRO_OGG_CONTROLLO_AMM, ID_LIVELLO)
  USING INDEX PK_IUF_R_BA_OG_QUA_CO_AM_LIV
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DANNO_INTERVENTO ADD (
  CONSTRAINT PK_IUF_R_DANNO_INTERVENTO
  PRIMARY KEY
  (ID_DANNO, ID_DESCRIZIONE_INTERVENTO)
  USING INDEX PK_IUF_R_DANNO_INTERVENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DANNO_SPECIE ADD (
  CONSTRAINT PK_IUF_R_DANNO_SPECIE
  PRIMARY KEY
  (ID_DANNO_SPECIE)
  USING INDEX PK_IUF_R_DANNO_SPECIE
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ELENCO_QUERY_BANDO ADD (
  CONSTRAINT CK_FLAG_73
  CHECK (FLAG_VISIBILE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_ELENCO_QUERY_BANDO
  PRIMARY KEY
  (ID_ELENCO_QUERY, ID_BANDO, EXT_COD_ATTORE)
  USING INDEX PK_IUF_R_ELENCO_QUERY_BANDO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_FONDO ADD (
  CONSTRAINT PK_IUF_R_FONDO
  PRIMARY KEY
  (ID_BANDO, ID_TIPO_IMPORTO)
  USING INDEX PK_IUF_R_FONDO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_INFO_CATALOGO ADD (
  CONSTRAINT PK_IUF_R_INFO_CATALOGO
  PRIMARY KEY
  (ID_LIVELLO, ID_QUADRO_OGGETTO, ID_GRUPPO_INFO_CATALOGO)
  USING INDEX PK_IUF_R_INFO_CATALOGO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_BANDO ADD (
  CONSTRAINT PK_IUF_R_LIVELLO_BANDO
  PRIMARY KEY
  (ID_LIVELLO, ID_BANDO)
  USING INDEX PK_IUF_R_LIVELLO_BANDO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_CRITERIO ADD (
  CONSTRAINT PK_IUF_R_LIVELLO_CRITERIO
  PRIMARY KEY
  (ID_LIVELLO_CRITERIO)
  USING INDEX PK_IUF_R_LIVELLO_CRITERIO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_FG_TIPOLOGIA ADD (
  CONSTRAINT PK_IUF_R_LIVELLO_FG_TIPOLOGI
  PRIMARY KEY
  (ID_LIVELLO, EXT_ID_FG_TIPOLOGIA)
  USING INDEX PK_IUF_R_LIVELLO_FG_TIPOLOGI
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_FOCUS_AREA ADD (
  CONSTRAINT PK_IUF_R_LIVELLO_FOCUS_AREA
  PRIMARY KEY
  (ID_LIVELLO_FOCUS_AREA)
  USING INDEX PK_IUF_R_LIVELLO_FOCUS_AREA
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_INTERVENTO ADD (
  CONSTRAINT CK_FLAG_97
  CHECK (FLAG_DOCUMENTO_SPESA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_LIVELLO_INTERVENTO
  PRIMARY KEY
  (ID_LIVELLO, ID_DESCRIZIONE_INTERVENTO)
  USING INDEX PK_IUF_R_LIVELLO_INTERVENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_PADRE ADD (
  CONSTRAINT PK_IUF_R_LIVELLO_PADRE
  PRIMARY KEY
  (ID_LIVELLO, ID_LIVELLO_PADRE)
  USING INDEX PK_IUF_R_LIVELLO_PADRE
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_SETTORE_PROD ADD (
  CONSTRAINT PK_IUF_R_LIVELLO_SETTORE_PRO
  PRIMARY KEY
  (ID_LIVELLO, ID_SETTORE_PRODUZIONE)
  USING INDEX PK_IUF_R_LIVELLO_SETTORE_PRO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_FOCUS_AREA_SECONDA ADD (
  CONSTRAINT PK_IUF_R_LIV_FOCUS_AREA_SECO
  PRIMARY KEY
  (ID_LIVELLO, ID_FOCUS_AREA)
  USING INDEX PK_IUF_R_LIV_FOCUS_AREA_SECO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_PIANO_FINANZIARIO ADD (
  CONSTRAINT PK_IUF_R_LIV_PIANO_FINANZIAR
  PRIMARY KEY
  (ID_LIVELLO, ID_TIPO_PIANO_FINANZIARIO)
  USING INDEX PK_IUF_R_LIV_PIANO_FINANZIAR
  ENABLE VALIDATE);

ALTER TABLE IUF_R_MISURAZIONE_INTERVENTO ADD (
  CONSTRAINT PK_IUF_R_MISURAZIONE_INTERVE
  PRIMARY KEY
  (ID_MISURAZIONE_INTERVENTO)
  USING INDEX PK_IUF_R_MISURAZIONE_INTERVE
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMENTO_AGRIC_LIV ADD (
  CONSTRAINT PK_IUF_R_PROCEDIMENTO_AGRIC_
  PRIMARY KEY
  (ID_PROCEDIMENTO_AGRICOLO, ID_LIVELLO)
  USING INDEX PK_IUF_R_PROCEDIMENTO_AGRIC_
  ENABLE VALIDATE);

ALTER TABLE IUF_R_QUADRO_OGG_CONTROL_AMM ADD (
  CONSTRAINT CK_FLAG_35
  CHECK (FLAG_OBBLIGATORIO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_QUADRO_OGG_CONT_AMM
  PRIMARY KEY
  (ID_QUADRO_OGG_CONTROLLO_AMM)
  USING INDEX PK_IUF_R_QUADRO_OGG_CONT_AMM
  ENABLE VALIDATE);

ALTER TABLE IUF_R_QUADRO_OGGETTO_CONTROL ADD (
  CONSTRAINT CK_FLAG_05
  CHECK (FLAG_OBBLIGATORIO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_76
  CHECK (FLAG_GIUSTIFICABILE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT GRAVITA_1415671880
  CHECK (GRAVITA IN ('G','B','W'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_QUADRO_OGGETTO_CONT
  PRIMARY KEY
  (ID_QUADRO_OGGETTO_CONTROLLO)
  USING INDEX PK_IUF_R_QUADRO_OGGETTO_CONT
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_R_QUADRO_OGGETTO_CON
  UNIQUE (ID_QUADRO_OGGETTO, ID_CONTROLLO)
  USING INDEX AK1_IUF_R_QUADRO_OGGETTO_CON
  ENABLE VALIDATE);

ALTER TABLE IUF_R_RIPARTIZIONE_CONTRIBUT ADD (
  CONSTRAINT CK_RIPARTIZIONE_01
  CHECK (FLAG_CRITERIO_RIPARTIZIONE IN ('P','D'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_RIPARTIZIONE_CONTRI
  PRIMARY KEY
  (ID_TIPO_IMPORTO, ID_LIVELLO, ID_VOCE_RIPARTIZIONE)
  USING INDEX PK_IUF_R_RIPARTIZIONE_CONTRI
  ENABLE VALIDATE);

ALTER TABLE IUF_R_SOLUZIONE_CONTROLLO ADD (
  CONSTRAINT PK_IUF_R_SOLUZIONE_CONTROLLO
  PRIMARY KEY
  (ID_TIPO_SOLUZIONE, ID_CONTROLLO)
  USING INDEX PK_IUF_R_SOLUZIONE_CONTROLLO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_TIPO_DOC_RIC_BANDO_OGG ADD (
  CONSTRAINT PK_IUF_R_TIPO_DOC_RI_BAN_OGG
  PRIMARY KEY
  (ID_BANDO_OGGETTO, ID_TIPO_DOC_RIC_OGGETTO)
  USING INDEX PK_IUF_R_TIPO_DOC_RI_BAN_OGG
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ALLEGATI_GRADUATORIA ADD (
  CONSTRAINT PK_IUF_T_ALLEGATI_GRADUATORI
  PRIMARY KEY
  (ID_ALLEGATI_GRADUATORIA)
  USING INDEX PK_IUF_T_ALLEGATI_GRADUATORI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ANOMALIA_PARTICELLA ADD (
  CONSTRAINT CK_GRAVITA_04
  CHECK (GRAVITA IN ('G','B','W'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_ANOMALIA_PARTICELLA
  PRIMARY KEY
  (ID_ANOMALIA_PARTICELLA)
  USING INDEX PK_IUF_T_ANOMALIA_PARTICELLA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ATTIVITA_BANDO_OGGETTO ADD (
  CONSTRAINT PK_IUF_T_ATTIVITA_BANDO_OGGE
  PRIMARY KEY
  (ID_ATTIVITA_BANDO_OGGETTO)
  USING INDEX PK_IUF_T_ATTIVITA_BANDO_OGGE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONCESSIONE ADD (
  CONSTRAINT CK_FLAG_81
  CHECK (FLAG_AZIENDE_INVIATE_RNA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_CONCESSIONE
  PRIMARY KEY
  (ID_CONCESSIONE)
  USING INDEX PK_IUF_T_CONCESSIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESTRAZIONE_CAMPIONE ADD (
  CONSTRAINT CK_FLAG_48
  CHECK (FLAG_APPROVATA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_ESTRAZIONE_CAMPIONE
  PRIMARY KEY
  (ID_ESTRAZIONE_CAMPIONE)
  USING INDEX PK_IUF_T_ESTRAZIONE_CAMPIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_FILE_FLUSSO_ANOM_SIGOP ADD (
  CONSTRAINT PK_IUF_T_FILE_FLUSSO_ANOM_SI
  PRIMARY KEY
  (ID_FILE_FLUSSO_ANOM_SIGOP)
  USING INDEX PK_IUF_T_FILE_FLUSSO_ANOM_SI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_IMPORTI_ESTRAZ_DP ADD (
  CONSTRAINT PK_IUF_T_IMPORTI_ESTRAZ_DP
  PRIMARY KEY
  (ID_IMPORTI_ESTRAZ_DP)
  USING INDEX PK_IUF_T_IMPORTI_ESTRAZ_DP
  ENABLE VALIDATE);

ALTER TABLE IUF_T_IMPORTO_DICHIARAZIONE ADD (
  CONSTRAINT PK_IUF_T_IMPORTO_DICHIARAZIO
  PRIMARY KEY
  (ID_IMPORTO_DICHIARAZIONE)
  USING INDEX PK_IUF_T_IMPORTO_DICHIARAZIO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ITER_CONCESSIONE ADD (
  CONSTRAINT PK_IUF_T_ITER_CONCESSIONE
  PRIMARY KEY
  (ID_ITER_CONCESSIONE)
  USING INDEX PK_IUF_T_ITER_CONCESSIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ITER_PIANO_FINANZIARIO ADD (
  CONSTRAINT PK_IUF_T_ITER_PIANO_FINANZIA
  PRIMARY KEY
  (ID_ITER_PIANO_FINANZIARIO)
  USING INDEX PK_IUF_T_ITER_PIANO_FINANZIA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_LISTA_LIQUIDAZIONE ADD (
  CONSTRAINT CK_FLAG_42
  CHECK (FLAG_INVIO_SIGOP IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_59
  CHECK (FLAG_AMM_COMPETENZA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_STATO_LISTA_01
  CHECK (FLAG_STATO_LISTA IN ('A','B','D','T'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_LISTA_LIQUIDAZIONE
  PRIMARY KEY
  (ID_LISTA_LIQUIDAZIONE)
  USING INDEX PK_IUF_T_LISTA_LIQUIDAZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO ADD (
  CONSTRAINT CK_FLAG_X_03
  CHECK (FLAG_RENDICONTAZIONE_CON_IVA IN ('S','N','X'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_PROCEDIMENTO
  PRIMARY KEY
  (ID_PROCEDIMENTO)
  USING INDEX PK_IUF_T_PROCEDIMENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_AZIENDA ADD (
  CONSTRAINT PK_IUF_T_PROCEDIMENTO_AZIEND
  PRIMARY KEY
  (ID_PROCEDIMENTO_AZIENDA)
  USING INDEX PK_IUF_T_PROCEDIMENTO_AZIEND
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_CONTO_COR ADD (
  CONSTRAINT PK_IUF_T_PROCEDIMENTO_CONTO_
  PRIMARY KEY
  (ID_PROCEDIMENTO_CONTO_CORR)
  USING INDEX PK_IUF_T_PROCEDIMENTO_CONTO_
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_GRUPPO ADD (
  CONSTRAINT CK_FLAG_98
  CHECK (FLAG_GRUPPO_CHIUSO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_PROCEDIMENTO_GRUPPO
  PRIMARY KEY
  (ID_PROCEDIMENTO_GRUPPO)
  USING INDEX PK_IUF_T_PROCEDIMENTO_GRUPPO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_OGGETTO ADD (
  CONSTRAINT CK_FLAG_103
  CHECK (FLAG_VALIDAZIONE_GRAFICA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_47
  CHECK (FLAG_PREMIO_ACCERTATO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_57
  CHECK (FLAG_ACQUISIZIONE_GIS IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_62
  CHECK (FLAG_RICHIESTA_CUP IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_PROCEDIMENTO_OGGETT
  PRIMARY KEY
  (ID_PROCEDIMENTO_OGGETTO)
  USING INDEX PK_IUF_T_PROCEDIMENTO_OGGETT
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIM_OGGETTO_QUADR ADD (
  CONSTRAINT CK_COMPILATO_01
  CHECK (FLAG_COMPILATO IN ('S','P'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_PROCEDIM_OGGETTO_QU
  PRIMARY KEY
  (ID_PROCEDIM_OGGETTO_QUADRO)
  USING INDEX PK_IUF_T_PROCEDIM_OGGETTO_QU
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIM_OGGETTO_STAMP ADD (
  CONSTRAINT PK_IUF_T_PROCEDIM_OGGETTO_ST
  PRIMARY KEY
  (ID_PROCEDIM_OGGETTO_STAMPA)
  USING INDEX PK_IUF_T_PROCEDIM_OGGETTO_ST
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROC_OGGETTO_SANZIONE ADD (
  CONSTRAINT PK_IUF_T_PROC_OGGETTO_SANZIO
  PRIMARY KEY
  (ID_PROC_OGGETTO_SANZIONE)
  USING INDEX PK_IUF_T_PROC_OGGETTO_SANZIO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRODUZIONE_ZOOTECNICA ADD (
  CONSTRAINT PK_IUF_T_PRODUZIONE_ZOOTECNI
  PRIMARY KEY
  (ID_PRODUZIONE_ZOOTECNICA)
  USING INDEX PK_IUF_T_PRODUZIONE_ZOOTECNI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_REFERENTE_PROGETTO ADD (
  CONSTRAINT PK_IUF_T_REFERENTE_PROGETTO
  PRIMARY KEY
  (ID_REFERENTE_PROGETTO)
  USING INDEX PK_IUF_T_REFERENTE_PROGETTO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_REGIME_AIUTO_PREVISTO ADD (
  CONSTRAINT PK_IUF_T_REGIME_AIUTO_PREVIS
  PRIMARY KEY
  (ID_REGIME_AIUTO_PREVISTO)
  USING INDEX PK_IUF_T_REGIME_AIUTO_PREVIS
  ENABLE VALIDATE);

ALTER TABLE IUF_T_REGIME_AIUTO_RICHIESTO ADD (
  CONSTRAINT PK_IUF_T_REGIME_AIUTO_RICHIE
  PRIMARY KEY
  (ID_REGIME_AIUTO_RICHIESTO)
  USING INDEX PK_IUF_T_REGIME_AIUTO_RICHIE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_RISORSE_LIVELLO_BANDO ADD (
  CONSTRAINT CK_FLAG_43
  CHECK (FLAG_BLOCCATO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_44
  CHECK (FLAG_AMM_COMPETENZA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_RISORSE_LIVELLO_BAN
  PRIMARY KEY
  (ID_RISORSE_LIVELLO_BANDO)
  USING INDEX PK_IUF_T_RISORSE_LIVELLO_BAN
  ENABLE VALIDATE);

ALTER TABLE IUF_T_SCORTA_MAGAZZINO ADD (
  CONSTRAINT PK_IUF_T_SCORTA_MAGAZZINO
  PRIMARY KEY
  (ID_SCORTA_MAGAZZINO)
  USING INDEX PK_IUF_T_SCORTA_MAGAZZINO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_SOLUZIONE_ANOMALIA ADD (
  CONSTRAINT PK_IUF_T_SOLUZIONE_ANOMALIA
  PRIMARY KEY
  (ID_SOLUZIONE_ANOMALIA)
  USING INDEX PK_IUF_T_SOLUZIONE_ANOMALIA
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_T_SOLUZIONE_ANOMALIA
  UNIQUE (ID_PROCEDIMENTO_OGGETTO, ID_CONTROLLO)
  USING INDEX AK1_IUF_T_SOLUZIONE_ANOMALIA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_SOSPENSIONE_ANTICIPO ADD (
  CONSTRAINT CK_FLAG_52
  CHECK (FLAG_SOSPENSIONE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_SOSPENSIONE_ANTICIP
  PRIMARY KEY
  (ID_SOSPENSIONE_ANTICIPO)
  USING INDEX PK_IUF_T_SOSPENSIONE_ANTICIP
  ENABLE VALIDATE);

ALTER TABLE IUF_T_STORICO_LIVELLO_FA ADD (
  CONSTRAINT PK_IUF_T_STORICO_LIVELLO_FA
  PRIMARY KEY
  (ID_STORICO_LIVELLO_FA)
  USING INDEX PK_IUF_T_STORICO_LIVELLO_FA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_SUPERFICIE_COLTURA ADD (
  CONSTRAINT CK_FLAG_06
  CHECK (RECORD_MODIFICATO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_114
  CHECK (FLAG_DANNEGGIATO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_16
  CHECK (COLTURA_SECONDARIA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_SUPERFICIE_COLTURA
  PRIMARY KEY
  (ID_SUPERFICIE_COLTURA)
  USING INDEX PK_IUF_T_SUPERFICIE_COLTURA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_VALORI_PARAMETRI ADD (
  CONSTRAINT PK_IUF_T_VALORI_PARAMETRI
  PRIMARY KEY
  (ID_VALORI_PARAMETRI)
  USING INDEX PK_IUF_T_VALORI_PARAMETRI
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_T_VALORI_PARAMETRI
  UNIQUE (ID_BANDO_OGGETTO, ID_CONTROLLO, VALORE)
  USING INDEX AK1_IUF_T_VALORI_PARAMETRI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_VISITA_LUOGO ADD (
  CONSTRAINT PK_IUF_T_VISITA_LUOGO
  PRIMARY KEY
  (ID_VISITA_LUOGO)
  USING INDEX PK_IUF_T_VISITA_LUOGO
  ENABLE VALIDATE);

ALTER TABLE IUF_W_PROCEDIMENTO_OGG_AZIEN ADD (
  CONSTRAINT PK_IUF_W_PROCEDIMENTO_OGG_AZ
  PRIMARY KEY
  (ID_PROCEDIMENTO_OGGETTO)
  USING INDEX PK_IUF_W_PROCEDIMENTO_OGG_AZ
  ENABLE VALIDATE);

ALTER TABLE IUF_W_PROCEDIMENTO_OGGETT_CC ADD (
  CONSTRAINT PK_IUF_W_PROCEDIMEN_OGGET_CC
  PRIMARY KEY
  (ID_PROCEDIMENTO_OGGETTO)
  USING INDEX PK_IUF_W_PROCEDIMEN_OGGET_CC
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ALLEGATI_BANDO ADD (
  CONSTRAINT CK_FLAG_84
  CHECK (FLAG_VISIBILE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_ALLEGATI_BANDO
  PRIMARY KEY
  (ID_ALLEGATI_BANDO)
  USING INDEX PK_IUF_D_ALLEGATI_BANDO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_DETTAGLIO_INFO_CATALOG ADD (
  CONSTRAINT CK_FLAG_26
  CHECK (FLAG_OBBLIGATORIO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_GESTIONE_FILE_02
  CHECK (FLAG_GESTIONE_FILE IN ('N','F','O'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_DETTAGLIO_INFO_CATA
  PRIMARY KEY
  (ID_DETTAGLIO_INFO_CATALOGO)
  USING INDEX PK_IUF_D_DETTAGLIO_INFO_CATA
  ENABLE VALIDATE);

ALTER TABLE IUF_D_GRUPPO_INFO ADD (
  CONSTRAINT CK_FLAG_28
  CHECK (FLAG_INFO_CATALOGO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_GRUPPO_INFO
  PRIMARY KEY
  (ID_GRUPPO_INFO)
  USING INDEX PK_IUF_D_GRUPPO_INFO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_GRUPPO_TESTO_VERBALE ADD (
  CONSTRAINT PK_IUF_D_GRUPPO_TESTO_VERBAL
  PRIMARY KEY
  (ID_GRUPPO_TESTO_VERBALE)
  USING INDEX PK_IUF_D_GRUPPO_TESTO_VERBAL
  ENABLE VALIDATE);

ALTER TABLE IUF_D_IMPEGNO ADD (
  CONSTRAINT CK_IMPEGNO_01
  CHECK (TIPO_IMPEGNO IN ('A','B'))
  ENABLE VALIDATE,
  CONSTRAINT CK_SELEZIONE_01
  CHECK (CODICE_SELEZIONE IN ('C','R'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_IMPEGNO
  PRIMARY KEY
  (ID_IMPEGNO)
  USING INDEX PK_IUF_D_IMPEGNO
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TESTO_VERBALE ADD (
  CONSTRAINT CK_FLAG_71
  CHECK (FLAG_CATALOGO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_TESTO_VERBALE
  PRIMARY KEY
  (ID_TESTO_VERBALE)
  USING INDEX PK_IUF_D_TESTO_VERBALE
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_LIVELLO_CRITERIO ADD (
  CONSTRAINT PK_IUF_R_BANDO_LIVELLO_CRITE
  PRIMARY KEY
  (ID_BANDO_LIVELLO_CRITERIO)
  USING INDEX PK_IUF_R_BANDO_LIVELLO_CRITE
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_BANDO_BENEFICIARIO ADD (
  CONSTRAINT PK_IUF_R_LIV_BANDO_BENEFICIA
  PRIMARY KEY
  (ID_LIVELLO, ID_BANDO, EXT_ID_FG_TIPOLOGIA)
  USING INDEX PK_IUF_R_LIV_BANDO_BENEFICIA
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_BANDO_GRADUATORIA ADD (
  CONSTRAINT PK_IUF_R_LIV_BANDO_GRADUATOR
  PRIMARY KEY
  (ID_LIVELLO, ID_BANDO, ID_GRADUATORIA)
  USING INDEX PK_IUF_R_LIV_BANDO_GRADUATOR
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_BANDO_INTERVENTO ADD (
  CONSTRAINT PK_IUF_R_LIV_BANDO_INTERVENT
  PRIMARY KEY
  (ID_BANDO, ID_DESCRIZIONE_INTERVENTO)
  USING INDEX PK_IUF_R_LIV_BANDO_INTERVENT
  ENABLE VALIDATE);

ALTER TABLE IUF_R_MATRICE_IMPEGNI ADD (
  CONSTRAINT PK_IUF_R_MATRICE_IMPEGNI
  PRIMARY KEY
  (ID_IMPEGNO_PRINCIPALE, ID_IMPEGNO_COMPATIBILE)
  USING INDEX PK_IUF_R_MATRICE_IMPEGNI
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMENTO_LIVELLO ADD (
  CONSTRAINT PK_IUF_R_PROCEDIMENTO_LIVELL
  PRIMARY KEY
  (ID_PROCEDIMENTO, ID_LIVELLO)
  USING INDEX PK_IUF_R_PROCEDIMENTO_LIVELL
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMENTO_OGG_LIVEL ADD (
  CONSTRAINT PK_IUF_R_PROCEDIMENTO_OGG_LI
  PRIMARY KEY
  (ID_PROCEDIMENTO_OGGETTO, ID_LIVELLO)
  USING INDEX PK_IUF_R_PROCEDIMENTO_OGG_LI
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMENTO_SCORTA ADD (
  CONSTRAINT PK_IUF_R_PROCEDIMENTO_SCORTA
  PRIMARY KEY
  (ID_PROCEDIMENTO_SCORTA)
  USING INDEX PK_IUF_R_PROCEDIMENTO_SCORTA
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROC_PRODUZIONE_ZOOTEC ADD (
  CONSTRAINT PK_IUF_R_PROC_PRODUZIONE_ZOO
  PRIMARY KEY
  (ID_PROC_PRODUZIONE_ZOOTEC)
  USING INDEX PK_IUF_R_PROC_PRODUZIONE_ZOO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROC_SUPERFICIE_COLTUR ADD (
  CONSTRAINT PK_IUF_R_PROC_SUPERFICIE_COL
  PRIMARY KEY
  (ID_PROC_SUPERFICIE_COLTUR)
  USING INDEX PK_IUF_R_PROC_SUPERFICIE_COL
  ENABLE VALIDATE);

ALTER TABLE IUF_R_RISOR_LIV_BANDO_AMM_CO ADD (
  CONSTRAINT PK_IUF_R_RISORSE_LIV_BANDO_A
  PRIMARY KEY
  (ID_RISORSE_LIVELLO_BANDO, EXT_ID_AMM_COMPETENZA)
  USING INDEX PK_IUF_R_RISORSE_LIV_BANDO_A
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ACCERTAMENTO_DANNO ADD (
  CONSTRAINT CK_FLAG_50
  CHECK (FLAG_SOPRALLUOGO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_51
  CHECK (FLAG_REITERATI_DANNI IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_ACCERTAMENTO_DANNO
  PRIMARY KEY
  (ID_ACCERTAMENTO_DANNO)
  USING INDEX PK_IUF_T_ACCERTAMENTO_DANNO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ANALISI_RISCHIO ADD (
  CONSTRAINT CK_FLAG_67
  CHECK (FLAG_ANNULLATO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_68
  CHECK (FLAG_CARICATO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_ANALISI_RISCHIO
  PRIMARY KEY
  (ID_ANALISI_RISCHIO)
  USING INDEX PK_IUF_T_ANALISI_RISCHIO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ANALISI_RISCHIO_IMP ADD (
  CONSTRAINT PK_IUF_T_ANALISI_RISCHIO_IMP
  PRIMARY KEY
  (ID_ANALISI_RISCHIO_IMP)
  USING INDEX PK_IUF_T_ANALISI_RISCHIO_IMP
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ANOMALIE_CONTROLLI ADD (
  CONSTRAINT CK_GRAVITA_ANOM_CONTR_01
  CHECK (GRAVITA IN ('G','B','W','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_ANOMALIE_CONTROLLI
  PRIMARY KEY
  (ID_ANOMALIE_CONTROLLI)
  USING INDEX PK_IUF_T_ANOMALIE_CONTROLLI
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_T_ANOMALIE_CONTROLLI
  UNIQUE (ID_PROCEDIMENTO_OGGETTO, ID_CONTROLLO, ID_PROCEDIMENTO)
  USING INDEX AK1_IUF_T_ANOMALIE_CONTROLLI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ANTICIPO ADD (
  CONSTRAINT PK_IUF_T_ANTICIPO
  PRIMARY KEY
  (ID_ANTICIPO)
  USING INDEX PK_IUF_T_ANTICIPO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ASSICURAZIONI_COLTURE ADD (
  CONSTRAINT PK_IUF_T_ASSICURAZIONI_COLTU
  PRIMARY KEY
  (ID_ASSICURAZIONI_COLTURE)
  USING INDEX PK_IUF_T_ASSICURAZIONI_COLTU
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONTROLLO_COLTURA ADD (
  CONSTRAINT CK_FLAG_17
  CHECK (bloccante IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_CONTROLLO_COLTURA
  PRIMARY KEY
  (ID_CONTROLLO_COLTURA)
  USING INDEX PK_IUF_T_CONTROLLO_COLTURA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONTROLLO_IN_LOCO ADD (
  CONSTRAINT CK_FLAG_49
  CHECK (FLAG_CONTROLLO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_53
  CHECK (FLAG_INADEMP_VINCOLATA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_54
  CHECK (FLAG_INADEMP_CONDIZIONATA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_CONTROLLO_IN_LOCO
  PRIMARY KEY
  (ID_CONTROLLO_IN_LOCO)
  USING INDEX PK_IUF_T_CONTROLLO_IN_LOCO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONTROLLO_IN_LOCO_EXPO ADD (
  CONSTRAINT CK_FLAG_105
  CHECK (FLAG_CONTROLLO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_106
  CHECK (FLAG_PREAVVISO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_CONTROLLO_IN_LOCO_E
  PRIMARY KEY
  (ID_CONTROLLO_IN_LOCO_EXPOST)
  USING INDEX PK_IUF_T_CONTROLLO_IN_LOCO_E
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONTROLLO_IN_LOCO_INVE ADD (
  CONSTRAINT CK_FLAG_63
  CHECK (FLAG_CONTROLLO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_64
  CHECK (FLAG_PREAVVISO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_CONTROLLO_IN_LOCO_I
  PRIMARY KEY
  (ID_CONTROLLO_IN_LOCO_INVEST)
  USING INDEX PK_IUF_T_CONTROLLO_IN_LOCO_I
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DANNO_ATM ADD (
  CONSTRAINT PK_IUF_T_DANNO_ATM
  PRIMARY KEY
  (ID_DANNO_ATM)
  USING INDEX PK_IUF_T_DANNO_ATM
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_T_DANNO_ATM
  UNIQUE (ID_PROCEDIMENTO_OGGETTO, PROGRESSIVO)
  USING INDEX AK1_IUF_T_DANNO_ATM
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DANNO_FAUNA ADD (
  CONSTRAINT PK_IUF_T_DANNO_FAUNA
  PRIMARY KEY
  (ID_DANNO_FAUNA)
  USING INDEX PK_IUF_T_DANNO_FAUNA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATI_BILANCIO ADD (
  CONSTRAINT CK_FLAG_112
  CHECK (FLAG_RITEN_ACCONTO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_TIPO_DOMANDA_01
  CHECK (TIPO_DOMANDA IN ('N','R'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_DATI_BILANCIO
  PRIMARY KEY
  (ID_DATI_BILANCIO)
  USING INDEX PK_IUF_T_DATI_BILANCIO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATI_COMUNI_ELEM_QUADR ADD (
  CONSTRAINT PK_IUF_T_DATI_COMUNI_ELEM_QU
  PRIMARY KEY
  (ID_DATI_COMUNI_ELEM_QUADRO)
  USING INDEX PK_IUF_T_DATI_COMUNI_ELEM_QU
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATI_DANNO_FAUNA ADD (
  CONSTRAINT CK_FLAG_46
  CHECK (FLAG_URGENZA_PERIZIA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_DATI_DANNO_FAUNA
  PRIMARY KEY
  (ID_DATI_DANNO_FAUNA)
  USING INDEX PK_IUF_T_DATI_DANNO_FAUNA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATI_PROCEDIMENTO ADD (
  CONSTRAINT PK_IUF_T_DATI_PROCEDIMENTO
  PRIMARY KEY
  (ID_DATI_PROCEDIMENTO)
  USING INDEX PK_IUF_T_DATI_PROCEDIMENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATI_PROCEDIMENTO_PUNT ADD (
  CONSTRAINT PK_IUF_T_DATI_PROCEDIMENTO_P
  PRIMARY KEY
  (ID_DATI_PROCEDIMENTO_PUNTI)
  USING INDEX PK_IUF_T_DATI_PROCEDIMENTO_P
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATO_ELEMENTO_QUADRO ADD (
  CONSTRAINT PK_IUF_T_DATO_ELEMENTO_QUADR
  PRIMARY KEY
  (ID_DATO_ELEMENTO_QUADRO)
  USING INDEX PK_IUF_T_DATO_ELEMENTO_QUADR
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DOCUMENTI_RICHIESTI ADD (
  CONSTRAINT PK_IUF_T_DOCUMENTI_RICHIESTI
  PRIMARY KEY
  (ID_DOCUMENTI_RICHIESTI)
  USING INDEX PK_IUF_T_DOCUMENTI_RICHIESTI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DOCUMENTO_SPESA ADD (
  CONSTRAINT PK_IUF_T_DOCUMENTO_SPESA
  PRIMARY KEY
  (ID_DOCUMENTO_SPESA)
  USING INDEX PK_IUF_T_DOCUMENTO_SPESA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DOCUMENTO_SPESA_FILE ADD (
  CONSTRAINT PK_IUF_T_DOCUMENTO_SPESA_FIL
  PRIMARY KEY
  (ID_DOCUMENTO_SPESA_FILE)
  USING INDEX PK_IUF_T_DOCUMENTO_SPESA_FIL
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ECONOMIA ADD (
  CONSTRAINT PK_IUF_T_ECONOMIA
  PRIMARY KEY
  (ID_ECONOMIA)
  USING INDEX PK_IUF_T_ECONOMIA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ELAB_MASSIVA ADD (
  CONSTRAINT PK_IUF_T_ELAB_MASSIVA
  PRIMARY KEY
  (ID_ELAB_MASSIVA)
  USING INDEX PK_IUF_T_ELAB_MASSIVA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESECUZIONE_CONTROLLI ADD (
  CONSTRAINT CK_FLAG_09
  CHECK (FLAG_ELABORAZIONE_IN_CORSO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_ESECUZIONE_CONTROLL
  PRIMARY KEY
  (ID_ESECUZIONE_CONTROLLI)
  USING INDEX PK_IUF_T_ESECUZIONE_CONTROLL
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_T_ESECUZIONE_CONTROL
  UNIQUE (ID_PROCEDIMENTO_OGGETTO, ID_FONTE_CONTROLLO)
  USING INDEX AK1_IUF_T_ESECUZIONE_CONTROL
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESITO_CONTROLLI_AMM ADD (
  CONSTRAINT PK_IUF_T_ESITO_CONTROLLI_AMM
  PRIMARY KEY
  (ID_ESITO_CONTROLLI_AMM)
  USING INDEX PK_IUF_T_ESITO_CONTROLLI_AMM
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESITO_FINALE ADD (
  CONSTRAINT PK_IUF_T_ESITO_FINALE
  PRIMARY KEY
  (ID_ESITO_FINALE)
  USING INDEX PK_IUF_T_ESITO_FINALE
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_T_ESITO_FINALE
  UNIQUE (ID_PROCEDIMENTO_OGGETTO)
  USING INDEX AK1_IUF_T_ESITO_FINALE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESITO_OPERAZIONE ADD (
  CONSTRAINT PK_IUF_T_ESITO_OPERAZIONE
  PRIMARY KEY
  (ID_ESITO_OPERAZIONE)
  USING INDEX PK_IUF_T_ESITO_OPERAZIONE
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_T_ESITO_OPERAZIONE
  UNIQUE (ID_ESITO_FINALE, ID_LIVELLO)
  USING INDEX AK1_IUF_T_ESITO_OPERAZIONE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESITO_TECNICO ADD (
  CONSTRAINT CK_FLAG_36
  CHECK (FLAG_CONTROLLO_IN_LOCO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_ESITO_TECNICO
  PRIMARY KEY
  (ID_ESITO_TECNICO)
  USING INDEX PK_IUF_T_ESITO_TECNICO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESITO_TECNICO_ISTRUT ADD (
  CONSTRAINT PK_IUF_T_ESITO_TECNICO_ISTRU
  PRIMARY KEY
  (ID_ESITO_TECNICO)
  USING INDEX PK_IUF_T_ESITO_TECNICO_ISTRU
  ENABLE VALIDATE);

ALTER TABLE IUF_T_FILE_LISTA_LIQUIDAZION ADD (
  CONSTRAINT PK_IUF_T_FILE_LISTA_LIQUIDAZ
  PRIMARY KEY
  (ID_FILE_LISTA_LIQUIDAZIONE)
  USING INDEX PK_IUF_T_FILE_LISTA_LIQUIDAZ
  ENABLE VALIDATE);

ALTER TABLE IUF_T_FINE_LAVORI ADD (
  CONSTRAINT PK_IUF_T_FINE_LAVORI
  PRIMARY KEY
  (ID_FINE_LAVORI)
  USING INDEX PK_IUF_T_FINE_LAVORI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_IMPORTI_LIQUIDATI ADD (
  CONSTRAINT PK_IUF_T_IMPORTI_LIQUIDATI
  PRIMARY KEY
  (ID_IMPORTI_LIQUIDATI)
  USING INDEX PK_IUF_T_IMPORTI_LIQUIDATI
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_T_IMPORTI_LIQUIDATI
  UNIQUE (ID_PROCEDIMENTO_OGGETTO, ID_LIVELLO, RAGGRUPPAMENTO)
  USING INDEX AK1_IUF_T_IMPORTI_LIQUIDATI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_INFO_CINGHIALI ADD (
  CONSTRAINT PK_IUF_T_INFO_CINGHIALI
  PRIMARY KEY
  (ID_INFO_CINGHIALI)
  USING INDEX PK_IUF_T_INFO_CINGHIALI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_INFO_EXPOST ADD (
  CONSTRAINT PK_IUF_T_INFO_EXPOST
  PRIMARY KEY
  (ID_INFO_EXPOST)
  USING INDEX PK_IUF_T_INFO_EXPOST
  ENABLE VALIDATE);

ALTER TABLE IUF_T_INTERVENTO ADD (
  CONSTRAINT CK_FLAG_60
  CHECK (FLAG_INTERVENTO_COMPLETATO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_INTERVENTO
  PRIMARY KEY
  (ID_INTERVENTO)
  USING INDEX PK_IUF_T_INTERVENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ITER_PROCEDIMENTO_GRUP ADD (
  CONSTRAINT PK_IUF_T_ITER_PROCEDIMENTO_G
  PRIMARY KEY
  (ID_ITER_PROCEDIMENTO_GRUPPO)
  USING INDEX PK_IUF_T_ITER_PROCEDIMENTO_G
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ITER_PROCEDIMENTO_OGGE ADD (
  CONSTRAINT PK_IUF_T_ITER_PROCEDIMENTO_O
  PRIMARY KEY
  (ID_ITER_PROCEDIMENTO_OGGETT)
  USING INDEX PK_IUF_T_ITER_PROCEDIMENTO_O
  ENABLE VALIDATE);

ALTER TABLE IUF_T_NOTIFICA ADD (
  CONSTRAINT PK_IUF_T_NOTIFICA
  PRIMARY KEY
  (ID_NOTIFICA)
  USING INDEX PK_IUF_T_NOTIFICA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_OGUR ADD (
  CONSTRAINT PK_IUF_T_OGUR
  PRIMARY KEY
  (ID_OGUR)
  USING INDEX PK_IUF_T_OGUR
  ENABLE VALIDATE);

ALTER TABLE IUF_T_OGUR_DISTRETTO ADD (
  CONSTRAINT PK_IUF_T_OGUR_DISTRETTO
  PRIMARY KEY
  (ID_DISTRETTO)
  USING INDEX PK_IUF_T_OGUR_DISTRETTO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_OGUR_IPOTESI_PRELIEVO ADD (
  CONSTRAINT PK_IUF_T_OGUR_IPOTESI_PRELIE
  PRIMARY KEY
  (ID_IPOTESI_PRELIEVO)
  USING INDEX PK_IUF_T_OGUR_IPOTESI_PRELIE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PARTECIPANTE ADD (
  CONSTRAINT CK_FLAG_89
  CHECK (FLAG_CAPOFILA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_PARTECIPANTE
  PRIMARY KEY
  (ID_PARTECIPANTE)
  USING INDEX PK_IUF_T_PARTECIPANTE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PARTICELLA_UTILIZZO ADD (
  CONSTRAINT PK_IUF_T_PARTICELLA_UTILIZZO
  PRIMARY KEY
  (ID_PARTICELLA_UTILIZZO)
  USING INDEX PK_IUF_T_PARTICELLA_UTILIZZO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PARTICELLE_FAUNA ADD (
  CONSTRAINT CK_FLAG_66
  CHECK (FLAG_UTILIZZO_SEC IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_PARTICELLE_FAUNA
  PRIMARY KEY
  (ID_PARTICELLE_FAUNA)
  USING INDEX PK_IUF_T_PARTICELLE_FAUNA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PIANO_FINANZIARIO_LEAD ADD (
  CONSTRAINT PK_IUF_T_PIANO_FINANZIARIO_L
  PRIMARY KEY
  (ID_PIANO_FINANZIARIO_LEADER)
  USING INDEX PK_IUF_T_PIANO_FINANZIARIO_L
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PIANO_OGUR ADD (
  CONSTRAINT PK_IUF_T_PIANO_OGUR
  PRIMARY KEY
  (ID_PIANO_OGUR)
  USING INDEX PK_IUF_T_PIANO_OGUR
  ENABLE VALIDATE);

ALTER TABLE IUF_T_POSIZIONE_GRADUATORIA ADD (
  CONSTRAINT CK_FLAG_41
  CHECK (FLAG_ISTRUTTORIA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_POSIZIONE_GRADUATOR
  PRIMARY KEY
  (ID_POSIZIONE_GRADUATORIA)
  USING INDEX PK_IUF_T_POSIZIONE_GRADUATOR
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRATICHE_CONCESSIONE ADD (
  CONSTRAINT CK_FLAG_X_04
  CHECK (FLAG_IMPORTO_CONCESSO IN ('S','N','X'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_PRATICHE_CONCESSION
  PRIMARY KEY
  (ID_PRATICHE_CONCESSIONE)
  USING INDEX PK_IUF_T_PRATICHE_CONCESSION
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PREMIO_ALLEVAM ADD (
  CONSTRAINT PK_IUF_T_PREMIO_ALLEVAM
  PRIMARY KEY
  (ID_PREMIO_ALLEVAM)
  USING INDEX PK_IUF_T_PREMIO_ALLEVAM
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PREMIO_COLTURE ADD (
  CONSTRAINT PK_IUF_T_PREMIO_COLTURE
  PRIMARY KEY
  (ID_PREMIO_COLTURE)
  USING INDEX PK_IUF_T_PREMIO_COLTURE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PREMIO_COMPLESSIVO ADD (
  CONSTRAINT PK_IUF_T_PREMIO_COMPLESSIVO
  PRIMARY KEY
  (ID_PREMIO_COMPLESSIVO)
  USING INDEX PK_IUF_T_PREMIO_COMPLESSIVO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRESTITI_AGRARI ADD (
  CONSTRAINT PK_IUF_T_PRESTITI_AGRARI
  PRIMARY KEY
  (ID_PRESTITI_AGRARI)
  USING INDEX PK_IUF_T_PRESTITI_AGRARI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROC_DOMANDA_PREC ADD (
  CONSTRAINT CK_FLAG_107
  CHECK (FLAG_ELABORATA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_PROC_DOMANDA_PREC
  PRIMARY KEY
  (ID_PROC_DOMANDA_PREC)
  USING INDEX PK_IUF_T_PROC_DOMANDA_PREC
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIM_AMMINISTRAZIO ADD (
  CONSTRAINT PK_IUF_T_PROCEDIM_AMMINISTRA
  PRIMARY KEY
  (ID_PROCEDIM_AMMINISTRAZIONE)
  USING INDEX PK_IUF_T_PROCEDIM_AMMINISTRA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_ESTRATTO ADD (
  CONSTRAINT PK_IUF_T_PROCEDIMENTO_ESTRAT
  PRIMARY KEY
  (ID_PROCEDIMENTO_ESTRATTO)
  USING INDEX PK_IUF_T_PROCEDIMENTO_ESTRAT
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_ESTR_EXPO ADD (
  CONSTRAINT PK_IUF_T_PROCEDIMENTO_ESTR_E
  PRIMARY KEY
  (ID_PROCEDIMENTO_ESTR_EXPOST)
  USING INDEX PK_IUF_T_PROCEDIMENTO_ESTR_E
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRODOTTO_TRASFORMATO ADD (
  CONSTRAINT PK_IUF_T_PRODOTTO_TRASFORMAT
  PRIMARY KEY
  (ID_PRODOTTO_TRASFORMATO)
  USING INDEX PK_IUF_T_PRODOTTO_TRASFORMAT
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRODUZIONE_AZIENDA ADD (
  CONSTRAINT CK_FLAG_111
  CHECK (FLAG_BIO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_PRODUZIONE_AZIENDA
  PRIMARY KEY
  (ID_PRODUZIONE_AZIENDA)
  USING INDEX PK_IUF_T_PRODUZIONE_AZIENDA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRODUZIONE_VENDIBILE ADD (
  CONSTRAINT PK_IUF_T_PRODUZIONE_VENDIBIL
  PRIMARY KEY
  (ID_PRODUZIONE_VENDIBILE)
  USING INDEX PK_IUF_T_PRODUZIONE_VENDIBIL
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_T_PRODUZIONE_VENDIBI
  UNIQUE (ID_PRODUZIONE_ZOOTECNICA, ID_PRODUZIONE)
  USING INDEX AK1_IUF_T_PRODUZIONE_VENDIBI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PUBBLICA_ALLEVAMENTO ADD (
  CONSTRAINT CK_FLAG_93
  CHECK (FLAG_PUBBLICA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_PUBBLICA_ALLEVAMENT
  PRIMARY KEY
  (ID_PUBBLICA_ALLEVAMENTO)
  USING INDEX PK_IUF_T_PUBBLICA_ALLEVAMENT
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PUBBLICA_PARTICELLA ADD (
  CONSTRAINT CK_FLAG_83
  CHECK (FLAG_PUBBLICA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_PUBBLICA_PARTICELLA
  PRIMARY KEY
  (ID_PUBBLICA_PARTICELLA)
  USING INDEX PK_IUF_T_PUBBLICA_PARTICELLA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PUNTEGGIO_CALCOLATO ADD (
  CONSTRAINT PK_IUF_T_PUNTEGGIO_CALCOLATO
  PRIMARY KEY
  (ID_PUNTEGGIO_CALCOLATO)
  USING INDEX PK_IUF_T_PUNTEGGIO_CALCOLATO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PUNTEGGIO_ISTRUTTORIA ADD (
  CONSTRAINT PK_IUF_T_PUNTEGGIO_ISTRUTTOR
  PRIMARY KEY
  (ID_PUNTEGGIO_ISTRUTTORIA)
  USING INDEX PK_IUF_T_PUNTEGGIO_ISTRUTTOR
  ENABLE VALIDATE);

ALTER TABLE IUF_T_RENDICONTAZIONE_SPESE ADD (
  CONSTRAINT CK_FLAG_55
  CHECK (FLAG_INTERVENTO_COMPLETATO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_RENDICONTAZIONE_SPE
  PRIMARY KEY
  (ID_RENDICONTAZIONE_SPESE)
  USING INDEX PK_IUF_T_RENDICONTAZIONE_SPE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_RICEVUTA_PAGAMENTO ADD (
  CONSTRAINT PK_IUF_T_RICEVUTA_PAGAMENTO
  PRIMARY KEY
  (ID_RICEVUTA_PAGAMENTO)
  USING INDEX PK_IUF_T_RICEVUTA_PAGAMENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_RIEPILOGO_DANNO_FAUNA ADD (
  CONSTRAINT PK_IUF_T_RIEPILOGO_DANNO_FAU
  PRIMARY KEY
  (ID_RIEPILOGO_DANNO_FAUNA)
  USING INDEX PK_IUF_T_RIEPILOGO_DANNO_FAU
  ENABLE VALIDATE);

ALTER TABLE IUF_W_DETT_INTERV_PROC_OGG ADD (
  CONSTRAINT CK_FLAG_TIPO_OPERAZIONE_01
  CHECK (FLAG_TIPO_OPERAZIONE IN ('I','D','U','E'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_19
  CHECK (FLAG_CANALE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_22
  CHECK (FLAG_OPERA_PRESA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_24
  CHECK (FLAG_CONDOTTA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_39
  CHECK (FLAG_ASSOCIATO_ALTRA_MISURA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_W_DETT_INTERV_PROC_OG
  PRIMARY KEY
  (ID_DETT_INTERV_PROC_OGG)
  USING INDEX PK_IUF_W_DETT_INTERV_PROC_OG
  ENABLE VALIDATE);

ALTER TABLE IUF_W_FILE_ALL_INTE_PROC_OGG ADD (
  CONSTRAINT PK_IUF_W_FILE_ALL_INT_PROC_O
  PRIMARY KEY
  (ID_DETT_INTERV_PROC_OGG, ID_FILE_ALLEGATI_INTERVENTO)
  USING INDEX PK_IUF_W_FILE_ALL_INT_PROC_O
  ENABLE VALIDATE);

ALTER TABLE IUF_W_LOCAL_INTERV_PROC_OGG ADD (
  CONSTRAINT PK_IUF_W_LOCAL_INTERV_PROC_O
  PRIMARY KEY
  (ID_LOCAL_INTERV_PROC_OGG)
  USING INDEX PK_IUF_W_LOCAL_INTERV_PROC_O
  ENABLE VALIDATE);

ALTER TABLE IUF_D_DETTAGLIO_INFO ADD (
  CONSTRAINT CK_FLAG_08
  CHECK (FLAG_OBBLIGATORIO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_GESTIONE_FILE_01
  CHECK (FLAG_GESTIONE_FILE IN ('N','F','O'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_D_DETTAGLIO_INFO
  PRIMARY KEY
  (ID_DETTAGLIO_INFO)
  USING INDEX PK_IUF_D_DETTAGLIO_INFO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ANNI_EXPOST ADD (
  CONSTRAINT PK_IUF_R_ANNI_EXPOST
  PRIMARY KEY
  (ID_INFO_EXPOST, ID_ANNO_EXPOST)
  USING INDEX PK_IUF_R_ANNI_EXPOST
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ANTICIPO_LIVELLO ADD (
  CONSTRAINT PK_IUF_R_ANTICIPO_LIVELLO
  PRIMARY KEY
  (ID_ANTICIPO, ID_LIVELLO)
  USING INDEX PK_IUF_R_ANTICIPO_LIVELLO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ANTICIPO_PROC_OGG ADD (
  CONSTRAINT PK_IUF_R_ANTICIPO_PROC_OGG
  PRIMARY KEY
  (ID_ANTICIPO, ID_PROCEDIMENTO_OGGETTO)
  USING INDEX PK_IUF_R_ANTICIPO_PROC_OGG
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DANNO_ATM_INTERVENTO ADD (
  CONSTRAINT PK_IUF_R_DANNO_ATM_INTERVENT
  PRIMARY KEY
  (ID_INTERVENTO, ID_PROCEDIMENTO_OGGETTO, PROGRESSIVO)
  USING INDEX PK_IUF_R_DANNO_ATM_INTERVENT
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DETT_INTE_PROC_OGG_MIS ADD (
  CONSTRAINT PK_IUF_R_DETT_INT_PROC_OGG_M
  PRIMARY KEY
  (ID_DETT_INTERV_PROC_OGG, ID_MISURAZIONE_INTERVENTO)
  USING INDEX PK_IUF_R_DETT_INT_PROC_OGG_M
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DOC_SPESA_INT_RICEV_PA ADD (
  CONSTRAINT PK_IUF_R_DOC_SPESA_INT_RICEV
  PRIMARY KEY
  (ID_INTERVENTO, ID_RICEVUTA_PAGAMENTO)
  USING INDEX PK_IUF_R_DOC_SPESA_INT_RICEV
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DOC_SPESA_PROC_OGG ADD (
  CONSTRAINT PK_IUF_R_DOC_SPESA_PROC_OGG
  PRIMARY KEY
  (ID_DOC_SPESA_PROC_OGG)
  USING INDEX PK_IUF_R_DOC_SPESA_PROC_OGG
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DOCUMENTO_SPESA_INTERV ADD (
  CONSTRAINT PK_IUF_R_DOCUMENTO_SPESA_INT
  PRIMARY KEY
  (ID_DOCUMENTO_SPESA_INTERVEN)
  USING INDEX PK_IUF_R_DOCUMENTO_SPESA_INT
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LISTA_LIQUIDAZ_IMP_LIQ ADD (
  CONSTRAINT CK_ESITO_LIQUIDAZIONE_01
  CHECK (FLAG_ESITO_LIQUIDAZIONE IN ('S','N','R'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_R_LISTA_LIQUIDAZ_IMP_
  PRIMARY KEY
  (ID_LISTA_LIQUIDAZ_IMP_LIQ)
  USING INDEX PK_IUF_R_LISTA_LIQUIDAZ_IMP_
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_R_LISTA_LIQUIDAZ_IMP
  UNIQUE (ID_LISTA_LIQUIDAZIONE, ID_IMPORTI_LIQUIDATI)
  USING INDEX AK1_IUF_R_LISTA_LIQUIDAZ_IMP
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_FOCUS_AREA_LEADER ADD (
  CONSTRAINT PK_IUF_R_LIV_FOCUS_AREA_LEAD
  PRIMARY KEY
  (ID_LIV_FOCUS_AREA_LEADER)
  USING INDEX PK_IUF_R_LIV_FOCUS_AREA_LEAD
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PARTICELLA_DANNEGGIATA ADD (
  CONSTRAINT PK_IUF_R_PARTICELLA_DANNEGGI
  PRIMARY KEY
  (ID_DANNO_ATM, EXT_ID_UTILIZZO_DICHIARATO)
  USING INDEX PK_IUF_R_PARTICELLA_DANNEGGI
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROC_ASSICURAZ_COLTURE ADD (
  CONSTRAINT PK_IUF_R_PROC_ASSICURAZ_COLT
  PRIMARY KEY
  (ID_PROCEDIMENTO_ASSICURAZ_COLT)
  USING INDEX PK_IUF_R_PROC_ASSICURAZ_COLT
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMEN_DANNO_FAUNA ADD (
  CONSTRAINT PK_IUF_R_PROCEDIMEN_DANNO_FA
  PRIMARY KEY
  (ID_PROCEDIMEN_DANNO_FAUNA)
  USING INDEX PK_IUF_R_PROCEDIMEN_DANNO_FA
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMENTO_DANNO ADD (
  CONSTRAINT PK_IUF_R_PROCEDIMENTO_DANNO
  PRIMARY KEY
  (ID_PROCEDIMENTO_DANNO)
  USING INDEX PK_IUF_R_PROCEDIMENTO_DANNO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROC_PRESTITI_AGRARI ADD (
  CONSTRAINT PK_IUF_R_PROC_PRESTITI_AGRAR
  PRIMARY KEY
  (ID_PROC_PRESTITI_AGRARI)
  USING INDEX PK_IUF_R_PROC_PRESTITI_AGRAR
  ENABLE VALIDATE);

ALTER TABLE IUF_R_RISOR_LIV_BAND_IMP_LIQ ADD (
  CONSTRAINT PK_IUF_R_RI_LIV_BAND_IMP_LIQ
  PRIMARY KEY
  (ID_RISORSE_LIVELLO_BANDO, ID_IMPORTI_LIQUIDATI)
  USING INDEX PK_IUF_R_RI_LIV_BAND_IMP_LIQ
  ENABLE VALIDATE);

ALTER TABLE IUF_R_TIPO_DOCUMENTI_RICHIES ADD (
  CONSTRAINT PK_IUF_R_TIPO_DOCUMENTI_RICH
  PRIMARY KEY
  (ID_DOCUMENTI_RICHIESTI, ID_TIPO_DOC_RICHIESTI)
  USING INDEX PK_IUF_R_TIPO_DOCUMENTI_RICH
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ACCERTAMENTO_SPESE ADD (
  CONSTRAINT CK_FLAG_56
  CHECK (FLAG_INTERVENTO_COMPLETATO IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_ACCERTAMENTO_SPESE
  PRIMARY KEY
  (ID_ACCERTAMENTO_SPESE)
  USING INDEX PK_IUF_T_ACCERTAMENTO_SPESE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ALLEVAMENTO ADD (
  CONSTRAINT PK_IUF_T_ALLEVAMENTO
  PRIMARY KEY
  (ID_ALLEVAMENTO)
  USING INDEX PK_IUF_T_ALLEVAMENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ATTIVITA ADD (
  CONSTRAINT PK_IUF_T_ATTIVITA
  PRIMARY KEY
  (ID_ATTIVITA)
  USING INDEX PK_IUF_T_ATTIVITA
  ENABLE VALIDATE);

ALTER TABLE IUF_T_AZIENDA_BIO ADD (
  CONSTRAINT PK_IUF_T_AZIENDA_BIO
  PRIMARY KEY
  (ID_AZIENDA_BIO)
  USING INDEX PK_IUF_T_AZIENDA_BIO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONTATTI ADD (
  CONSTRAINT PK_IUF_T_CONTATTI
  PRIMARY KEY
  (ID_CONTATTI)
  USING INDEX PK_IUF_T_CONTATTI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATE_CENS_CINGHIALI ADD (
  CONSTRAINT PK_IUF_T_DATE_CENS_CINGHIALI
  PRIMARY KEY
  (ID_DATE_CENS_CINGHIALI)
  USING INDEX PK_IUF_T_DATE_CENS_CINGHIALI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DETTAGLIO_INTERVENTO ADD (
  CONSTRAINT CK_FLAG_30
  CHECK (FLAG_CANALE IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_34
  CHECK (FLAG_OPERA_PRESA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_38
  CHECK (FLAG_ASSOCIATO_ALTRA_MISURA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_FLAG_45
  CHECK (FLAG_CONDOTTA IN ('S','N'))
  ENABLE VALIDATE,
  CONSTRAINT CK_TIPO_OPERAZIONE_02
  CHECK (FLAG_TIPO_OPERAZIONE IN ('I','D','U','E'))
  ENABLE VALIDATE,
  CONSTRAINT PK_IUF_T_DETTAGLIO_INTERVENT
  PRIMARY KEY
  (ID_DETTAGLIO_INTERVENTO)
  USING INDEX PK_IUF_T_DETTAGLIO_INTERVENT
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DETT_DOCUMENTO_SPESA ADD (
  CONSTRAINT PK_IUF_T_DETT_DOCUMENTO_SPES
  PRIMARY KEY
  (ID_DETT_DOCUMENTO_SPESA)
  USING INDEX PK_IUF_T_DETT_DOCUMENTO_SPES
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DETT_RICEVUTA_PAGAMENT ADD (
  CONSTRAINT PK_IUF_T_DETT_RICEVUTA_PAGAM
  PRIMARY KEY
  (ID_DETT_RICEVUTA_PAGAMENTO)
  USING INDEX PK_IUF_T_DETT_RICEVUTA_PAGAM
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ITER_PIANO_FINANZ_LEAD ADD (
  CONSTRAINT PK_IUF_T_ITER_PIANO_FINANZ_L
  PRIMARY KEY
  (ID_ITER_PIANO_FINANZ_LEADER)
  USING INDEX PK_IUF_T_ITER_PIANO_FINANZ_L
  ENABLE VALIDATE);

ALTER TABLE IUF_T_LOCALIZZAZIONE_INTERV ADD (
  CONSTRAINT PK_IUF_T_LOCALIZZAZIONE_INTE
  PRIMARY KEY
  (ID_LOCALIZZAZIONE_INTERV)
  USING INDEX PK_IUF_T_LOCALIZZAZIONE_INTE
  ENABLE VALIDATE);

ALTER TABLE IUF_T_OGUR_ANNI_CENSITI ADD (
  CONSTRAINT PK_IUF_T_OGUR_ANNI_CENSITI
  PRIMARY KEY
  (ID_ANNI_CENSITI)
  USING INDEX PK_IUF_T_OGUR_ANNI_CENSITI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_OGUR_CENSIMENTO ADD (
  CONSTRAINT PK_IUF_T_OGUR_CENSIMENTO
  PRIMARY KEY
  (ID_CENSIMENTO)
  USING INDEX PK_IUF_T_OGUR_CENSIMENTO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PARTICELLA_GIS ADD (
  CONSTRAINT PK_IUF_T_PARTICELLA_GIS
  PRIMARY KEY
  (ID_PARTICELLA_GIS)
  USING INDEX PK_IUF_T_PARTICELLA_GIS
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PIANO_DISTRETTO_OGUR ADD (
  CONSTRAINT PK_IUF_T_PIANO_DISTRETT_OGUR
  PRIMARY KEY
  (ID_PIANO_DISTRETTO_OGUR)
  USING INDEX PK_IUF_T_PIANO_DISTRETT_OGUR
  ENABLE VALIDATE);

ALTER TABLE IUF_T_SELEZIONE_INFO ADD (
  CONSTRAINT PK_IUF_T_SELEZIONE_INFO
  PRIMARY KEY
  (ID_SELEZIONE_INFO)
  USING INDEX PK_IUF_T_SELEZIONE_INFO
  ENABLE VALIDATE,
  CONSTRAINT AK1_IUF_T_SELEZIONE_INFO
  UNIQUE (ID_PROCEDIMENTO_OGGETTO, ID_DETTAGLIO_INFO)
  USING INDEX AK1_IUF_T_SELEZIONE_INFO
  ENABLE VALIDATE);

ALTER TABLE IUF_T_VALORI_INSERITI ADD (
  CONSTRAINT PK_IUF_T_VALORI_INSERITI
  PRIMARY KEY
  (ID_VALORI_INSERITI)
  USING INDEX PK_IUF_T_VALORI_INSERITI
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ATTIVITA_PARTECIPANTE ADD (
  CONSTRAINT PK_IUF_R_ATTIVITA_PARTECIPAN
  PRIMARY KEY
  (ID_ATTIVITA_PARTECIPANTE)
  USING INDEX PK_IUF_R_ATTIVITA_PARTECIPAN
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ATTIV_PARTECIP_INTERV ADD (
  CONSTRAINT PK_IUF_R_ATTIV_PARTECIP_INTE
  PRIMARY KEY
  (ID_ATTIVITA_PARTECIPANTE, ID_INTERVENTO)
  USING INDEX PK_IUF_R_ATTIV_PARTECIP_INTE
  ENABLE VALIDATE);

ALTER TABLE IUF_R_AZIENDA_BIO_ATTIVITA ADD (
  CONSTRAINT PK_IUF_R_AZIENDA_BIO_ATTIVIT
  PRIMARY KEY
  (ID_AZIENDA_BIO, EXT_ID_CATEGORIA_ATTIVITA)
  USING INDEX PK_IUF_R_AZIENDA_BIO_ATTIVIT
  ENABLE VALIDATE);

ALTER TABLE IUF_R_AZIENDA_BIO_FILIERA_PR ADD (
  CONSTRAINT PK_IUF_R_AZIENDA_BIO_FILIERA
  PRIMARY KEY
  (ID_AZIENDA_BIO, ID_FILIERA_PRODUTTIVA)
  USING INDEX PK_IUF_R_AZIENDA_BIO_FILIERA
  ENABLE VALIDATE);

ALTER TABLE IUF_R_AZIENDA_BIO_METODO_COL ADD (
  CONSTRAINT PK_IUF_R_AZIENDA_BIO_METODO
  PRIMARY KEY
  (ID_AZIENDA_BIO, ID_METODO_COLTIVAZIONE)
  USING INDEX PK_IUF_R_AZIENDA_BIO_METODO
  ENABLE VALIDATE);

ALTER TABLE IUF_R_AZIENDA_BIO_MULTIFUNZ ADD (
  CONSTRAINT PK_IUF_R_AZIENDA_BIO_MULTIFU
  PRIMARY KEY
  (ID_AZIENDA_BIO, ID_MULTIFUNZIONALITA)
  USING INDEX PK_IUF_R_AZIENDA_BIO_MULTIFU
  ENABLE VALIDATE);

ALTER TABLE IUF_R_CONTATTI_CANALE_VENDIT ADD (
  CONSTRAINT PK_IUF_R_CONTATTI_CANALE_VEN
  PRIMARY KEY
  (ID_CONTATTI, ID_CANALE_VENDITA)
  USING INDEX PK_IUF_R_CONTATTI_CANALE_VEN
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DETT_INTERV_MISURAZION ADD (
  CONSTRAINT PK_IUF_R_DETT_INTERV_MISURAZ
  PRIMARY KEY
  (ID_DETTAGLIO_INTERVENTO, ID_MISURAZIONE_INTERVENTO)
  USING INDEX PK_IUF_R_DETT_INTERV_MISURAZ
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DOC_SPESA_INT_ACC_SPES ADD (
  CONSTRAINT PK_IUF_R_DOC_SPESA_INT_ACC_S
  PRIMARY KEY
  (ID_DOC_SPESA_INT_ACC_SPESE)
  USING INDEX PK_IUF_R_DOC_SPESA_INT_ACC_S
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DOC_SPESA_INT_PROC_OGG ADD (
  CONSTRAINT PK_IUF_R_DOC_SPESA_INT_PROC_
  PRIMARY KEY
  (ID_DOC_SPESA_INT_PROC_OGG)
  USING INDEX PK_IUF_R_DOC_SPESA_INT_PROC_
  ENABLE VALIDATE);

ALTER TABLE IUF_R_FILE_ALLEGATI_DETT_INT ADD (
  CONSTRAINT PK_IUF_R_FILE_ALLEGATI_DETT_
  PRIMARY KEY
  (ID_DETTAGLIO_INTERVENTO, ID_FILE_ALLEGATI_INTERVENTO)
  USING INDEX PK_IUF_R_FILE_ALLEGATI_DETT_
  ENABLE VALIDATE);

ALTER TABLE IUF_R_IMPORTI_RIPARTITI ADD (
  CONSTRAINT PK_IUF_R_IMPORTI_RIPARTITI
  PRIMARY KEY
  (ID_IMPORTI_RIPARTITI)
  USING INDEX PK_IUF_R_IMPORTI_RIPARTITI
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CENSITO_PRELIEVO_OGUR ADD (
  CONSTRAINT PK_IUF_T_CENSITO_PRELIE_OGUR
  PRIMARY KEY
  (ID_CENSITO_PRELIEVO_OGUR)
  USING INDEX PK_IUF_T_CENSITO_PRELIE_OGUR
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATE_CENS_OGUR ADD (
  CONSTRAINT PK_IUF_T_DATE_CENS_OGUR
  PRIMARY KEY
  (ID_DATE_CENS_OGUR)
  USING INDEX PK_IUF_T_DATE_CENS_OGUR
  ENABLE VALIDATE);

ALTER TABLE IUF_T_FILE_ALLEGATI ADD (
  CONSTRAINT PK_IUF_T_FILE_ALLEGATI
  PRIMARY KEY
  (ID_FILE_ALLEGATI)
  USING INDEX PK_IUF_T_FILE_ALLEGATI
  ENABLE VALIDATE);

ALTER TABLE IUF_D_CONTROLLO_AMMINISTRATI ADD (
  CONSTRAINT FK_IUF_D_CONTROLLO_AMMINI_01 
  FOREIGN KEY (ID_CONTROLLO_AMMINISTRAT_PADRE) 
  REFERENCES IUF_D_CONTROLLO_AMMINISTRATI (ID_CONTROLLO_AMMINISTRATIVO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_EVENTO_CALAMITOSO ADD (
  CONSTRAINT FK_IUF_D_CATEGORIA_EVENTO_01 
  FOREIGN KEY (ID_CATEGORIA_EVENTO) 
  REFERENCES IUF_D_CATEGORIA_EVENTO (ID_CATEGORIA_EVENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ISTITUTO_NOMINATIVO ADD (
  CONSTRAINT FK_IUF_D_ISTIT_DANNI_FAUN_04 
  FOREIGN KEY (ID_ISTITUTO_DANNI_FAUNA) 
  REFERENCES IUF_D_ISTITUTO_DANNI_FAUNA (ID_ISTITUTO_DANNI_FAUNA)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_QUADRO_DINAMICO ADD (
  CONSTRAINT FK_IUF_D_QUADRO_DINAMICO_01 
  FOREIGN KEY (ID_QUADRO_PADRE) 
  REFERENCES IUF_D_QUADRO_DINAMICO (ID_QUADRO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_QUADRO_02 
  FOREIGN KEY (ID_QUADRO) 
  REFERENCES IUF_D_QUADRO (ID_QUADRO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_STATO_STAMPA ADD (
  CONSTRAINT FK_IUF_D_ICONA_02 
  FOREIGN KEY (ID_ICONA) 
  REFERENCES IUF_D_ICONA (ID_ICONA)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_STRUTT_TESTO_VERBALE ADD (
  CONSTRAINT FK_IUF_D_ELENCO_CDU_04 
  FOREIGN KEY (ID_ELENCO_CDU) 
  REFERENCES IUF_D_ELENCO_CDU (ID_ELENCO_CDU)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_AGGREGAZIONE ADD (
  CONSTRAINT FK_IUF_D_TIPO_AGGREGAZION_01 
  FOREIGN KEY (ID_TIPO_AGGREGAZIONE_PADRE) 
  REFERENCES IUF_D_TIPO_AGGREGAZIONE (ID_TIPO_AGGREGAZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_DOC_RICHIESTI ADD (
  CONSTRAINT FK_IUF_D_SEZIONE_DOC_RICH_01 
  FOREIGN KEY (ID_SEZIONE_DOC_RICHIESTI) 
  REFERENCES IUF_D_SEZIONE_DOC_RICHIESTI (ID_SEZIONE_DOC_RICHIESTI)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_UTILIZZO_RESE ADD (
  CONSTRAINT FK_IUF_D_UTILIZZO_05 
  FOREIGN KEY (EXT_ID_UTILIZZO) 
  REFERENCES IUF_D_UTILIZZO (EXT_ID_UTILIZZO)
  ENABLE VALIDATE);

ALTER TABLE IUF_L_PROCESSO_BATCH ADD (
  CONSTRAINT FK_IUF_D_NOME_BATCH_01 
  FOREIGN KEY (ID_NOME_BATCH) 
  REFERENCES IUF_D_NOME_BATCH (ID_NOME_BATCH)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_CONTROLLI_PIANO_OGUR ADD (
  CONSTRAINT FK_IUF_D_SPECIE_OGUR_06 
  FOREIGN KEY (ID_SPECIE_OGUR) 
  REFERENCES IUF_D_SPECIE_OGUR (ID_SPECIE_OGUR)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ESITO_DECODIFICATO ADD (
  CONSTRAINT FK_IUF_D_ESITO_02 
  FOREIGN KEY (ID_ESITO) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_ESITO_06 
  FOREIGN KEY (ID_ESITO_DECODIFICATO) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_OPERAZIONE_01 
  FOREIGN KEY (ID_TIPO_OPERAZIONE) 
  REFERENCES IUF_D_TIPO_OPERAZIONE (ID_TIPO_OPERAZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ISTITUTO_TIPO_AMM ADD (
  CONSTRAINT FK_IUF_D_ISTIT_DANNI_FAUN_01 
  FOREIGN KEY (ID_ISTITUTO_DANNI_FAUNA) 
  REFERENCES IUF_D_ISTITUTO_DANNI_FAUNA (ID_ISTITUTO_DANNI_FAUNA)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LEGAME_GRUPPO_OGGETTO ADD (
  CONSTRAINT FK_IUF_D_GRUPPO_OGGETTO_01 
  FOREIGN KEY (ID_GRUPPO_OGGETTO) 
  REFERENCES IUF_D_GRUPPO_OGGETTO (ID_GRUPPO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_OGGETTO_01 
  FOREIGN KEY (ID_OGGETTO) 
  REFERENCES IUF_D_OGGETTO (ID_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_METODO_CENS_SPECIE ADD (
  CONSTRAINT FK_IUF_D_METODO_CENSIMENT_02 
  FOREIGN KEY (ID_METODO_CENSIMENTO) 
  REFERENCES IUF_D_METODO_CENSIMENTO (ID_METODO_CENSIMENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_SPECIE_OGUR_04 
  FOREIGN KEY (ID_SPECIE_OGUR) 
  REFERENCES IUF_D_SPECIE_OGUR (ID_SPECIE_OGUR)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_UNITA_MISURA_09 
  FOREIGN KEY (ID_UNITA_MISURA) 
  REFERENCES IUF_D_UNITA_MISURA (ID_UNITA_MISURA)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_OGGETTO_ICONA ADD (
  CONSTRAINT FK_IUF_D_ELENCO_CDU_02 
  FOREIGN KEY (ID_ELENCO_CDU) 
  REFERENCES IUF_D_ELENCO_CDU (ID_ELENCO_CDU)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_ICONA_01 
  FOREIGN KEY (ID_ICONA) 
  REFERENCES IUF_D_ICONA (ID_ICONA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_OGGETTO_02 
  FOREIGN KEY (ID_OGGETTO) 
  REFERENCES IUF_D_OGGETTO (ID_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_OPERAZION_TIPO_ESTR_DP ADD (
  CONSTRAINT FK_IUF_D_TIPO_ESTRAZIONE_05 
  FOREIGN KEY (ID_TIPO_ESTRAZIONE) 
  REFERENCES IUF_D_TIPO_ESTRAZIONE (ID_TIPO_ESTRAZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_QUADRO_OGGETTO ADD (
  CONSTRAINT FK_IUF_D_OGGETTO_05 
  FOREIGN KEY (ID_OGGETTO) 
  REFERENCES IUF_D_OGGETTO (ID_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_QUADRO_01 
  FOREIGN KEY (ID_QUADRO) 
  REFERENCES IUF_D_QUADRO (ID_QUADRO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_QUADRO_OGGETTO_AZIONE ADD (
  CONSTRAINT FK_IUF_D_AZIONE_01 
  FOREIGN KEY (ID_AZIONE) 
  REFERENCES IUF_D_AZIONE (ID_AZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_ELENCO_CDU_01 
  FOREIGN KEY (ID_ELENCO_CDU) 
  REFERENCES IUF_D_ELENCO_CDU (ID_ELENCO_CDU)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_QUADRO_OGGETTO_02 
  FOREIGN KEY (ID_QUADRO_OGGETTO) 
  REFERENCES IUF_R_QUADRO_OGGETTO (ID_QUADRO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_TIPO_DOC_RIC_OGGETTO ADD (
  CONSTRAINT FK_IUF_D_OGGETTO_03 
  FOREIGN KEY (ID_OGGETTO) 
  REFERENCES IUF_D_OGGETTO (ID_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_DOC_RICHIES_02 
  FOREIGN KEY (ID_TIPO_DOC_RICHIESTI) 
  REFERENCES IUF_D_TIPO_DOC_RICHIESTI (ID_TIPO_DOC_RICHIESTI)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_VISIBILITA_ATTORE ADD (
  CONSTRAINT FK_IUF_D_VISIBILITA_02 
  FOREIGN KEY (ID_VISIBILITA) 
  REFERENCES IUF_D_VISIBILITA (ID_VISIBILITA)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_IMPORTO_BUDGET_ANNUALE ADD (
  CONSTRAINT FK_IUF_T_BUDGET_01 
  FOREIGN KEY (ID_BUDGET) 
  REFERENCES IUF_T_BUDGET (ID_BUDGET)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PIANO_FINANZIARIO ADD (
  CONSTRAINT FK_IUF_D_TIPO_PIANO_FINAN_01 
  FOREIGN KEY (ID_TIPO_PIANO_FINANZIARIO) 
  REFERENCES IUF_D_TIPO_PIANO_FINANZIARIO (ID_TIPO_PIANO_FINANZIARIO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_BANDO ADD (
  CONSTRAINT FK_IUF_D_EVENTO_CALAMITOS_01 
  FOREIGN KEY (ID_EVENTO_CALAMITOSO) 
  REFERENCES IUF_D_EVENTO_CALAMITOSO (ID_EVENTO_CALAMITOSO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_PROCEDIME_AGRICO_03 
  FOREIGN KEY (ID_PROCEDIMENTO_AGRICOLO) 
  REFERENCES IUF_D_PROCEDIMENTO_AGRICOLO (ID_PROCEDIMENTO_AGRICOLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_RANGE_IDENTIFICA_01 
  FOREIGN KEY (ID_RANGE_IDENTIFICATIVO) 
  REFERENCES IUF_D_RANGE_IDENTIFICATIVO (ID_RANGE_IDENTIFICATIVO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_LIVELLO_02 
  FOREIGN KEY (ID_TIPO_LIVELLO) 
  REFERENCES IUF_D_TIPO_LIVELLO (ID_TIPO_LIVELLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_BANDO_AMM_COMPETENZA ADD (
  CONSTRAINT FK_IUF_D_BANDO_04 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_CONTROLLO ADD (
  CONSTRAINT FK_IUF_D_FONTE_CONTROLLO_01 
  FOREIGN KEY (ID_FONTE_CONTROLLO) 
  REFERENCES IUF_D_FONTE_CONTROLLO (ID_FONTE_CONTROLLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_CRITERIO ADD (
  CONSTRAINT FK_IUF_D_PRINCIPIO_SELEZI_01 
  FOREIGN KEY (ID_PRINCIPIO_SELEZIONE) 
  REFERENCES IUF_D_PRINCIPIO_SELEZIONE (ID_PRINCIPIO_SELEZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_DANNO ADD (
  CONSTRAINT FK_IUF_D_UNITA_MISURA_03 
  FOREIGN KEY (ID_UNITA_MISURA) 
  REFERENCES IUF_D_UNITA_MISURA (ID_UNITA_MISURA)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_DESCRIZIONE_INTERVENTO ADD (
  CONSTRAINT FK_IUF_D_CATEGORIA_INTERV_01 
  FOREIGN KEY (ID_CATEGORIA_INTERVENTO) 
  REFERENCES IUF_D_CATEGORIA_INTERVENTO (ID_CATEGORIA_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_DESCRIZIONE_INTE_05 
  FOREIGN KEY (ID_DESC_INTERVENTO_ASSOCIATO) 
  REFERENCES IUF_D_DESCRIZIONE_INTERVENTO (ID_DESCRIZIONE_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_FABBISOGNO_01 
  FOREIGN KEY (ID_FABBISOGNO) 
  REFERENCES IUF_D_FABBISOGNO (ID_FABBISOGNO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_FINALITA_AMBIENT_01 
  FOREIGN KEY (ID_FINALITA_AMBIENTALE) 
  REFERENCES IUF_D_FINALITA_AMBIENTALE (ID_FINALITA_AMBIENTALE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_CLASSIFICAZ_01 
  FOREIGN KEY (ID_TIPO_CLASSIFICAZIONE) 
  REFERENCES IUF_D_TIPO_CLASSIFICAZIONE (ID_TIPO_CLASSIFICAZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_LOCALIZZAZI_01 
  FOREIGN KEY (ID_TIPO_LOCALIZZAZIONE) 
  REFERENCES IUF_D_TIPO_LOCALIZZAZIONE (ID_TIPO_LOCALIZZAZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ELEMENTO_QUADRO ADD (
  CONSTRAINT FK_IUF_D_TIPO_DATO_01 
  FOREIGN KEY (ID_TIPO_DATO) 
  REFERENCES IUF_D_TIPO_DATO (ID_TIPO_DATO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_QUADRO_DINAMICO_02 
  FOREIGN KEY (ID_QUADRO) 
  REFERENCES IUF_D_QUADRO_DINAMICO (ID_QUADRO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ELENCO_QUERY ADD (
  CONSTRAINT FK_IUF_D_TIPO_VISUALIZZAZ_01 
  FOREIGN KEY (ID_TIPO_VISUALIZZAZIONE) 
  REFERENCES IUF_D_TIPO_VISUALIZZAZIONE (ID_TIPO_VISUALIZZAZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_FOCUS_AREA ADD (
  CONSTRAINT FK_IUF_D_PRIORITA_01 
  FOREIGN KEY (ID_PRIORITA) 
  REFERENCES IUF_D_PRIORITA (ID_PRIORITA)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_GG_LAVORATE ADD (
  CONSTRAINT FK_IUF_D_UTILIZZO_02 
  FOREIGN KEY (EXT_ID_UTILIZZO) 
  REFERENCES IUF_D_UTILIZZO (EXT_ID_UTILIZZO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_LEGAME_INFO ADD (
  CONSTRAINT FK_IUF_D_VINCOLO_INFO_01 
  FOREIGN KEY (ID_VINCOLO_DICHIARAZIONE) 
  REFERENCES IUF_D_VINCOLO_INFO (ID_VINCOLO_DICHIARAZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_LIVELLO ADD (
  CONSTRAINT FK_IUF_D_EDIZIONE_IUF_01 
  FOREIGN KEY (ID_EDIZIONE_PSR) 
  REFERENCES IUF_D_EDIZIONE_TRFCONF (ID_EDIZIONE_PSR)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_SETTORE_01 
  FOREIGN KEY (ID_SETTORE) 
  REFERENCES IUF_D_SETTORE (ID_SETTORE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_LIVELLO_01 
  FOREIGN KEY (ID_TIPO_LIVELLO) 
  REFERENCES IUF_D_TIPO_LIVELLO (ID_TIPO_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPOLOGIA_LIVELL_01 
  FOREIGN KEY (ID_TIPOLOGIA_LIVELLO) 
  REFERENCES IUF_D_TIPOLOGIA_LIVELLO (ID_TIPOLOGIA_LIVELLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_LIV_FOCUS_AREA_PRINCIP ADD (
  CONSTRAINT FK_IUF_D_FOCUS_AREA_04 
  FOREIGN KEY (ID_FOCUS_AREA) 
  REFERENCES IUF_D_FOCUS_AREA (ID_FOCUS_AREA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LIVELLO_14 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_NUMERO_LOTTO ADD (
  CONSTRAINT FK_IUF_D_STATO_ESTRAZIONE_01 
  FOREIGN KEY (ID_STATO_ESTRAZIONE) 
  REFERENCES IUF_D_STATO_ESTRAZIONE (ID_STATO_ESTRAZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_ESTRAZIONE_02 
  FOREIGN KEY (ID_TIPO_ESTRAZIONE) 
  REFERENCES IUF_D_TIPO_ESTRAZIONE (ID_TIPO_ESTRAZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_OGUR_DA_REGIONE ADD (
  CONSTRAINT FK_IUF_D_SPECIE_OGUR_03 
  FOREIGN KEY (ID_SPECIE_OGUR) 
  REFERENCES IUF_D_SPECIE_OGUR (ID_SPECIE_OGUR)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PRODUZIONE ADD (
  CONSTRAINT FK_IUF_D_CATEGORIA_ANIMAL_01 
  FOREIGN KEY (EXT_ID_CATEGORIA_ANIMALE) 
  REFERENCES IUF_D_CATEGORIA_ANIMALE (EXT_ID_CATEGORIA_ANIMALE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_UNITA_MISURA_05 
  FOREIGN KEY (ID_UNITA_MISURA) 
  REFERENCES IUF_D_UNITA_MISURA (ID_UNITA_MISURA)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PRODUZIONE_CERTIFICATA ADD (
  CONSTRAINT FK_IUF_D_REGIME_QUALITA_01 
  FOREIGN KEY (ID_REGIME_QUALITA) 
  REFERENCES IUF_D_REGIME_QUALITA (ID_REGIME_QUALITA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_PRODUZIONE_02 
  FOREIGN KEY (ID_TIPO_PRODUZIONE) 
  REFERENCES IUF_D_TIPO_PRODUZIONE (ID_TIPO_PRODUZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PRODUZIONE_HA ADD (
  CONSTRAINT FK_IUF_D_UTILIZZO_01 
  FOREIGN KEY (EXT_ID_UTILIZZO) 
  REFERENCES IUF_D_UTILIZZO (EXT_ID_UTILIZZO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_PRODUZIONE_TRADIZIONAL ADD (
  CONSTRAINT FK_IUF_D_TIPO_PRODUZIONE_01 
  FOREIGN KEY (ID_TIPO_PRODUZIONE) 
  REFERENCES IUF_D_TIPO_PRODUZIONE (ID_TIPO_PRODUZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_SANZIONE_INVESTIMENTO ADD (
  CONSTRAINT FK_IUF_D_TIPOLOGIA_SANZIO_01 
  FOREIGN KEY (ID_TIPOLOGIA_SANZIONE) 
  REFERENCES IUF_D_TIPOLOGIA_SANZIONE (ID_TIPOLOGIA_SANZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_SCORTA ADD (
  CONSTRAINT FK_IUF_D_UNITA_MISURA_02 
  FOREIGN KEY (ID_UNITA_MISURA) 
  REFERENCES IUF_D_UNITA_MISURA (ID_UNITA_MISURA)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TIPO_DANNO_FAUNA ADD (
  CONSTRAINT FK_IUF_D_UNITA_MISURA_07 
  FOREIGN KEY (ID_UNITA_MISURA) 
  REFERENCES IUF_D_UNITA_MISURA (ID_UNITA_MISURA)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_VOCE_ELEMENTO ADD (
  CONSTRAINT FK_IUF_T_ELEMENTI_QUADRO_01 
  FOREIGN KEY (ID_ELEMENTO_QUADRO) 
  REFERENCES IUF_D_ELEMENTO_QUADRO (ID_ELEMENTO_QUADRO)
  ENABLE VALIDATE);

ALTER TABLE IUF_L_LOG_BATCH ADD (
  CONSTRAINT FK_IUF_D_ERRORE_BATCH_01 
  FOREIGN KEY (CODICE_ERRORE) 
  REFERENCES IUF_D_ERRORE_BATCH (CODICE_ERRORE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_L_PROCE_BATCH_01 
  FOREIGN KEY (ID_PROCESSO_BATCH) 
  REFERENCES IUF_L_PROCESSO_BATCH (ID_PROCESSO_BATCH)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_AGGREGAZIONE_INTERVENT ADD (
  CONSTRAINT FK_IUF_D_DESCRIZIONE_INTE_02 
  FOREIGN KEY (ID_DESCRIZIONE_INTERVENTO) 
  REFERENCES IUF_D_DESCRIZIONE_INTERVENTO (ID_DESCRIZIONE_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_AGGREGAZION_02 
  FOREIGN KEY (ID_TIPO_AGGREGAZIONE_PRIMO_LIV) 
  REFERENCES IUF_D_TIPO_AGGREGAZIONE (ID_TIPO_AGGREGAZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_AGGREGAZION_03 
  FOREIGN KEY (ID_TIPO_AGGREGAZIONE) 
  REFERENCES IUF_D_TIPO_AGGREGAZIONE (ID_TIPO_AGGREGAZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_COMUNE ADD (
  CONSTRAINT FK_IUF_D_BANDO_10 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_COMUNE_FOGLIO ADD (
  CONSTRAINT FK_IUF_R_BANDO_COMUNE_01 
  FOREIGN KEY (ID_BANDO_COMUNE) 
  REFERENCES IUF_R_BANDO_COMUNE (ID_BANDO_COMUNE)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_FILIERA ADD (
  CONSTRAINT FK_IUF_D_BANDO_13 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_MASTER ADD (
  CONSTRAINT FK_IUF_D_BANDO_06 
  FOREIGN KEY (ID_BANDO_MASTER) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_BANDO_07 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_OGGETTO ADD (
  CONSTRAINT FK_IUF_D_BANDO_01 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_LEGA_GRUPPO_OGGE_01 
  FOREIGN KEY (ID_LEGAME_GRUPPO_OGGETTO) 
  REFERENCES IUF_R_LEGAME_GRUPPO_OGGETTO (ID_LEGAME_GRUPPO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_OGGETTO_CONTROLL ADD (
  CONSTRAINT FK_IUF_D_CONTROLLO_03 
  FOREIGN KEY (ID_CONTROLLO) 
  REFERENCES IUF_D_CONTROLLO (ID_CONTROLLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_BANDO_OGGETTO_01 
  FOREIGN KEY (ID_BANDO_OGGETTO) 
  REFERENCES IUF_R_BANDO_OGGETTO (ID_BANDO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_OGGETTO_ICONA ADD (
  CONSTRAINT FK_IUF_R_BANDO_OGGETTO_05 
  FOREIGN KEY (ID_BANDO_OGGETTO) 
  REFERENCES IUF_R_BANDO_OGGETTO (ID_BANDO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_OGGETTO_ICONA_01 
  FOREIGN KEY (ID_OGGETTO_ICONA) 
  REFERENCES IUF_R_OGGETTO_ICONA (ID_OGGETTO_ICONA)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_OGGETTO_QUADRO ADD (
  CONSTRAINT FK_IUF_R_BANDO_OGGETTO_02 
  FOREIGN KEY (ID_BANDO_OGGETTO) 
  REFERENCES IUF_R_BANDO_OGGETTO (ID_BANDO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_QUADRO_OGGETTO_01 
  FOREIGN KEY (ID_QUADRO_OGGETTO) 
  REFERENCES IUF_R_QUADRO_OGGETTO (ID_QUADRO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_PREMIO_ALLEVAM ADD (
  CONSTRAINT FK_IUF_D_BANDO_19 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_PREMIO_COLTURA ADD (
  CONSTRAINT FK_IUF_D_BANDO_18 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_UTILIZZO_DANNO ADD (
  CONSTRAINT FK_IUF_D_BANDO_20 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_UTILIZZO_04 
  FOREIGN KEY (EXT_ID_UTILIZZO) 
  REFERENCES IUF_D_UTILIZZO (EXT_ID_UTILIZZO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BAN_OG_QUA_CON_AMM_LIV ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_43 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_BA_OG_QU_CON_AMM_01 
  FOREIGN KEY (ID_BANDO_OGGETTO, ID_QUADRO_OGG_CONTROLLO_AMM) 
  REFERENCES IUF_R_BAND_OG_QUAD_CONTR_AMM (ID_BANDO_OGGETTO,ID_QUADRO_OGG_CONTROLLO_AMM)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DANNO_INTERVENTO ADD (
  CONSTRAINT FK_IUF_D_DANNO_02 
  FOREIGN KEY (ID_DANNO) 
  REFERENCES IUF_D_DANNO (ID_DANNO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_DESCRIZIONE_INTE_06 
  FOREIGN KEY (ID_DESCRIZIONE_INTERVENTO) 
  REFERENCES IUF_D_DESCRIZIONE_INTERVENTO (ID_DESCRIZIONE_INTERVENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DANNO_SPECIE ADD (
  CONSTRAINT FK_IUF_D_SPECIE_FAUNA_01 
  FOREIGN KEY (ID_SPECIE_FAUNA) 
  REFERENCES IUF_D_SPECIE_FAUNA (ID_SPECIE_FAUNA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_DANNO_FAUNA_01 
  FOREIGN KEY (ID_TIPO_DANNO_FAUNA) 
  REFERENCES IUF_D_TIPO_DANNO_FAUNA (ID_TIPO_DANNO_FAUNA)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ELENCO_QUERY_BANDO ADD (
  CONSTRAINT FK_IUF_D_BANDO_09 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_ELENCO_QUERY_02 
  FOREIGN KEY (ID_ELENCO_QUERY) 
  REFERENCES IUF_D_ELENCO_QUERY (ID_ELENCO_QUERY)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_FONDO ADD (
  CONSTRAINT FK_IUF_D_BANDO_11 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_IMPORTO_02 
  FOREIGN KEY (ID_TIPO_IMPORTO) 
  REFERENCES IUF_D_TIPO_IMPORTO (ID_TIPO_IMPORTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_INFO_CATALOGO ADD (
  CONSTRAINT FK_IUF_D_GRUP_INFO_CATALO_01 
  FOREIGN KEY (ID_GRUPPO_INFO_CATALOGO) 
  REFERENCES IUF_D_GRUPPO_INFO_CATALOGO (ID_GRUPPO_INFO_CATALOGO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LIVELLO_08 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_QUADRO_OGGETTO_04 
  FOREIGN KEY (ID_QUADRO_OGGETTO) 
  REFERENCES IUF_R_QUADRO_OGGETTO (ID_QUADRO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_BANDO ADD (
  CONSTRAINT FK_IUF_D_BANDO_02 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LIVELLO_12 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_CRITERIO ADD (
  CONSTRAINT FK_IUF_D_CRITERIO_01 
  FOREIGN KEY (ID_CRITERIO) 
  REFERENCES IUF_D_CRITERIO (ID_CRITERIO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LIVELLO_23 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_FG_TIPOLOGIA ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_04 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_FOCUS_AREA ADD (
  CONSTRAINT FK_IUF_D_FOCUS_AREA_01 
  FOREIGN KEY (ID_FOCUS_AREA) 
  REFERENCES IUF_D_FOCUS_AREA (ID_FOCUS_AREA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LIVELLO_01 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PIANO_FINANZIARI_02 
  FOREIGN KEY (ID_PIANO_FINANZIARIO) 
  REFERENCES IUF_T_PIANO_FINANZIARIO (ID_PIANO_FINANZIARIO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_INTERVENTO ADD (
  CONSTRAINT FK_IUF_D_DESCRIZIONE_INTE_03 
  FOREIGN KEY (ID_DESCRIZIONE_INTERVENTO) 
  REFERENCES IUF_D_DESCRIZIONE_INTERVENTO (ID_DESCRIZIONE_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LIVELLO_13 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_PADRE ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_02 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LIVELLO_03 
  FOREIGN KEY (ID_LIVELLO_PADRE) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIVELLO_SETTORE_PROD ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_27 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_SETTORE_PRODUZIO_01 
  FOREIGN KEY (ID_SETTORE_PRODUZIONE) 
  REFERENCES IUF_D_SETTORE_PRODUZIONE (ID_SETTORE_PRODUZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_FOCUS_AREA_SECONDA ADD (
  CONSTRAINT FK_IUF_D_FOCUS_AREA_05 
  FOREIGN KEY (ID_FOCUS_AREA) 
  REFERENCES IUF_D_FOCUS_AREA (ID_FOCUS_AREA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LIV_FOCUS_AR_PRI_01 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIV_FOCUS_AREA_PRINCIP (ID_LIVELLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_PIANO_FINANZIARIO ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_09 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_PIANO_FINAN_03 
  FOREIGN KEY (ID_TIPO_PIANO_FINANZIARIO) 
  REFERENCES IUF_D_TIPO_PIANO_FINANZIARIO (ID_TIPO_PIANO_FINANZIARIO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_MISURAZIONE_INTERVENTO ADD (
  CONSTRAINT FK_IUF_D_DESCRIZIONE_INTE_04 
  FOREIGN KEY (ID_DESCRIZIONE_INTERVENTO) 
  REFERENCES IUF_D_DESCRIZIONE_INTERVENTO (ID_DESCRIZIONE_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_UNITA_MISURA_01 
  FOREIGN KEY (ID_UNITA_MISURA) 
  REFERENCES IUF_D_UNITA_MISURA (ID_UNITA_MISURA)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMENTO_AGRIC_LIV ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_05 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_PROCEDIME_AGRICO_01 
  FOREIGN KEY (ID_PROCEDIMENTO_AGRICOLO) 
  REFERENCES IUF_D_PROCEDIMENTO_AGRICOLO (ID_PROCEDIMENTO_AGRICOLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_QUADRO_OGG_CONTROL_AMM ADD (
  CONSTRAINT FK_IUF_D_CONTROLLO_AMMINI_03 
  FOREIGN KEY (ID_CONTROLLO_AMMINISTRATIVO) 
  REFERENCES IUF_D_CONTROLLO_AMMINISTRATI (ID_CONTROLLO_AMMINISTRATIVO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_QUADRO_OGGETTO_05 
  FOREIGN KEY (ID_QUADRO_OGGETTO) 
  REFERENCES IUF_R_QUADRO_OGGETTO (ID_QUADRO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_QUADRO_OGGETTO_CONTROL ADD (
  CONSTRAINT FK_IUF_D_CONTROLLO_01 
  FOREIGN KEY (ID_CONTROLLO) 
  REFERENCES IUF_D_CONTROLLO (ID_CONTROLLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_QUADRO_OGGETTO_03 
  FOREIGN KEY (ID_QUADRO_OGGETTO) 
  REFERENCES IUF_R_QUADRO_OGGETTO (ID_QUADRO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_RIPARTIZIONE_CONTRIBUT ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_28 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_IMPORTO_01 
  FOREIGN KEY (ID_TIPO_IMPORTO) 
  REFERENCES IUF_D_TIPO_IMPORTO (ID_TIPO_IMPORTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_VOCE_RIPARTIZION_01 
  FOREIGN KEY (ID_VOCE_RIPARTIZIONE) 
  REFERENCES IUF_D_VOCE_RIPARTIZIONE (ID_VOCE_RIPARTIZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_SOLUZIONE_CONTROLLO ADD (
  CONSTRAINT FK_IUF_D_CONTROLLO_05 
  FOREIGN KEY (ID_CONTROLLO) 
  REFERENCES IUF_D_CONTROLLO (ID_CONTROLLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_SOLUZIONE_01 
  FOREIGN KEY (ID_TIPO_SOLUZIONE) 
  REFERENCES IUF_D_TIPO_SOLUZIONE (ID_TIPO_SOLUZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_TIPO_DOC_RIC_BANDO_OGG ADD (
  CONSTRAINT FK_IUF_R_BANDO_OGGETTO_06 
  FOREIGN KEY (ID_BANDO_OGGETTO) 
  REFERENCES IUF_R_BANDO_OGGETTO (ID_BANDO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_TIPO_DOC_RIC_OGG_01 
  FOREIGN KEY (ID_TIPO_DOC_RIC_OGGETTO) 
  REFERENCES IUF_R_TIPO_DOC_RIC_OGGETTO (ID_TIPO_DOC_RIC_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ALLEGATI_GRADUATORIA ADD (
  CONSTRAINT FK_IUF_T_GRADUATORIA_02 
  FOREIGN KEY (ID_GRADUATORIA) 
  REFERENCES IUF_T_GRADUATORIA (ID_GRADUATORIA)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ANOMALIA_PARTICELLA ADD (
  CONSTRAINT FK_IUF_D_CONTROLLO_04 
  FOREIGN KEY (ID_CONTROLLO) 
  REFERENCES IUF_D_CONTROLLO (ID_CONTROLLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ATTIVITA_BANDO_OGGETTO ADD (
  CONSTRAINT FK_IUF_R_BANDO_OGGETTO_07 
  FOREIGN KEY (ID_BANDO_OGGETTO) 
  REFERENCES IUF_R_BANDO_OGGETTO (ID_BANDO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONCESSIONE ADD (
  CONSTRAINT FK_IUF_D_BANDO_15 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_ATTO_CONCES_01 
  FOREIGN KEY (ID_TIPO_CONCESSIONE) 
  REFERENCES IUF_D_TIPO_ATTO_CONCESSIONE (ID_TIPO_CONCESSIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESTRAZIONE_CAMPIONE ADD (
  CONSTRAINT FK_IUF_D_NUMERO_LOTTO_03 
  FOREIGN KEY (ID_NUMERO_LOTTO) 
  REFERENCES IUF_D_NUMERO_LOTTO (ID_NUMERO_LOTTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_ESTRAZIONE_01 
  FOREIGN KEY (ID_TIPO_ESTRAZIONE) 
  REFERENCES IUF_D_TIPO_ESTRAZIONE (ID_TIPO_ESTRAZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_FILE_FLUSSO_ANOM_SIGOP ADD (
  CONSTRAINT FK_IUF_T_FLUSSO_ANOM_SIGO_01 
  FOREIGN KEY (ID_FLUSSO_ANOM_SIGOP) 
  REFERENCES IUF_T_FLUSSO_ANOM_SIGOP (ID_FLUSSO_ANOM_SIGOP)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_IMPORTI_ESTRAZ_DP ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_39 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_NUMERO_LOTTO_02 
  FOREIGN KEY (ID_NUMERO_LOTTO) 
  REFERENCES IUF_D_NUMERO_LOTTO (ID_NUMERO_LOTTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_IMPORTO_DICHIARAZIONE ADD (
  CONSTRAINT FK_IUF_D_FOCUS_AREA_03 
  FOREIGN KEY (ID_FOCUS_AREA) 
  REFERENCES IUF_D_FOCUS_AREA (ID_FOCUS_AREA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LIVELLO_47 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_PRIORITA_02 
  FOREIGN KEY (ID_PRIORITA) 
  REFERENCES IUF_D_PRIORITA (ID_PRIORITA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DICHIARAZIONE_SP_01 
  FOREIGN KEY (ID_DICHIARAZIONE_SPESA) 
  REFERENCES IUF_T_DICHIARAZIONE_SPESA (ID_DICHIARAZIONE_SPESA)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ITER_CONCESSIONE ADD (
  CONSTRAINT FK_IUF_D_STATO_CONCESSION_01 
  FOREIGN KEY (ID_STATO_CONCESSIONE) 
  REFERENCES IUF_D_STATO_CONCESSIONE (ID_STATO_CONCESSIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_CONCESSIONE_01 
  FOREIGN KEY (ID_CONCESSIONE) 
  REFERENCES IUF_T_CONCESSIONE (ID_CONCESSIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ITER_PIANO_FINANZIARIO ADD (
  CONSTRAINT FK_IUF_D_STATO_PIANO_FINA_02 
  FOREIGN KEY (ID_STATO_PIANO_FINANZIARIO) 
  REFERENCES IUF_D_STATO_PIANO_FINANZIARI (ID_STATO_PIANO_FINANZIARIO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PIANO_FINANZIARI_01 
  FOREIGN KEY (ID_PIANO_FINANZIARIO) 
  REFERENCES IUF_T_PIANO_FINANZIARIO (ID_PIANO_FINANZIARIO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_LISTA_LIQUIDAZIONE ADD (
  CONSTRAINT FK_IUF_D_BANDO_12 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_IMPORTO_03 
  FOREIGN KEY (ID_TIPO_IMPORTO) 
  REFERENCES IUF_D_TIPO_IMPORTO (ID_TIPO_IMPORTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO ADD (
  CONSTRAINT FK_IUF_D_BANDO_03 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_PROCEDIME_AGRICO_02 
  FOREIGN KEY (ID_PROCEDIMENTO_AGRICOLO) 
  REFERENCES IUF_D_PROCEDIMENTO_AGRICOLO (ID_PROCEDIMENTO_AGRICOLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_SETTORE_PRODUZIO_03 
  FOREIGN KEY (ID_SETTORE_PRODUZIONE) 
  REFERENCES IUF_D_SETTORE_PRODUZIONE (ID_SETTORE_PRODUZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_STATO_OGGETTO_02 
  FOREIGN KEY (ID_STATO_OGGETTO) 
  REFERENCES IUF_D_STATO_OGGETTO (ID_STATO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_AZIENDA ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_04 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_CONTO_COR ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_05 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_GRUPPO ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_22 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_OGGETTO ADD (
  CONSTRAINT FK_IUF_D_ESITO_01 
  FOREIGN KEY (ID_ESITO) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_ESITO_11 
  FOREIGN KEY (ID_ESITO_ISTRUTTORIA) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_SETTORE_PRODUZIO_02 
  FOREIGN KEY (ID_SETTORE_PRODUZIONE) 
  REFERENCES IUF_D_SETTORE_PRODUZIONE (ID_SETTORE_PRODUZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_LEGA_GRUPPO_OGGE_02 
  FOREIGN KEY (ID_LEGAME_GRUPPO_OGGETTO) 
  REFERENCES IUF_R_LEGAME_GRUPPO_OGGETTO (ID_LEGAME_GRUPPO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_02 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIM_OGGETTO_QUADR ADD (
  CONSTRAINT FK_IUF_R_BANDO_OGGETTO_04 
  FOREIGN KEY (ID_QUADRO_OGGETTO, ID_BANDO_OGGETTO) 
  REFERENCES IUF_R_BANDO_OGGETTO_QUADRO (ID_QUADRO_OGGETTO,ID_BANDO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_10 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIM_OGGETTO_STAMP ADD (
  CONSTRAINT FK_IUF_D_STATO_STAMPA_01 
  FOREIGN KEY (ID_STATO_STAMPA) 
  REFERENCES IUF_D_STATO_STAMPA (ID_STATO_STAMPA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_BANDO_OGGET_ICON_01 
  FOREIGN KEY (ID_BANDO_OGGETTO, ID_OGGETTO_ICONA) 
  REFERENCES IUF_R_BANDO_OGGETTO_ICONA (ID_BANDO_OGGETTO,ID_OGGETTO_ICONA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_11 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROC_OGGETTO_SANZIONE ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_38 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_SANZIONE_INVESTI_01 
  FOREIGN KEY (ID_SANZIONE_INVESTIMENTO) 
  REFERENCES IUF_D_SANZIONE_INVESTIMENTO (ID_SANZIONE_INVESTIMENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_29 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRODUZIONE_ZOOTECNICA ADD (
  CONSTRAINT FK_IUF_D_CATEGORIA_ANIMAL_03 
  FOREIGN KEY (EXT_ID_CATEGORIA_ANIMALE) 
  REFERENCES IUF_D_CATEGORIA_ANIMALE (EXT_ID_CATEGORIA_ANIMALE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_37 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_REFERENTE_PROGETTO ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_40 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_REGIME_AIUTO_PREVISTO ADD (
  CONSTRAINT FK_IUF_D_BANDO_16 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LIVELLO_06 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_REGIME_AIUTO_01 
  FOREIGN KEY (ID_REGIME_AIUTO) 
  REFERENCES IUF_D_REGIME_AIUTO (ID_REGIME_AIUTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_REGIME_AIUTO_RICHIESTO ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_53 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_REGIME_AIUTO_PRE_01 
  FOREIGN KEY (ID_REGIME_AIUTO_PREVISTO) 
  REFERENCES IUF_T_REGIME_AIUTO_PREVISTO (ID_REGIME_AIUTO_PREVISTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_RISORSE_LIVELLO_BANDO ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_29 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_FONDO_01 
  FOREIGN KEY (ID_BANDO, ID_TIPO_IMPORTO) 
  REFERENCES IUF_R_FONDO (ID_BANDO,ID_TIPO_IMPORTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_SCORTA_MAGAZZINO ADD (
  CONSTRAINT FK_IUF_D_SCORTA_01 
  FOREIGN KEY (ID_SCORTA) 
  REFERENCES IUF_D_SCORTA (ID_SCORTA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_UNITA_MISURA_04 
  FOREIGN KEY (ID_UNITA_MISURA) 
  REFERENCES IUF_D_UNITA_MISURA (ID_UNITA_MISURA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_08 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_SOLUZIONE_ANOMALIA ADD (
  CONSTRAINT FK_IUF_D_CONTROLLO_06 
  FOREIGN KEY (ID_CONTROLLO) 
  REFERENCES IUF_D_CONTROLLO (ID_CONTROLLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_SOLUZIONE_02 
  FOREIGN KEY (ID_TIPO_SOLUZIONE) 
  REFERENCES IUF_D_TIPO_SOLUZIONE (ID_TIPO_SOLUZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_13 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_SOSPENSIONE_ANTICIPO ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_35 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_27 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_STORICO_LIVELLO_FA ADD (
  CONSTRAINT FK_IUF_R_LIVELLO_FOCUS_AR_01 
  FOREIGN KEY (ID_LIVELLO_FOCUS_AREA) 
  REFERENCES IUF_R_LIVELLO_FOCUS_AREA (ID_LIVELLO_FOCUS_AREA)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_SUPERFICIE_COLTURA ADD (
  CONSTRAINT FK_IUF_D_UTILIZZO_03 
  FOREIGN KEY (EXT_ID_UTILIZZO) 
  REFERENCES IUF_D_UTILIZZO (EXT_ID_UTILIZZO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_25 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_VALORI_PARAMETRI ADD (
  CONSTRAINT FK_IUF_R_BANDO_OGGET_CONT_01 
  FOREIGN KEY (ID_BANDO_OGGETTO, ID_CONTROLLO) 
  REFERENCES IUF_R_BANDO_OGGETTO_CONTROLL (ID_BANDO_OGGETTO,ID_CONTROLLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_VISITA_LUOGO ADD (
  CONSTRAINT FK_IUF_D_ESITO_04 
  FOREIGN KEY (ID_ESITO) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_QUADRO_OGGETTO_07 
  FOREIGN KEY (ID_QUADRO_OGGETTO) 
  REFERENCES IUF_R_QUADRO_OGGETTO (ID_QUADRO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_17 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_W_PROCEDIMENTO_OGG_AZIEN ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_19 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_W_PROCEDIMENTO_OGGETT_CC ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_22 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_ALLEGATI_BANDO ADD (
  CONSTRAINT FK_IUF_D_BANDO_05 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_DETTAGLIO_INFO_CATALOG ADD (
  CONSTRAINT FK_IUF_D_GRUPPO_INFO_CATA_01 
  FOREIGN KEY (ID_GRUPPO_INFO_CATALOGO) 
  REFERENCES IUF_D_GRUPPO_INFO_CATALOGO (ID_GRUPPO_INFO_CATALOGO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_VINCOLO_INFO_02 
  FOREIGN KEY (ID_LEGAME_INFO) 
  REFERENCES IUF_D_LEGAME_INFO (ID_LEGAME_INFO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_GRUPPO_INFO ADD (
  CONSTRAINT FK_IUF_R_BANDO_OGGETTO_03 
  FOREIGN KEY (ID_QUADRO_OGGETTO, ID_BANDO_OGGETTO) 
  REFERENCES IUF_R_BANDO_OGGETTO_QUADRO (ID_QUADRO_OGGETTO,ID_BANDO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_GRUPPO_TESTO_VERBALE ADD (
  CONSTRAINT FK_IUF_D_ELENCO_CDU_03 
  FOREIGN KEY (ID_ELENCO_CDU) 
  REFERENCES IUF_D_ELENCO_CDU (ID_ELENCO_CDU)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_BANDO_OGGETTO_08 
  FOREIGN KEY (ID_BANDO_OGGETTO) 
  REFERENCES IUF_R_BANDO_OGGETTO (ID_BANDO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_IMPEGNO ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_17 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_TESTO_VERBALE ADD (
  CONSTRAINT FK_IUF_D_GRUPPO_TESTO_VER_01 
  FOREIGN KEY (ID_GRUPPO_TESTO_VERBALE) 
  REFERENCES IUF_D_GRUPPO_TESTO_VERBALE (ID_GRUPPO_TESTO_VERBALE)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_BANDO_LIVELLO_CRITERIO ADD (
  CONSTRAINT FK_IUF_D_BANDO_08 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_LIVELLO_CRITERIO_01 
  FOREIGN KEY (ID_LIVELLO_CRITERIO) 
  REFERENCES IUF_R_LIVELLO_CRITERIO (ID_LIVELLO_CRITERIO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_BANDO_BENEFICIARIO ADD (
  CONSTRAINT FK_IUF_R_LIVELLO_BANDO_02 
  FOREIGN KEY (ID_LIVELLO, ID_BANDO) 
  REFERENCES IUF_R_LIVELLO_BANDO (ID_LIVELLO,ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_LIVELLO_FG_TIPOL_01 
  FOREIGN KEY (ID_LIVELLO, EXT_ID_FG_TIPOLOGIA) 
  REFERENCES IUF_R_LIVELLO_FG_TIPOLOGIA (ID_LIVELLO,EXT_ID_FG_TIPOLOGIA)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_BANDO_GRADUATORIA ADD (
  CONSTRAINT FK_IUF_R_LIVELLO_BANDO_04 
  FOREIGN KEY (ID_LIVELLO, ID_BANDO) 
  REFERENCES IUF_R_LIVELLO_BANDO (ID_LIVELLO,ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_GRADUATORIA_01 
  FOREIGN KEY (ID_GRADUATORIA) 
  REFERENCES IUF_T_GRADUATORIA (ID_GRADUATORIA)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_BANDO_INTERVENTO ADD (
  CONSTRAINT FK_IUF_R_LIVELLO_BANDO_01 
  FOREIGN KEY (ID_LIVELLO, ID_BANDO) 
  REFERENCES IUF_R_LIVELLO_BANDO (ID_LIVELLO,ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_LIVELLO_INTERVEN_02 
  FOREIGN KEY (ID_LIVELLO, ID_DESCRIZIONE_INTERVENTO) 
  REFERENCES IUF_R_LIVELLO_INTERVENTO (ID_LIVELLO,ID_DESCRIZIONE_INTERVENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_MATRICE_IMPEGNI ADD (
  CONSTRAINT FK_IUF_D_IMPEGNO_04 
  FOREIGN KEY (ID_IMPEGNO_PRINCIPALE) 
  REFERENCES IUF_D_IMPEGNO (ID_IMPEGNO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_IMPEGNO_05 
  FOREIGN KEY (ID_IMPEGNO_COMPATIBILE) 
  REFERENCES IUF_D_IMPEGNO (ID_IMPEGNO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMENTO_LIVELLO ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_24 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_12 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMENTO_OGG_LIVEL ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_46 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_38 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMENTO_SCORTA ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_06 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_SCORTA_MAGAZZINO_01 
  FOREIGN KEY (ID_SCORTA_MAGAZZINO) 
  REFERENCES IUF_T_SCORTA_MAGAZZINO (ID_SCORTA_MAGAZZINO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROC_PRODUZIONE_ZOOTEC ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_24 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PRODUZIONE_ZOOTE_02 
  FOREIGN KEY (ID_PRODUZIONE_ZOOTECNICA) 
  REFERENCES IUF_T_PRODUZIONE_ZOOTECNICA (ID_PRODUZIONE_ZOOTECNICA)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROC_SUPERFICIE_COLTUR ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_18 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_SUPERFICIE_COLTU_02 
  FOREIGN KEY (ID_SUPERFICIE_COLTURA) 
  REFERENCES IUF_T_SUPERFICIE_COLTURA (ID_SUPERFICIE_COLTURA)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_RISOR_LIV_BANDO_AMM_CO ADD (
  CONSTRAINT FK_IUF_T_RISORSE_LIVE_BAN_01 
  FOREIGN KEY (ID_RISORSE_LIVELLO_BANDO) 
  REFERENCES IUF_T_RISORSE_LIVELLO_BANDO (ID_RISORSE_LIVELLO_BANDO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ACCERTAMENTO_DANNO ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_48 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ANALISI_RISCHIO ADD (
  CONSTRAINT FK_IUF_D_BANDO_14 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_NUMERO_LOTTO_01 
  FOREIGN KEY (ID_NUMERO_LOTTO) 
  REFERENCES IUF_D_NUMERO_LOTTO (ID_NUMERO_LOTTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_ESTRAZIONE_04 
  FOREIGN KEY (ID_TIPO_ESTRAZIONE) 
  REFERENCES IUF_D_TIPO_ESTRAZIONE (ID_TIPO_ESTRAZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_28 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_17 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ANALISI_RISCHIO_IMP ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_40 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_ANALISI_RISCHIO_01 
  FOREIGN KEY (ID_ANALISI_RISCHIO) 
  REFERENCES IUF_T_ANALISI_RISCHIO (ID_ANALISI_RISCHIO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ANOMALIE_CONTROLLI ADD (
  CONSTRAINT FK_IUF_D_CONTROLLO_02 
  FOREIGN KEY (ID_CONTROLLO) 
  REFERENCES IUF_D_CONTROLLO (ID_CONTROLLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_01 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_09 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ANTICIPO ADD (
  CONSTRAINT FK_IUF_D_STATO_OGGETTO_03 
  FOREIGN KEY (ID_STATO_OGGETTO) 
  REFERENCES IUF_D_STATO_OGGETTO (ID_STATO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_13 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ASSICURAZIONI_COLTURE ADD (
  CONSTRAINT FK_IUF_D_CONSORZIO_DIFESA_01 
  FOREIGN KEY (ID_CONSORZIO_DIFESA) 
  REFERENCES IUF_D_CONSORZIO_DIFESA (ID_CONSORZIO_DIFESA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_36 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONTROLLO_COLTURA ADD (
  CONSTRAINT FK_IUF_T_SUPERFICIE_COLTU_01 
  FOREIGN KEY (ID_SUPERFICIE_COLTURA) 
  REFERENCES IUF_T_SUPERFICIE_COLTURA (ID_SUPERFICIE_COLTURA)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONTROLLO_IN_LOCO ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_34 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_23 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONTROLLO_IN_LOCO_EXPO ADD (
  CONSTRAINT FK_IUF_D_TIPOLOGIA_PREAVV_02 
  FOREIGN KEY (ID_TIPOLOGIA_PREAVVISO) 
  REFERENCES IUF_D_TIPOLOGIA_PREAVVISO (ID_TIPOLOGIA_PREAVVISO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_47 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONTROLLO_IN_LOCO_INVE ADD (
  CONSTRAINT FK_IUF_D_TIPOLOGIA_PREAVV_01 
  FOREIGN KEY (ID_TIPOLOGIA_PREAVVISO) 
  REFERENCES IUF_D_TIPOLOGIA_PREAVVISO (ID_TIPOLOGIA_PREAVVISO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_34 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DANNO_ATM ADD (
  CONSTRAINT FK_IUF_D_DANNO_01 
  FOREIGN KEY (ID_DANNO) 
  REFERENCES IUF_D_DANNO (ID_DANNO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_UNITA_MISURA_06 
  FOREIGN KEY (ID_UNITA_MISURA) 
  REFERENCES IUF_D_UNITA_MISURA (ID_UNITA_MISURA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_24 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DANNO_FAUNA ADD (
  CONSTRAINT FK_IUF_R_DANNO_SPECIE_01 
  FOREIGN KEY (ID_DANNO_SPECIE) 
  REFERENCES IUF_R_DANNO_SPECIE (ID_DANNO_SPECIE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_45 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATI_BILANCIO ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_56 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATI_COMUNI_ELEM_QUADR ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_02 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_QUADRO_DINAMICO_03 
  FOREIGN KEY (ID_QUADRO) 
  REFERENCES IUF_D_QUADRO_DINAMICO (ID_QUADRO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATI_DANNO_FAUNA ADD (
  CONSTRAINT FK_IUF_D_ISTIT_DANNI_FAUN_02 
  FOREIGN KEY (ID_ISTITUTO_DANNI_FAUNA) 
  REFERENCES IUF_D_ISTITUTO_DANNI_FAUNA (ID_ISTITUTO_DANNI_FAUNA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_ISTITUTO_NOMINAT_01 
  FOREIGN KEY (ID_ISTITUTO_NOMINATIVO) 
  REFERENCES IUF_D_ISTITUTO_NOMINATIVO (ID_ISTITUTO_NOMINATIVO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_MOTIVO_URGENZA_01 
  FOREIGN KEY (ID_MOTIVO_URGENZA) 
  REFERENCES IUF_D_MOTIVO_URGENZA (ID_MOTIVO_URGENZA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_41 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATI_PROCEDIMENTO ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_03 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_08 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATI_PROCEDIMENTO_PUNT ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_15 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_11 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATO_ELEMENTO_QUADRO ADD (
  CONSTRAINT FK_IUF_T_DATI_COMU_EL_QUA_01 
  FOREIGN KEY (ID_DATI_COMUNI_ELEM_QUADRO) 
  REFERENCES IUF_T_DATI_COMUNI_ELEM_QUADR (ID_DATI_COMUNI_ELEM_QUADRO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_ELEMENTI_QUADRO_02 
  FOREIGN KEY (ID_ELEMENTO_QUADRO) 
  REFERENCES IUF_D_ELEMENTO_QUADRO (ID_ELEMENTO_QUADRO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DOCUMENTI_RICHIESTI ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_39 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DOCUMENTO_SPESA ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_20 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DOCUMENTO_SPESA_FILE ADD (
  CONSTRAINT FK_IUF_T_DOCUMENTO_SPESA_05 
  FOREIGN KEY (ID_DOCUMENTO_SPESA) 
  REFERENCES IUF_T_DOCUMENTO_SPESA (ID_DOCUMENTO_SPESA)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ECONOMIA ADD (
  CONSTRAINT FK_IUF_T_RISORSE_LIVE_BAN_02 
  FOREIGN KEY (ID_RISORSE_LIVELLO_BANDO) 
  REFERENCES IUF_T_RISORSE_LIVELLO_BANDO (ID_RISORSE_LIVELLO_BANDO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ELAB_MASSIVA ADD (
  CONSTRAINT FK_IUF_D_TIPO_ELABORAZION_01 
  FOREIGN KEY (TIPO_ELABORAZIONE) 
  REFERENCES IUF_D_TIPO_ELABORAZIONE (TIPO_ELABORAZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_21 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_15 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESECUZIONE_CONTROLLI ADD (
  CONSTRAINT FK_IUF_D_FONTE_CONTROLLO_02 
  FOREIGN KEY (ID_FONTE_CONTROLLO) 
  REFERENCES IUF_D_FONTE_CONTROLLO (ID_FONTE_CONTROLLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_05 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESITO_CONTROLLI_AMM ADD (
  CONSTRAINT FK_IUF_D_ESITO_05 
  FOREIGN KEY (ID_ESITO) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_QUA_OGG_CONTR_AM_02 
  FOREIGN KEY (ID_QUADRO_OGG_CONTROLLO_AMM) 
  REFERENCES IUF_R_QUADRO_OGG_CONTROL_AMM (ID_QUADRO_OGG_CONTROLLO_AMM)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_16 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESITO_FINALE ADD (
  CONSTRAINT FK_IUF_D_ESITO_10 
  FOREIGN KEY (ID_ESITO) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_ESITO_12 
  FOREIGN KEY (ID_ESITO_DEFINITIVO) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_06 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESITO_OPERAZIONE ADD (
  CONSTRAINT FK_IUF_D_ESITO_08 
  FOREIGN KEY (ID_ESITO_ISTRUTTORIA) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_ESITO_09 
  FOREIGN KEY (ID_ESITO_CONTROLLO_IN_LOCO) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_ESITO_13 
  FOREIGN KEY (ID_MOTIVAZIONE_POST_ISTR) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LIVELLO_44 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_ESITO_FINALE_01 
  FOREIGN KEY (ID_ESITO_FINALE) 
  REFERENCES IUF_T_ESITO_FINALE (ID_ESITO_FINALE)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESITO_TECNICO ADD (
  CONSTRAINT FK_IUF_D_ESITO_03 
  FOREIGN KEY (ID_ESITO) 
  REFERENCES IUF_D_ESITO (ID_ESITO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_ATTO_01 
  FOREIGN KEY (ID_TIPO_ATTO) 
  REFERENCES IUF_D_TIPO_ATTO (ID_TIPO_ATTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_QUADRO_OGGETTO_06 
  FOREIGN KEY (ID_QUADRO_OGGETTO) 
  REFERENCES IUF_R_QUADRO_OGGETTO (ID_QUADRO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_18 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ESITO_TECNICO_ISTRUT ADD (
  CONSTRAINT FK_IUF_T_ESITO_TECNICO_01 
  FOREIGN KEY (ID_ESITO_TECNICO) 
  REFERENCES IUF_T_ESITO_TECNICO (ID_ESITO_TECNICO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_FILE_LISTA_LIQUIDAZION ADD (
  CONSTRAINT FK_IUF_D_STATO_STAMPA_02 
  FOREIGN KEY (ID_STATO_STAMPA) 
  REFERENCES IUF_D_STATO_STAMPA (ID_STATO_STAMPA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_LISTA_LIQUIDAZIO_01 
  FOREIGN KEY (ID_LISTA_LIQUIDAZIONE) 
  REFERENCES IUF_T_LISTA_LIQUIDAZIONE (ID_LISTA_LIQUIDAZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_FINE_LAVORI ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_26 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_IMPORTI_LIQUIDATI ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_36 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_33 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_INFO_CINGHIALI ADD (
  CONSTRAINT FK_IUF_R_METODO_CENS_SPEC_02 
  FOREIGN KEY (ID_METODO_SPECIE) 
  REFERENCES IUF_R_METODO_CENS_SPECIE (ID_METODO_SPECIE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_52 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_INFO_EXPOST ADD (
  CONSTRAINT FK_IUF_D_RISCHIO_ELEVATO_01 
  FOREIGN KEY (ID_RISCHIO_ELEVATO) 
  REFERENCES IUF_D_RISCHIO_ELEVATO (ID_RISCHIO_ELEVATO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_15 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_INTERVENTO ADD (
  CONSTRAINT FK_IUF_D_DESCRIZIONE_INTE_01 
  FOREIGN KEY (ID_DESCRIZIONE_INTERVENTO) 
  REFERENCES IUF_D_DESCRIZIONE_INTERVENTO (ID_DESCRIZIONE_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_07 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ITER_PROCEDIMENTO_GRUP ADD (
  CONSTRAINT FK_IUF_D_STATO_OGGETTO_04 
  FOREIGN KEY (ID_STATO_OGGETTO) 
  REFERENCES IUF_D_STATO_OGGETTO (ID_STATO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_21 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ITER_PROCEDIMENTO_OGGE ADD (
  CONSTRAINT FK_IUF_D_STATO_OGGETTO_01 
  FOREIGN KEY (ID_STATO_OGGETTO) 
  REFERENCES IUF_D_STATO_OGGETTO (ID_STATO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_07 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_NOTIFICA ADD (
  CONSTRAINT FK_IUF_D_GRAVITA_NOTIFICA_01 
  FOREIGN KEY (ID_GRAVITA_NOTIFICA) 
  REFERENCES IUF_D_GRAVITA_NOTIFICA (ID_GRAVITA_NOTIFICA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_VISIBILITA_01 
  FOREIGN KEY (ID_VISIBILITA) 
  REFERENCES IUF_D_VISIBILITA (ID_VISIBILITA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_01 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_OGUR ADD (
  CONSTRAINT FK_IUF_D_SPECIE_OGUR_01 
  FOREIGN KEY (ID_SPECIE_OGUR) 
  REFERENCES IUF_D_SPECIE_OGUR (ID_SPECIE_OGUR)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_50 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_OGUR_DISTRETTO ADD (
  CONSTRAINT FK_IUF_T_OGUR_01 
  FOREIGN KEY (ID_OGUR) 
  REFERENCES IUF_T_OGUR (ID_OGUR)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_OGUR_IPOTESI_PRELIEVO ADD (
  CONSTRAINT FK_IUF_T_OGUR_DISTRETTO_03 
  FOREIGN KEY (ID_DISTRETTO) 
  REFERENCES IUF_T_OGUR_DISTRETTO (ID_DISTRETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PARTECIPANTE ADD (
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_08 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PARTICELLA_UTILIZZO ADD (
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_03 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PARTICELLE_FAUNA ADD (
  CONSTRAINT FK_IUF_T_DANNO_FAUNA_02 
  FOREIGN KEY (ID_DANNO_FAUNA) 
  REFERENCES IUF_T_DANNO_FAUNA (ID_DANNO_FAUNA)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PIANO_FINANZIARIO_LEAD ADD (
  CONSTRAINT FK_IUF_D_TIPO_PIANO_FINAN_02 
  FOREIGN KEY (ID_TIPO_PIANO_FINANZIARIO) 
  REFERENCES IUF_D_TIPO_PIANO_FINANZIARIO (ID_TIPO_PIANO_FINANZIARIO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_30 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PIANO_OGUR ADD (
  CONSTRAINT FK_IUF_D_SPECIE_OGUR_02 
  FOREIGN KEY (ID_SPECIE_OGUR) 
  REFERENCES IUF_D_SPECIE_OGUR (ID_SPECIE_OGUR)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_57 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_POSIZIONE_GRADUATORIA ADD (
  CONSTRAINT FK_IUF_T_GRADUATORIA_03 
  FOREIGN KEY (ID_GRADUATORIA) 
  REFERENCES IUF_T_GRADUATORIA (ID_GRADUATORIA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_14 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRATICHE_CONCESSIONE ADD (
  CONSTRAINT FK_IUF_T_CONCESSIONE_02 
  FOREIGN KEY (ID_CONCESSIONE) 
  REFERENCES IUF_T_CONCESSIONE (ID_CONCESSIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_49 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PREMIO_ALLEVAM ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_55 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PREMIO_COLTURE ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_54 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PREMIO_COMPLESSIVO ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_21 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_04 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRESTITI_AGRARI ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_35 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROC_DOMANDA_PREC ADD (
  CONSTRAINT FK_IUF_D_BANDO_17 
  FOREIGN KEY (ID_BANDO) 
  REFERENCES IUF_D_BANDO (ID_BANDO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_25 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_26 
  FOREIGN KEY (ID_PROCEDIMENTO_PREC) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIM_AMMINISTRAZIO ADD (
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_03 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_ESTRATTO ADD (
  CONSTRAINT FK_IUF_D_FLAG_ESTRATTA_01 
  FOREIGN KEY (FLAG_ESTRATTA) 
  REFERENCES IUF_D_FLAG_ESTRATTA (FLAG_ESTRATTA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_ESTRAZIONE_CAMPI_01 
  FOREIGN KEY (ID_ESTRAZIONE_CAMPIONE) 
  REFERENCES IUF_T_ESTRAZIONE_CAMPIONE (ID_ESTRAZIONE_CAMPIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_09 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_16 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PROCEDIMENTO_ESTR_EXPO ADD (
  CONSTRAINT FK_IUF_D_FLAG_ESTRATTA_02 
  FOREIGN KEY (FLAG_ESTRATTA) 
  REFERENCES IUF_D_FLAG_ESTRATTA (FLAG_ESTRATTA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_ESTRAZIONE_CAMPI_02 
  FOREIGN KEY (ID_ESTRAZIONE_CAMPIONE) 
  REFERENCES IUF_T_ESTRAZIONE_CAMPIONE (ID_ESTRAZIONE_CAMPIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_44 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_23 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRODOTTO_TRASFORMATO ADD (
  CONSTRAINT FK_IUF_D_PRODOTTO_01 
  FOREIGN KEY (ID_PRODOTTO) 
  REFERENCES IUF_D_PRODOTTO (ID_PRODOTTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_07 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRODUZIONE_AZIENDA ADD (
  CONSTRAINT FK_IUF_D_PRODUZIONE_CERTI_01 
  FOREIGN KEY (ID_PRODUZIONE_CERTIFICATA) 
  REFERENCES IUF_D_PRODUZIONE_CERTIFICATA (ID_PRODUZIONE_CERTIFICATA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_PRODUZIONE_TRADI_01 
  FOREIGN KEY (ID_PRODUZIONE_TRADIZIONALE) 
  REFERENCES IUF_D_PRODUZIONE_TRADIZIONAL (ID_PRODUZIONE_TRADIZIONALE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_10 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PRODUZIONE_VENDIBILE ADD (
  CONSTRAINT FK_IUF_D_PRODUZIONE_01 
  FOREIGN KEY (ID_PRODUZIONE) 
  REFERENCES IUF_D_PRODUZIONE (ID_PRODUZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PRODUZIONE_ZOOTE_01 
  FOREIGN KEY (ID_PRODUZIONE_ZOOTECNICA) 
  REFERENCES IUF_T_PRODUZIONE_ZOOTECNICA (ID_PRODUZIONE_ZOOTECNICA)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PUBBLICA_ALLEVAMENTO ADD (
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_05 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PUBBLICA_PARTICELLA ADD (
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_02 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PUNTEGGIO_CALCOLATO ADD (
  CONSTRAINT FK_IUF_R_BANDO_LIV_CRITER_01 
  FOREIGN KEY (ID_BANDO_LIVELLO_CRITERIO) 
  REFERENCES IUF_R_BANDO_LIVELLO_CRITERIO (ID_BANDO_LIVELLO_CRITERIO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DATI_PROCEDI_PUN_01 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO_PUNTI) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO_PUNT (ID_DATI_PROCEDIMENTO_PUNTI)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PUNTEGGIO_ISTRUTTORIA ADD (
  CONSTRAINT FK_IUF_R_BANDO_LIV_CRITER_02 
  FOREIGN KEY (ID_BANDO_LIVELLO_CRITERIO) 
  REFERENCES IUF_R_BANDO_LIVELLO_CRITERIO (ID_BANDO_LIVELLO_CRITERIO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DATI_PROCEDI_PUN_02 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO_PUNTI) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO_PUNT (ID_DATI_PROCEDIMENTO_PUNTI)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_RENDICONTAZIONE_SPESE ADD (
  CONSTRAINT FK_IUF_T_INTERVENTO_03 
  FOREIGN KEY (ID_INTERVENTO) 
  REFERENCES IUF_T_INTERVENTO (ID_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_31 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_RICEVUTA_PAGAMENTO ADD (
  CONSTRAINT FK_IUF_T_DOCUMENTO_SPESA_02 
  FOREIGN KEY (ID_DOCUMENTO_SPESA) 
  REFERENCES IUF_T_DOCUMENTO_SPESA (ID_DOCUMENTO_SPESA)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_RIEPILOGO_DANNO_FAUNA ADD (
  CONSTRAINT FK_IUF_T_DANNO_FAUNA_03 
  FOREIGN KEY (ID_DANNO_FAUNA) 
  REFERENCES IUF_T_DANNO_FAUNA (ID_DANNO_FAUNA)
  ENABLE VALIDATE);

ALTER TABLE IUF_W_DETT_INTERV_PROC_OGG ADD (
  CONSTRAINT FK_IUF_T_INTERVENTO_01 
  FOREIGN KEY (ID_INTERVENTO) 
  REFERENCES IUF_T_INTERVENTO (ID_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_14 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_W_FILE_ALL_INTE_PROC_OGG ADD (
  CONSTRAINT FK_IUF_T_FILE_ALLEG_INTER_01 
  FOREIGN KEY (ID_FILE_ALLEGATI_INTERVENTO) 
  REFERENCES IUF_T_FILE_ALLEGATI_INTERVEN (ID_FILE_ALLEGATI_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_W_DETT_IN_PROC_OGG_01 
  FOREIGN KEY (ID_DETT_INTERV_PROC_OGG) 
  REFERENCES IUF_W_DETT_INTERV_PROC_OGG (ID_DETT_INTERV_PROC_OGG)
  ENABLE VALIDATE);

ALTER TABLE IUF_W_LOCAL_INTERV_PROC_OGG ADD (
  CONSTRAINT FK_IUF_W_DETT_IN_PROC_OGG_03 
  FOREIGN KEY (ID_DETT_INTERV_PROC_OGG) 
  REFERENCES IUF_W_DETT_INTERV_PROC_OGG (ID_DETT_INTERV_PROC_OGG)
  ENABLE VALIDATE);

ALTER TABLE IUF_D_DETTAGLIO_INFO ADD (
  CONSTRAINT FK_IUF_D_GRUPPO_INFO_01 
  FOREIGN KEY (ID_GRUPPO_INFO) 
  REFERENCES IUF_D_GRUPPO_INFO (ID_GRUPPO_INFO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_LEGAME_INFO_01 
  FOREIGN KEY (ID_LEGAME_INFO) 
  REFERENCES IUF_D_LEGAME_INFO (ID_LEGAME_INFO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ANNI_EXPOST ADD (
  CONSTRAINT FK_IUF_D_ANNO_EXPOST_01 
  FOREIGN KEY (ID_ANNO_EXPOST) 
  REFERENCES IUF_D_ANNO_EXPOST (ID_ANNO_EXPOST)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_INFO_EXPOST_01 
  FOREIGN KEY (ID_INFO_EXPOST) 
  REFERENCES IUF_T_INFO_EXPOST (ID_INFO_EXPOST)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ANTICIPO_LIVELLO ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_45 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_ANTICIPO_02 
  FOREIGN KEY (ID_ANTICIPO) 
  REFERENCES IUF_T_ANTICIPO (ID_ANTICIPO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ANTICIPO_PROC_OGG ADD (
  CONSTRAINT FK_IUF_T_ANTICIPO_01 
  FOREIGN KEY (ID_ANTICIPO) 
  REFERENCES IUF_T_ANTICIPO (ID_ANTICIPO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_20 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DANNO_ATM_INTERVENTO ADD (
  CONSTRAINT FK_IUF_T_DANNO_ATM_03 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO, PROGRESSIVO) 
  REFERENCES IUF_T_DANNO_ATM (ID_PROCEDIMENTO_OGGETTO,PROGRESSIVO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_INTERVENTO_05 
  FOREIGN KEY (ID_INTERVENTO) 
  REFERENCES IUF_T_INTERVENTO (ID_INTERVENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DETT_INTE_PROC_OGG_MIS ADD (
  CONSTRAINT FK_IUF_R_MISURAZIO_INTERV_01 
  FOREIGN KEY (ID_MISURAZIONE_INTERVENTO) 
  REFERENCES IUF_R_MISURAZIONE_INTERVENTO (ID_MISURAZIONE_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_W_DETT_IN_PROC_OGG_02 
  FOREIGN KEY (ID_DETT_INTERV_PROC_OGG) 
  REFERENCES IUF_W_DETT_INTERV_PROC_OGG (ID_DETT_INTERV_PROC_OGG)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DOC_SPESA_INT_RICEV_PA ADD (
  CONSTRAINT FK_IUF_T_DOCUMENTO_SPESA_04 
  FOREIGN KEY (ID_DOCUMENTO_SPESA) 
  REFERENCES IUF_T_DOCUMENTO_SPESA (ID_DOCUMENTO_SPESA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_INTERVENTO_07 
  FOREIGN KEY (ID_INTERVENTO) 
  REFERENCES IUF_T_INTERVENTO (ID_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_RICEVUTA_PAGAMEN_02 
  FOREIGN KEY (ID_RICEVUTA_PAGAMENTO) 
  REFERENCES IUF_T_RICEVUTA_PAGAMENTO (ID_RICEVUTA_PAGAMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DOC_SPESA_PROC_OGG ADD (
  CONSTRAINT FK_IUF_T_DOCUMEN_SPESA_FI_01 
  FOREIGN KEY (ID_DOCUMENTO_SPESA_FILE) 
  REFERENCES IUF_T_DOCUMENTO_SPESA_FILE (ID_DOCUMENTO_SPESA_FILE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DOCUMENTO_SPESA_06 
  FOREIGN KEY (ID_DOCUMENTO_SPESA) 
  REFERENCES IUF_T_DOCUMENTO_SPESA (ID_DOCUMENTO_SPESA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_46 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_RICEVUTA_PAGAMEN_03 
  FOREIGN KEY (ID_RICEVUTA_PAGAMENTO) 
  REFERENCES IUF_T_RICEVUTA_PAGAMENTO (ID_RICEVUTA_PAGAMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DOCUMENTO_SPESA_INTERV ADD (
  CONSTRAINT FK_IUF_T_DOCUMENTO_SPESA_01 
  FOREIGN KEY (ID_DOCUMENTO_SPESA) 
  REFERENCES IUF_T_DOCUMENTO_SPESA (ID_DOCUMENTO_SPESA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_INTERVENTO_06 
  FOREIGN KEY (ID_INTERVENTO) 
  REFERENCES IUF_T_INTERVENTO (ID_INTERVENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LISTA_LIQUIDAZ_IMP_LIQ ADD (
  CONSTRAINT FK_IUF_T_IMPORTI_LIQUIDAT_02 
  FOREIGN KEY (ID_IMPORTI_LIQUIDATI) 
  REFERENCES IUF_T_IMPORTI_LIQUIDATI (ID_IMPORTI_LIQUIDATI)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_LISTA_LIQUIDAZIO_03 
  FOREIGN KEY (ID_LISTA_LIQUIDAZIONE) 
  REFERENCES IUF_T_LISTA_LIQUIDAZIONE (ID_LISTA_LIQUIDAZIONE)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_LIV_FOCUS_AREA_LEADER ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_15 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PIANO_FINANZ_LEA_02 
  FOREIGN KEY (ID_PIANO_FINANZIARIO_LEADER) 
  REFERENCES IUF_T_PIANO_FINANZIARIO_LEAD (ID_PIANO_FINANZIARIO_LEADER)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PARTICELLA_DANNEGGIATA ADD (
  CONSTRAINT FK_IUF_T_DANNO_ATM_02 
  FOREIGN KEY (ID_DANNO_ATM) 
  REFERENCES IUF_T_DANNO_ATM (ID_DANNO_ATM)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROC_ASSICURAZ_COLTURE ADD (
  CONSTRAINT FK_IUF_T_ASSICURAZI_COLTU_01 
  FOREIGN KEY (ID_ASSICURAZIONI_COLTURE) 
  REFERENCES IUF_T_ASSICURAZIONI_COLTURE (ID_ASSICURAZIONI_COLTURE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_27 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMEN_DANNO_FAUNA ADD (
  CONSTRAINT FK_IUF_T_DANNO_FAUNA_01 
  FOREIGN KEY (ID_DANNO_FAUNA) 
  REFERENCES IUF_T_DANNO_FAUNA (ID_DANNO_FAUNA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_28 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROCEDIMENTO_DANNO ADD (
  CONSTRAINT FK_IUF_T_DANNO_ATM_01 
  FOREIGN KEY (ID_DANNO_ATM) 
  REFERENCES IUF_T_DANNO_ATM (ID_DANNO_ATM)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_10 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_PROC_PRESTITI_AGRARI ADD (
  CONSTRAINT FK_IUF_T_PRESTITI_AGRARI_01 
  FOREIGN KEY (ID_PRESTITI_AGRARI) 
  REFERENCES IUF_T_PRESTITI_AGRARI (ID_PRESTITI_AGRARI)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_19 
  FOREIGN KEY (ID_PROCEDIMENTO) 
  REFERENCES IUF_T_PROCEDIMENTO (ID_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_RISOR_LIV_BAND_IMP_LIQ ADD (
  CONSTRAINT FK_IUF_T_IMPORTI_LIQUIDAT_01 
  FOREIGN KEY (ID_IMPORTI_LIQUIDATI) 
  REFERENCES IUF_T_IMPORTI_LIQUIDATI (ID_IMPORTI_LIQUIDATI)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_RISORSE_LIVE_BAN_03 
  FOREIGN KEY (ID_RISORSE_LIVELLO_BANDO) 
  REFERENCES IUF_T_RISORSE_LIVELLO_BANDO (ID_RISORSE_LIVELLO_BANDO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_TIPO_DOCUMENTI_RICHIES ADD (
  CONSTRAINT FK_IUF_D_TIPO_DOC_RICHIES_01 
  FOREIGN KEY (ID_TIPO_DOC_RICHIESTI) 
  REFERENCES IUF_D_TIPO_DOC_RICHIESTI (ID_TIPO_DOC_RICHIESTI)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DOCUMENTI_RICHIE_01 
  FOREIGN KEY (ID_DOCUMENTI_RICHIESTI) 
  REFERENCES IUF_T_DOCUMENTI_RICHIESTI (ID_DOCUMENTI_RICHIESTI)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ACCERTAMENTO_SPESE ADD (
  CONSTRAINT FK_IUF_T_INTERVENTO_04 
  FOREIGN KEY (ID_INTERVENTO) 
  REFERENCES IUF_T_INTERVENTO (ID_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_32 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ALLEVAMENTO ADD (
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_06 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ATTIVITA ADD (
  CONSTRAINT FK_IUF_D_TIPO_AGGREGAZION_04 
  FOREIGN KEY (ID_TIPO_AGGREGAZIONE) 
  REFERENCES IUF_D_TIPO_AGGREGAZIONE (ID_TIPO_AGGREGAZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_12 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_AZIENDA_BIO ADD (
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_01 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CONTATTI ADD (
  CONSTRAINT FK_IUF_D_IMG_AGRIQ_01 
  FOREIGN KEY (ID_IMG_AGRIQ) 
  REFERENCES IUF_D_IMG_AGRIQ (ID_IMG_AGRIQ)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DATI_PROCEDIMENT_09 
  FOREIGN KEY (ID_DATI_PROCEDIMENTO) 
  REFERENCES IUF_T_DATI_PROCEDIMENTO (ID_DATI_PROCEDIMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATE_CENS_CINGHIALI ADD (
  CONSTRAINT FK_IUF_T_INFO_CINGHIALI_01 
  FOREIGN KEY (ID_INFO_CINGHIALI) 
  REFERENCES IUF_T_INFO_CINGHIALI (ID_INFO_CINGHIALI)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_51 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DETTAGLIO_INTERVENTO ADD (
  CONSTRAINT FK_IUF_T_INTERVENTO_02 
  FOREIGN KEY (ID_INTERVENTO) 
  REFERENCES IUF_T_INTERVENTO (ID_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_04 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DETT_DOCUMENTO_SPESA ADD (
  CONSTRAINT FK_IUF_D_MODALITA_PAGAMEN_01 
  FOREIGN KEY (ID_MODALITA_PAGAMENTO) 
  REFERENCES IUF_D_MODALITA_PAGAMENTO (ID_MODALITA_PAGAMENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_D_TIPO_DOCUMEN_SPE_01 
  FOREIGN KEY (ID_TIPO_DOCUMENTO_SPESA) 
  REFERENCES IUF_D_TIPO_DOCUMENTO_SPESA (ID_TIPO_DOCUMENTO_SPESA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DOCUMENTO_SPESA_03 
  FOREIGN KEY (ID_DOCUMENTO_SPESA) 
  REFERENCES IUF_T_DOCUMENTO_SPESA (ID_DOCUMENTO_SPESA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_FORNITORE_01 
  FOREIGN KEY (ID_FORNITORE) 
  REFERENCES IUF_T_FORNITORE (ID_FORNITORE)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DETT_RICEVUTA_PAGAMENT ADD (
  CONSTRAINT FK_IUF_D_MODALITA_PAGAMEN_02 
  FOREIGN KEY (ID_MODALITA_PAGAMENTO) 
  REFERENCES IUF_D_MODALITA_PAGAMENTO (ID_MODALITA_PAGAMENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_RICEVUTA_PAGAMEN_01 
  FOREIGN KEY (ID_RICEVUTA_PAGAMENTO) 
  REFERENCES IUF_T_RICEVUTA_PAGAMENTO (ID_RICEVUTA_PAGAMENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_ITER_PIANO_FINANZ_LEAD ADD (
  CONSTRAINT FK_IUF_D_STATO_PIANO_FINA_03 
  FOREIGN KEY (ID_STATO_PIANO_FINANZIARIO) 
  REFERENCES IUF_D_STATO_PIANO_FINANZIARI (ID_STATO_PIANO_FINANZIARIO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PIANO_FINANZ_LEA_01 
  FOREIGN KEY (ID_PIANO_FINANZIARIO_LEADER) 
  REFERENCES IUF_T_PIANO_FINANZIARIO_LEAD (ID_PIANO_FINANZIARIO_LEADER)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_LOCALIZZAZIONE_INTERV ADD (
  CONSTRAINT FK_IUF_T_DETTAGLIO_INTERV_03 
  FOREIGN KEY (ID_DETTAGLIO_INTERVENTO) 
  REFERENCES IUF_T_DETTAGLIO_INTERVENTO (ID_DETTAGLIO_INTERVENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_OGUR_ANNI_CENSITI ADD (
  CONSTRAINT FK_IUF_T_OGUR_DISTRETTO_01 
  FOREIGN KEY (ID_DISTRETTO) 
  REFERENCES IUF_T_OGUR_DISTRETTO (ID_DISTRETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_OGUR_CENSIMENTO ADD (
  CONSTRAINT FK_IUF_T_OGUR_DISTRETTO_02 
  FOREIGN KEY (ID_DISTRETTO) 
  REFERENCES IUF_T_OGUR_DISTRETTO (ID_DISTRETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PARTICELLA_GIS ADD (
  CONSTRAINT FK_IUF_D_LIVELLO_30 
  FOREIGN KEY (ID_LIVELLO) 
  REFERENCES IUF_D_LIVELLO (ID_LIVELLO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PARTICELLA_UTILI_04 
  FOREIGN KEY (ID_PARTICELLA_UTILIZZO) 
  REFERENCES IUF_T_PARTICELLA_UTILIZZO (ID_PARTICELLA_UTILIZZO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_PIANO_DISTRETTO_OGUR ADD (
  CONSTRAINT FK_IUF_D_OGUR_DA_REGIONE_01 
  FOREIGN KEY (ID_OGUR_DA_REGIONE) 
  REFERENCES IUF_D_OGUR_DA_REGIONE (ID_OGUR_DA_REGIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_OGUR_DISTRETTO_04 
  FOREIGN KEY (ID_DISTRETTO) 
  REFERENCES IUF_T_OGUR_DISTRETTO (ID_DISTRETTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PIANO_OGUR_01 
  FOREIGN KEY (ID_PIANO_OGUR) 
  REFERENCES IUF_T_PIANO_OGUR (ID_PIANO_OGUR)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_SELEZIONE_INFO ADD (
  CONSTRAINT FK_IUF_D_DETTAGLIO_INFO_01 
  FOREIGN KEY (ID_DETTAGLIO_INFO) 
  REFERENCES IUF_D_DETTAGLIO_INFO (ID_DETTAGLIO_INFO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_12 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_VALORI_INSERITI ADD (
  CONSTRAINT FK_IUF_T_SELEZIONE_INFO_02 
  FOREIGN KEY (ID_SELEZIONE_INFO) 
  REFERENCES IUF_T_SELEZIONE_INFO (ID_SELEZIONE_INFO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ATTIVITA_PARTECIPANTE ADD (
  CONSTRAINT FK_IUF_T_ATTIVITA_01 
  FOREIGN KEY (ID_ATTIVITA) 
  REFERENCES IUF_T_ATTIVITA (ID_ATTIVITA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PARTECIPANTE_01 
  FOREIGN KEY (ID_PARTECIPANTE) 
  REFERENCES IUF_T_PARTECIPANTE (ID_PARTECIPANTE)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_ATTIV_PARTECIP_INTERV ADD (
  CONSTRAINT FK_IUF_R_ATTIVITA_PARTECI_01 
  FOREIGN KEY (ID_ATTIVITA_PARTECIPANTE) 
  REFERENCES IUF_R_ATTIVITA_PARTECIPANTE (ID_ATTIVITA_PARTECIPANTE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_INTERVENTO_08 
  FOREIGN KEY (ID_INTERVENTO) 
  REFERENCES IUF_T_INTERVENTO (ID_INTERVENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_AZIENDA_BIO_ATTIVITA ADD (
  CONSTRAINT FK_IUF_T_AZIENDA_BIO_03 
  FOREIGN KEY (ID_AZIENDA_BIO) 
  REFERENCES IUF_T_AZIENDA_BIO (ID_AZIENDA_BIO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_AZIENDA_BIO_FILIERA_PR ADD (
  CONSTRAINT FK_IUF_D_FILIERA_PRODUTTI_01 
  FOREIGN KEY (ID_FILIERA_PRODUTTIVA) 
  REFERENCES IUF_D_FILIERA_PRODUTTIVA (ID_FILIERA_PRODUTTIVA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_AZIENDA_BIO_01 
  FOREIGN KEY (ID_AZIENDA_BIO) 
  REFERENCES IUF_T_AZIENDA_BIO (ID_AZIENDA_BIO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_AZIENDA_BIO_METODO_COL ADD (
  CONSTRAINT FK_IUF_D_METODO_COLTIVAZI_01 
  FOREIGN KEY (ID_METODO_COLTIVAZIONE) 
  REFERENCES IUF_D_METODO_COLTIVAZIONE (ID_METODO_COLTIVAZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_AZIENDA_BIO_02 
  FOREIGN KEY (ID_AZIENDA_BIO) 
  REFERENCES IUF_T_AZIENDA_BIO (ID_AZIENDA_BIO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_AZIENDA_BIO_MULTIFUNZ ADD (
  CONSTRAINT FK_IUF_D_MULTIFUNZIONALIT_01 
  FOREIGN KEY (ID_MULTIFUNZIONALITA) 
  REFERENCES IUF_D_MULTIFUNZIONALITA (ID_MULTIFUNZIONALITA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_AZIENDA_BIO_04 
  FOREIGN KEY (ID_AZIENDA_BIO) 
  REFERENCES IUF_T_AZIENDA_BIO (ID_AZIENDA_BIO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_CONTATTI_CANALE_VENDIT ADD (
  CONSTRAINT FK_IUF_D_CANALE_VENDITA_01 
  FOREIGN KEY (ID_CANALE_VENDITA) 
  REFERENCES IUF_D_CANALE_VENDITA (ID_CANALE_VENDITA)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_CONTATTI_01 
  FOREIGN KEY (ID_CONTATTI) 
  REFERENCES IUF_T_CONTATTI (ID_CONTATTI)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DETT_INTERV_MISURAZION ADD (
  CONSTRAINT FK_IUF_R_MISURAZIO_INTERV_02 
  FOREIGN KEY (ID_MISURAZIONE_INTERVENTO) 
  REFERENCES IUF_R_MISURAZIONE_INTERVENTO (ID_MISURAZIONE_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_DETTAGLIO_INTERV_01 
  FOREIGN KEY (ID_DETTAGLIO_INTERVENTO) 
  REFERENCES IUF_T_DETTAGLIO_INTERVENTO (ID_DETTAGLIO_INTERVENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DOC_SPESA_INT_ACC_SPES ADD (
  CONSTRAINT FK_IUF_R_DOCUMEN_SPESA_IN_02 
  FOREIGN KEY (ID_DOCUMENTO_SPESA_INTERVEN) 
  REFERENCES IUF_R_DOCUMENTO_SPESA_INTERV (ID_DOCUMENTO_SPESA_INTERVEN)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_43 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_DOC_SPESA_INT_PROC_OGG ADD (
  CONSTRAINT FK_IUF_R_DOCUMEN_SPESA_IN_01 
  FOREIGN KEY (ID_DOCUMENTO_SPESA_INTERVEN) 
  REFERENCES IUF_R_DOCUMENTO_SPESA_INTERV (ID_DOCUMENTO_SPESA_INTERVEN)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PROCEDIMENTO_OGG_42 
  FOREIGN KEY (ID_PROCEDIMENTO_OGGETTO) 
  REFERENCES IUF_T_PROCEDIMENTO_OGGETTO (ID_PROCEDIMENTO_OGGETTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_FILE_ALLEGATI_DETT_INT ADD (
  CONSTRAINT FK_IUF_T_DETTAGLIO_INTERV_02 
  FOREIGN KEY (ID_DETTAGLIO_INTERVENTO) 
  REFERENCES IUF_T_DETTAGLIO_INTERVENTO (ID_DETTAGLIO_INTERVENTO)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_FILE_ALLEG_INTER_02 
  FOREIGN KEY (ID_FILE_ALLEGATI_INTERVENTO) 
  REFERENCES IUF_T_FILE_ALLEGATI_INTERVEN (ID_FILE_ALLEGATI_INTERVENTO)
  ENABLE VALIDATE);

ALTER TABLE IUF_R_IMPORTI_RIPARTITI ADD (
  CONSTRAINT FK_IUF_D_VOCE_RIPARTIZION_02 
  FOREIGN KEY (ID_VOCE_RIPARTIZIONE) 
  REFERENCES IUF_D_VOCE_RIPARTIZIONE (ID_VOCE_RIPARTIZIONE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_R_LIS_LIQU_IMP_LIQ_01 
  FOREIGN KEY (ID_LISTA_LIQUIDAZ_IMP_LIQ) 
  REFERENCES IUF_R_LISTA_LIQUIDAZ_IMP_LIQ (ID_LISTA_LIQUIDAZ_IMP_LIQ)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_CENSITO_PRELIEVO_OGUR ADD (
  CONSTRAINT FK_IUF_D_SPECIE_OGUR_05 
  FOREIGN KEY (ID_SPECIE_OGUR) 
  REFERENCES IUF_D_SPECIE_OGUR (ID_SPECIE_OGUR)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PIANO_DISTR_OGUR_02 
  FOREIGN KEY (ID_PIANO_DISTRETTO_OGUR) 
  REFERENCES IUF_T_PIANO_DISTRETTO_OGUR (ID_PIANO_DISTRETTO_OGUR)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_DATE_CENS_OGUR ADD (
  CONSTRAINT FK_IUF_R_METODO_CENS_SPEC_01 
  FOREIGN KEY (ID_METODO_SPECIE) 
  REFERENCES IUF_R_METODO_CENS_SPECIE (ID_METODO_SPECIE)
  ENABLE VALIDATE,
  CONSTRAINT FK_IUF_T_PIANO_DISTR_OGUR_01 
  FOREIGN KEY (ID_PIANO_DISTRETTO_OGUR) 
  REFERENCES IUF_T_PIANO_DISTRETTO_OGUR (ID_PIANO_DISTRETTO_OGUR)
  ENABLE VALIDATE);

ALTER TABLE IUF_T_FILE_ALLEGATI ADD (
  CONSTRAINT FK_IUF_T_SELEZIONE_INFO_01 
  FOREIGN KEY (ID_SELEZIONE_INFO) 
  REFERENCES IUF_T_SELEZIONE_INFO (ID_SELEZIONE_INFO)
  ENABLE VALIDATE);

CREATE SEQUENCE SEQ_IUF_D_ALLEGATI_BANDO
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER;


CREATE SEQUENCE SEQ_IUF_D_AMBITO_TEMATICO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_BANDO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_BANDO_AMM_COMPETEN
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_CONTROLLO_AMMINIST
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_CRITERIO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_DANNO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_DESCRIZIONE_INTERV
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_DETTAGLIO_INFO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_DETTAGLIO_INFO_CAT
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_EVENTO_CALAMITOSO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_GRUPPO_INFO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_GRUPPO_INFO_CATALO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_GRUPPO_TESTO_VERBA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_LEGAME_INFO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_LIVELLO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_NUMERO_LOTTO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_PRINCIPIO_SELEZION
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_TESTO_VERBALE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_TIPO_AGGREGAZIONE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_TIPO_CLASSIFICAZIO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_TIPO_LOCALIZZAZION
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_D_UNITA_MISURA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_L_LOG_BATCH
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_L_PROCESSO_BATCH
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_AGGREGAZIONE_INTER
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_ATTIVITA_PARTECIPA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_BANDO_COMUNE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_BANDO_LIVELLO_CRIT
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_BANDO_OGGETTO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_DANNO_SPECIE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_DOC_SPE_INT_ACC_SP
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_DOC_SPE_INT_PROC_O
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_DOC_SPESA_PROC_OGG
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_DOCUMEN_SPESA_INTE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_IMPORTI_RIPARTITI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_LIST_LIQUI_IMP_LIQ
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_LIVELLO_CRITERIO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_LIVELLO_FOCUS_AREA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_MISURAZIONE_INTERV
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_PROC_ASSICURAZ_COL
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_PROCEDIMEN_DANNO_F
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_PROCEDIMENTO_DANNO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_PROCEDIMENTO_SCORT
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_PROC_PRESTITI_AGRA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_PROC_PRODUZIONE_ZO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_PROC_SUPERFICIE_CO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_QUAD_OGG_CONTR_AMM
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_R_TIPO_DOC_RIC_OGGET
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ACCERTAMENTO_DANNO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ACCERTAMENTO_SPESE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ALLEGATI_GRADUATOR
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ALLEVAMENTO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ANALISI_RISCHIO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ANALISI_RISCHIO_IM
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ANOMALIA_PARTICELL
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ANOMALIE_CONTROLLI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ANTICIPO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ASSICURAZIONI_COLT
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ATTIVITA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ATTIVITA_BANDO_OGG
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_AZIENDA_BIO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_BPOL
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_BUDGET
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_CANI_GUARDIA_PASCO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_CENSITO_PRELI_OGUR
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_CONCESSIONE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_CONTATTI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_CONTROL_IN_LOCO_EX
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_CONTROL_IN_LOCO_IN
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_CONTROLLO_COLTURA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_CONTROLLO_IN_LOCO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DANNO_ATM
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DANNO_FAUNA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DATE_CENS_CINGHIAL
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DATE_CENS_OGUR
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DATI_BILANCIO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DATI_COMUNI_ELEM_Q
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DATI_DANNO_FAUNA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DATI_PROCEDIMEN_PU
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DATI_PROCEDIMENTO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DATO_ELEMENTO_QUAD
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DETTAGLIO_INTERVEN
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DETT_DOCUMENTO_SPE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DETT_RICEVUTA_PAGA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DICHIARAZIONE_SPES
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DOCUMENTI_RICHIEST
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DOCUMENTO_SPESA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_DOCUMENTO_SPESA_FI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ECONOMIA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ELAB_MASSIVA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ESECUZIONE_CONTROL
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ESITO_CONTROLLI_AM
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ESITO_FINALE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ESITO_OPERAZIONE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ESITO_TECNICO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ESTRAZIONE_CAMPION
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_FILE_ALLEGATI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_FILE_ALLEGATI_INTE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_FILE_FLUS_ANOM_SIG
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_FILE_LISTA_LIQUIDA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_FINE_LAVORI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_FLUSSO_ANOM_SIGOP
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_FORNITORE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_GRADUATORIA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_IMPORTI_ESTRAZ_DP
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_IMPORTI_LIQUIDATI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_IMPORTO_BUDG_ANNUA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_IMPORTO_DICHIARAZI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_INFO_CINGHIALI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_INFO_EXPOST
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_INTERVENTO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ITER_CONCESSIONE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ITER_PIA_FINANZ_LE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ITER_PIANO_FINANZI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ITER_PROCEDIMEN_GR
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ITER_PROCEDIMEN_OG
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_ITER_STO_AMBITI_TE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_LISTA_LIQUIDAZIONE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_LOCALIZZAZIONE_INT
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_LOG
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_MOD_CONCERTAZI_GAL
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NASR_ADESIONE_MISU
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NASR_ANAGRAFICA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NASR_ATTIVITA_SVOL
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NASR_CAMPIONE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NASR_ERRORI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NASR_IMP_ADES_SMIS
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NASR_IMP_ADES_TIPO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NASR_INTERVENTI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NASR_RICHPREMIOUBA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NASR_SUPERFICI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NASR_TIPOLOGIE_BAN
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_NOTIFICA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_OGUR
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_OGUR_ANNI_CENSITI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_OGUR_CENSIMENTO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_OGUR_DISTRETTI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_OGUR_IPOTESI_PRELI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_OP_CAMPO_LOCALIZZA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_OPERAZIONI_CAMPO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PARTECIPANTE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PARTICELLA_GIS
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PARTICELLA_IMPEGNO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PARTICELLA_PREMIO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PARTICELLA_UTILIZZ
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PARTICELLE_FAUNA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PASCOLO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PIANO_DISTRET_OGUR
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PIANO_FINANZIARIO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PIANO_FINANZIAR_LE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PIANO_OGUR
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_POSIZIONE_GRADUATO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PRATICHE_CONCESSIO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PREMIO_ALLEVAM
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PREMIO_COLTURE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PREMIO_COMPLESSIVO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PRESTITI_AGRARI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROC_DOMANDA_PREC
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROCEDIM_AMMINISTR
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROCEDIME_CONTO_CO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROCEDIMEN_ESTRATT
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROCEDIMEN_ESTR_EX
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROCEDIMENTO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROCEDIMENTO_AZIEN
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROCEDIMENTO_GRUPP
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROCEDIMENTO_OGGET
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROCEDIM_OGGET_QUA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROCEDIM_OGGET_STA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PROC_OGGETTO_SANZI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PRODOTTO_TRASFORMA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PRODUZIONE_AZIENDA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PRODUZIONE_VENDIBI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PRODUZIONE_ZOOTECN
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PUBBLICA_ALLEVAMEN
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PUBBLICA_PARTICELL
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PUNTEGGIO_CALCOLAT
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_PUNTEGGIO_ISTRUTTO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_RAZZE_ALLEVATE
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_REFERENTE_PROGETTO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_REGIME_AIUTO_PREVI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_REGIME_AIUTO_RICHI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_RENDICONTAZIO_SPES
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_RICEVUTA_PAGAMENTO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_RIEPILOGO_DANNO_FA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_RISORSE_LIVEL_BAND
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_SCORTA_MAGAZZINO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_SELEZIONE_INFO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_SOLUZIONE_ANOMALIA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_SOSPENSIONE_ANTICI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_STORICO_AMBITI_TEM
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_STORICO_LIVELLO_FA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_SUPERFICIE_COLTURA
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_VALORI_INSERITI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_VALORI_PARAMETRI
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_T_VISITA_LUOGO
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_W_AZ_DA_PART_1014_AZ
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_W_DATI_PART_1014_AZ1
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_W_DETT_INTE_PROC_OGG
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_W_FILE_ALL_INTERV_PR
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_W_LOCAL_INTE_PROC_OG
  START WITH 1 NOCACHE;


CREATE SEQUENCE SEQ_IUF_W_PARTICELL_1014_AZ1
  START WITH 1 NOCACHE;

  
CREATE OR REPLACE TYPE  OBJ_CONTROLLO AS OBJECT
(
  CODICE_CONTROLLO VARCHAR2(20),
  DESC_CONTROLLO   VARCHAR2(500),
  MESSAGGIO_ERRORE VARCHAR2(2000)
);
/

CREATE OR REPLACE TYPE LIST_CONTROLLO AS TABLE OF OBJ_CONTROLLO;
/  

-------------------------
CREATE SEQUENCE seq_iuf_d_categoria_anag INCREMENT BY 1 MAXVALUE 9999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_d_check_list_item INCREMENT BY 1 MAXVALUE 9999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_d_extra_field_camp INCREMENT BY 1 MAXVALUE 9999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_d_extra_field_trap INCREMENT BY 1 MAXVALUE 9999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_d_extra_field_visual INCREMENT BY 1 MAXVALUE 9999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_d_organismo_nocivo INCREMENT BY 1 MAXVALUE 9999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_d_specie_vegetale INCREMENT BY 1 MAXVALUE 9999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_d_tipo_area INCREMENT BY 1 MAXVALUE 9999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_d_tipo_campione INCREMENT BY 1 MAXVALUE 9999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_d_tipo_trappola INCREMENT BY 1 MAXVALUE 9999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_r_specie_on_periodo INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_anagrafica INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_campionamento INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_esito_campione INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_foto INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_ispezione_visiva INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_missione INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_percorso_rilevazioni INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_previsione_on_est INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_previsione_on_reg INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_rilevazione INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_sopralluogo_vivaio INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_trappola INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_trappolaggio INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_verbale INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_manutenzione_trappol INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE SEQUENCE seq_iuf_t_specie_on_precaricat INCREMENT BY 1 MAXVALUE 9999999999 MINVALUE 1 NOCACHE ORDER;

CREATE TABLE iuf_d_anfi (
    id_anfi                        NUMBER(4) NOT NULL,
    tipologia_test_di_laboratorio  VARCHAR2(1000 CHAR) NOT NULL,
    costo                          NUMBER(8, 2)
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_d_anfi IS
    'Analisi di laboratorio presenti nel sistema esterno ANFI';

COMMENT ON COLUMN iuf_d_anfi.id_anfi IS
    'Identificativo del record nel sistema ANFI';

COMMENT ON COLUMN iuf_d_anfi.tipologia_test_di_laboratorio IS
    'Descrizione del tipo di analisi/test di laboratorio';

COMMENT ON COLUMN iuf_d_anfi.costo IS
    'Costo in euro dell''esame';

CREATE UNIQUE INDEX pk_iuf_d_anfi ON
    iuf_d_anfi (
        id_anfi
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_d_anfi
    ADD CONSTRAINT pk_iuf_d_anfi PRIMARY KEY ( id_anfi )
        USING INDEX pk_iuf_d_anfi;

CREATE TABLE iuf_d_categoria_anag (
    id_categoria_anag  NUMBER(4) NOT NULL,
    descrizione        VARCHAR2(1000 BYTE) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_d_categoria_anag IS
    'Categorie anagrafiche';

COMMENT ON COLUMN iuf_d_categoria_anag.id_categoria_anag IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_d_categoria_anag.descrizione IS
    'Descrizione della catagoria anagrafica';

CREATE UNIQUE INDEX pk_iuf_d_categoria_anag ON
    iuf_d_categoria_anag (
        id_categoria_anag
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_d_categoria_anag
    ADD CONSTRAINT pk_iuf_d_categoria_anag PRIMARY KEY ( id_categoria_anag )
        USING INDEX pk_iuf_d_categoria_anag;

CREATE TABLE iuf_d_check_list_item (
    id_check_list_item  NUMBER(4) NOT NULL,
    descrizione         VARCHAR2(1000 BYTE) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_d_check_list_item IS
    'Elementi della check list sopralluogo';

COMMENT ON COLUMN iuf_d_check_list_item.id_check_list_item IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_d_check_list_item.descrizione IS
    'Descrizione elemento della check list';

CREATE UNIQUE INDEX pk_iuf_d_check_list_item ON
    iuf_d_check_list_item (
        id_check_list_item
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_d_check_list_item
    ADD CONSTRAINT pk_iuf_d_check_list_item PRIMARY KEY ( id_check_list_item )
        USING INDEX pk_iuf_d_check_list_item;

CREATE TABLE iuf_d_extra_field_camp (
    id_extra_field_camp  NUMBER(4) NOT NULL,
    label                VARCHAR2(1000 BYTE) NOT NULL,
    value                VARCHAR2(4000 BYTE) NOT NULL,
    data_inizio_val      DATE DEFAULT sysdate NOT NULL,
    data_fine_val        DATE
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_d_extra_field_camp IS
    'Campi aggiuntivi afferenti alla tabella campionamento';

COMMENT ON COLUMN iuf_d_extra_field_camp.id_extra_field_camp IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_d_extra_field_camp.label IS
    'Etichetta che rappresenta il significato del valore';

COMMENT ON COLUMN iuf_d_extra_field_camp.value IS
    'Valore del campo extra';

COMMENT ON COLUMN iuf_d_extra_field_camp.data_inizio_val IS
    'Data inizio validità del record';

COMMENT ON COLUMN iuf_d_extra_field_camp.data_fine_val IS
    'Data fine validità del record';

CREATE UNIQUE INDEX pk_iuf_d_extra_field_camp ON
    iuf_d_extra_field_camp (
        id_extra_field_camp
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_d_extra_field_camp
    ADD CONSTRAINT pk_iuf_d_extra_field_camp PRIMARY KEY ( id_extra_field_camp )
        USING INDEX pk_iuf_d_extra_field_camp;

CREATE TABLE iuf_d_extra_field_trap (
    id_extra_field_trap  NUMBER(4) NOT NULL,
    label                VARCHAR2(1000 BYTE) NOT NULL,
    value                VARCHAR2(4000 BYTE) NOT NULL,
    data_inizio_val      DATE DEFAULT sysdate NOT NULL,
    data_fine_val        DATE
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_d_extra_field_trap IS
    'Campi aggiuntivi afferenti alla tabella trappolaggio';

COMMENT ON COLUMN iuf_d_extra_field_trap.id_extra_field_trap IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_d_extra_field_trap.label IS
    'Etichetta che rappresenta il significato del valore';

COMMENT ON COLUMN iuf_d_extra_field_trap.value IS
    'Valore del campo extra';

COMMENT ON COLUMN iuf_d_extra_field_trap.data_inizio_val IS
    'Data inizio validità del record';

COMMENT ON COLUMN iuf_d_extra_field_trap.data_fine_val IS
    'Data fine validità del record';

CREATE UNIQUE INDEX pk_iuf_d_extra_field_trap ON
    iuf_d_extra_field_trap (
        id_extra_field_trap
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_d_extra_field_trap
    ADD CONSTRAINT pk_iuf_d_extra_field_trap PRIMARY KEY ( id_extra_field_trap )
        USING INDEX pk_iuf_d_extra_field_trap;

CREATE TABLE iuf_d_extra_field_visual (
    id_extra_field_visual  NUMBER(4) NOT NULL,
    label                  VARCHAR2(1000 BYTE) NOT NULL,
    value                  VARCHAR2(4000 BYTE) NOT NULL,
    data_inizio_val        DATE DEFAULT sysdate NOT NULL,
    data_fine_val          DATE
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_d_extra_field_visual IS
    'Campi aggiuntivi afferenti alla tabella ispezione visiva';

COMMENT ON COLUMN iuf_d_extra_field_visual.id_extra_field_visual IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_d_extra_field_visual.label IS
    'Etichetta che rappresenta il significato del valore';

COMMENT ON COLUMN iuf_d_extra_field_visual.value IS
    'Valore del campo extra';

COMMENT ON COLUMN iuf_d_extra_field_visual.data_inizio_val IS
    'Data inizio validità del record';

COMMENT ON COLUMN iuf_d_extra_field_visual.data_fine_val IS
    'Data fine validità del record';

CREATE UNIQUE INDEX pk_iuf_d_extra_field_visual ON
    iuf_d_extra_field_visual (
        id_extra_field_visual
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_d_extra_field_visual
    ADD CONSTRAINT pk_iuf_d_extra_field_visual PRIMARY KEY ( id_extra_field_visual )
        USING INDEX pk_iuf_d_extra_field_visual;

CREATE TABLE iuf_d_organismo_nocivo (
    id_organismo_nocivo            NUMBER(4) NOT NULL,
    nome_latino      VARCHAR2(1000 BYTE) NOT NULL,
    sigla            VARCHAR2(1000 BYTE) NOT NULL,
    euro             CHAR(1 BYTE) NOT NULL,
    data_inizio_val  DATE DEFAULT sysdate NOT NULL,
    data_fine_val    DATE
)
TABLESPACE iuffi_tbl LOGGING;

ALTER TABLE iuf_d_organismo_nocivo
    ADD CONSTRAINT check_s_n CHECK ( euro IN ( 'N', 'S' ) );

COMMENT ON TABLE iuf_d_organismo_nocivo IS
    'Organismi nocivi';

COMMENT ON COLUMN iuf_d_organismo_nocivo.id_organismo_nocivo IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_d_organismo_nocivo.nome_latino IS
    'Nome scientifico della specie organismo nocivo';

COMMENT ON COLUMN iuf_d_organismo_nocivo.sigla IS
    'Codifica dell''organismo nocivo nota agli ispettori in campo';

COMMENT ON COLUMN iuf_d_organismo_nocivo.euro IS
    'Flag S/N - Indica se l''organismo nocivo fa parte dell’elenco del programma ufficiale di indagine ai fini della rendicontazione finanziaria';

COMMENT ON COLUMN iuf_d_organismo_nocivo.data_inizio_val IS
    'Data inizio validità del record';

COMMENT ON COLUMN iuf_d_organismo_nocivo.data_fine_val IS
    'Data fine validità del record';

CREATE UNIQUE INDEX pk_iuf_d_organismo_nocivo ON
    iuf_d_organismo_nocivo (
        id_organismo_nocivo
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_d_organismo_nocivo
    ADD CONSTRAINT pk_iuf_d_organismo_nocivo PRIMARY KEY ( id_organismo_nocivo )
        USING INDEX pk_iuf_d_organismo_nocivo;

CREATE TABLE iuf_d_specie_vegetale (
    id_specie_vegetale  NUMBER(4) NOT NULL,
    genere_specie       VARCHAR2(1000 BYTE) NOT NULL,
    nome_volgare        VARCHAR2(1000 BYTE) NOT NULL,
    data_inizio_val     DATE NOT NULL,
    data_fine_val       DATE
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_d_specie_vegetale IS
    'Specie vegetale';

COMMENT ON COLUMN iuf_d_specie_vegetale.id_specie_vegetale IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_d_specie_vegetale.genere_specie IS
    'Nome scientifico della specie vegetale';

COMMENT ON COLUMN iuf_d_specie_vegetale.nome_volgare IS
    'Nome comune della specie vegetale';

COMMENT ON COLUMN iuf_d_specie_vegetale.data_inizio_val IS
    'Data inizio validità del record';

COMMENT ON COLUMN iuf_d_specie_vegetale.data_fine_val IS
    'Data fine validità del record';

CREATE UNIQUE INDEX pk_iuf_d_specie_vegetale ON
    iuf_d_specie_vegetale (
        id_specie_vegetale
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_d_specie_vegetale
    ADD CONSTRAINT pk_iuf_d_specie_vegetale PRIMARY KEY ( id_specie_vegetale )
        USING INDEX pk_iuf_d_specie_vegetale;

CREATE TABLE iuf_d_tipo_area (
    id_tipo_area         NUMBER(4) NOT NULL,
    desc_tipo_area       VARCHAR2(1000 CHAR) NOT NULL,
    codice_ufficiale     VARCHAR2(1000 CHAR) NOT NULL,
    codice_app_in_campo  VARCHAR2(1000 CHAR) NOT NULL,
    data_inizio_val      DATE NOT NULL,
    data_fine_val        DATE
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_d_tipo_area IS
    'Tipologie di area relative alla missione';

COMMENT ON COLUMN iuf_d_tipo_area.id_tipo_area IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_d_tipo_area.desc_tipo_area IS
    'Descrizione della tipologia area';

COMMENT ON COLUMN iuf_d_tipo_area.codice_ufficiale IS
    'Codice ufficiale';

COMMENT ON COLUMN iuf_d_tipo_area.codice_app_in_campo IS
    'Codice utilizzato dall''app mobile in campo';

COMMENT ON COLUMN iuf_d_tipo_area.data_inizio_val IS
    'Data inizio validità del record';

COMMENT ON COLUMN iuf_d_tipo_area.data_fine_val IS
    'Data fine validità del record';

CREATE UNIQUE INDEX pk_iuf_d_tipo_area ON
    iuf_d_tipo_area (
        id_tipo_area
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_d_tipo_area
    ADD CONSTRAINT pk_iuf_d_tipo_area PRIMARY KEY ( id_tipo_area )
        USING INDEX pk_iuf_d_tipo_area;

CREATE TABLE iuf_d_tipo_campione (
    id_tipo_campione    NUMBER(4) NOT NULL,
    tipologia_campione  VARCHAR2(1000 BYTE) NOT NULL,
    costo               NUMBER(8, 2) NOT NULL,
    data_inizio_val     DATE NOT NULL,
    data_fine_val       DATE
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_d_tipo_campione IS
    'Tipo campione (matrice) oggetto di prelevamento in fase di campionamento';

COMMENT ON COLUMN iuf_d_tipo_campione.id_tipo_campione IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_d_tipo_campione.tipologia_campione IS
    'Descrizione della tipologia campione (matrice)';

COMMENT ON COLUMN iuf_d_tipo_campione.costo IS
    'Costo in euro del tipo campione';

COMMENT ON COLUMN iuf_d_tipo_campione.data_inizio_val IS
    'Data inizio validità del record';

COMMENT ON COLUMN iuf_d_tipo_campione.data_fine_val IS
    'Data fine validità del record';

CREATE UNIQUE INDEX pk_iuf_d_tipo_campione ON
    iuf_d_tipo_campione (
        id_tipo_campione
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_d_tipo_campione
    ADD CONSTRAINT pk_iuf_d_tipo_campione PRIMARY KEY ( id_tipo_campione )
        USING INDEX pk_iuf_d_tipo_campione;

CREATE TABLE iuf_d_tipo_trappola (
    id_tipo_trappola    NUMBER(4) NOT NULL,
    tipologia_trappola  VARCHAR2(1000 BYTE) NOT NULL,
    sfr_code            VARCHAR2(1000 BYTE) NOT NULL,
    costo               NUMBER(8, 2) NOT NULL,
    data_inizio_val     DATE DEFAULT sysdate NOT NULL,
    data_fine_val       DATE
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_d_tipo_trappola IS
    'Tipologia trappola';

COMMENT ON COLUMN iuf_d_tipo_trappola.id_tipo_trappola IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_d_tipo_trappola.tipologia_trappola IS
    'Descrizione della tipologia trappola';

COMMENT ON COLUMN iuf_d_tipo_trappola.sfr_code IS
    'Codice SFR';

COMMENT ON COLUMN iuf_d_tipo_trappola.costo IS
    'costo in euro della trappola';

COMMENT ON COLUMN iuf_d_tipo_trappola.data_inizio_val IS
    'Data inizio validità del record';

COMMENT ON COLUMN iuf_d_tipo_trappola.data_fine_val IS
    'Data fine validità del record';

CREATE UNIQUE INDEX pk_iuf_d_tipo_trappola ON
    iuf_d_tipo_trappola (
        id_tipo_trappola
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_d_tipo_trappola
    ADD CONSTRAINT pk_iuf_d_tipo_trappola PRIMARY KEY ( id_tipo_trappola )
        USING INDEX pk_iuf_d_tipo_trappola;

CREATE TABLE iuf_r_campionamento_spec_on (
    id_campionamento  NUMBER(10) NOT NULL,
    id_specie_on      NUMBER(4) NOT NULL,
    presenza          CHAR(1 BYTE) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

ALTER TABLE iuf_r_campionamento_spec_on
    ADD CONSTRAINT check_presenza_s_n CHECK ( presenza IN ( 'N', 'S' ) );

COMMENT ON TABLE iuf_r_campionamento_spec_on IS
    'Organismi nocivi associati al campionamento';

COMMENT ON COLUMN iuf_r_campionamento_spec_on.id_campionamento IS
    'Identificativo del campionamento';

COMMENT ON COLUMN iuf_r_campionamento_spec_on.id_specie_on IS
    'Identificativo dell''organismo nocivo';

COMMENT ON COLUMN iuf_r_campionamento_spec_on.presenza IS
    'Flag S/N - Indica se l''organismo nocivo è stato rilevamento o meno nel campionamento';

CREATE UNIQUE INDEX pk_iuf_r_campionamento_spec_on ON
    iuf_r_campionamento_spec_on (
        id_campionamento
    ASC,
        id_specie_on
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_r_campionamento_spec_on
    ADD CONSTRAINT pk_iuf_r_campionamento_spec_on PRIMARY KEY ( id_campionamento,
                                                                id_specie_on )
        USING INDEX pk_iuf_r_campionamento_spec_on;

CREATE TABLE iuf_r_campione_foto (
    id_campionamento  NUMBER(10) NOT NULL,
    id_foto           NUMBER(10) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_r_campione_foto IS
    'Fotografie effettuate nel campionamento';

COMMENT ON COLUMN iuf_r_campione_foto.id_campionamento IS
    'Riferimento al campionamento';

COMMENT ON COLUMN iuf_r_campione_foto.id_foto IS
    'Riferimento alla foto';

CREATE UNIQUE INDEX pk_iuf_r_campione_foto ON
    iuf_r_campione_foto (
        id_campionamento
    ASC,
        id_foto
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_r_campione_foto
    ADD CONSTRAINT pk_iuf_r_campione_foto PRIMARY KEY ( id_campionamento,
                                                        id_foto )
        USING INDEX pk_iuf_r_campione_foto;

CREATE TABLE iuf_r_check_list_sop (
    id_check_list_item     NUMBER(4) NOT NULL,
    id_sopralluogo_vivaio  NUMBER(10) NOT NULL,
    checked                CHAR(1 BYTE) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

ALTER TABLE iuf_r_check_list_sop
    ADD CONSTRAINT check__s_n CHECK ( checked IN ( 'N', 'S' ) );

COMMENT ON TABLE iuf_r_check_list_sop IS
    'Relazione check list sopralluogo - check list item';

COMMENT ON COLUMN iuf_r_check_list_sop.id_check_list_item IS
    'Identificativo del check item';

COMMENT ON COLUMN iuf_r_check_list_sop.id_sopralluogo_vivaio IS
    'Identificativo del sopralluogo vivaio';

COMMENT ON COLUMN iuf_r_check_list_sop.checked IS
    'Flag S/N - Indica se l''item è checkato o meno';

CREATE UNIQUE INDEX pk_iuf_r_check_list_sop ON
    iuf_r_check_list_sop (
        id_check_list_item
    ASC,
        id_sopralluogo_vivaio
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_r_check_list_sop
    ADD CONSTRAINT pk_iuf_r_check_list_sop PRIMARY KEY ( id_check_list_item,
                                                         id_sopralluogo_vivaio )
        USING INDEX pk_iuf_r_check_list_sop;

CREATE TABLE iuf_r_extra_field_camp (
    id_campionamento  NUMBER(10) NOT NULL,
    id_extra_field    NUMBER(4) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_r_extra_field_camp IS
    'Extra field associati al campionamento';

COMMENT ON COLUMN iuf_r_extra_field_camp.id_campionamento IS
    'Identificativo del campionamento';

COMMENT ON COLUMN iuf_r_extra_field_camp.id_extra_field IS
    'Identificativo del campo extra nella relativa tabella';

CREATE UNIQUE INDEX pk_iuf_r_extra_field_camp ON
    iuf_r_extra_field_camp (
        id_campionamento
    ASC,
        id_extra_field
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_r_extra_field_camp
    ADD CONSTRAINT pk_iuf_r_extra_field_camp PRIMARY KEY ( id_campionamento,
                                                           id_extra_field )
        USING INDEX pk_iuf_r_extra_field_camp;

CREATE TABLE iuf_r_extra_field_trap (
    id_trappolaggio  NUMBER(10) NOT NULL,
    id_extra_field   NUMBER(4) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_r_extra_field_trap IS
    'Extra field associati al trappolaggio';

COMMENT ON COLUMN iuf_r_extra_field_trap.id_trappolaggio IS
    'Identificativo del trappolaggio';

COMMENT ON COLUMN iuf_r_extra_field_trap.id_extra_field IS
    'Identificativo del campo extra nella relativa tabella';

CREATE UNIQUE INDEX pk_iuf_r_extra_field_trap ON
    iuf_r_extra_field_trap (
        id_trappolaggio
    ASC,
        id_extra_field
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_r_extra_field_trap
    ADD CONSTRAINT pk_iuf_r_extra_field_trap PRIMARY KEY ( id_trappolaggio,
                                                           id_extra_field )
        USING INDEX pk_iuf_r_extra_field_trap;

CREATE TABLE iuf_r_extra_field_visual (
    id_ispezione    NUMBER(10) NOT NULL,
    id_extra_field  NUMBER(4) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_r_extra_field_visual IS
    'Extra field associati all''ispezione visiva';

COMMENT ON COLUMN iuf_r_extra_field_visual.id_ispezione IS
    'Identificativo dell''ispezione visiva';

COMMENT ON COLUMN iuf_r_extra_field_visual.id_extra_field IS
    'Identificativo del campo extra nella relativa tabella';

CREATE UNIQUE INDEX pk_iuf_r_extra_field_visual ON
    iuf_r_extra_field_visual (
        id_ispezione
    ASC,
        id_extra_field
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_r_extra_field_visual
    ADD CONSTRAINT pk_iuf_r_extra_field_visual PRIMARY KEY ( id_ispezione,
                                                             id_extra_field )
        USING INDEX pk_iuf_r_extra_field_visual;

CREATE TABLE iuf_r_isp_visiva_foto (
    id_ispezione_visiva  NUMBER(10) NOT NULL,
    id_foto              NUMBER(10) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_r_isp_visiva_foto IS
    'Fotografie associate all''ispezione visiva';

COMMENT ON COLUMN iuf_r_isp_visiva_foto.id_ispezione_visiva IS
    'Riferimento all''ispezione visiva';

COMMENT ON COLUMN iuf_r_isp_visiva_foto.id_foto IS
    'Riferimento alla foto';

CREATE UNIQUE INDEX pk_iuf_r_isp_visiva_foto ON
    iuf_r_isp_visiva_foto (
        id_ispezione_visiva
    ASC,
        id_foto
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_r_isp_visiva_foto
    ADD CONSTRAINT pk_iuf_r_isp_visiva_foto PRIMARY KEY ( id_ispezione_visiva,
                                                          id_foto )
        USING INDEX pk_iuf_r_isp_visiva_foto;

CREATE TABLE iuf_r_isp_visiva_spec_on (
    id_ispezione  NUMBER(10) NOT NULL,
    id_specie_on  NUMBER(4) NOT NULL,
    note          VARCHAR2(4000 BYTE)
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_r_isp_visiva_spec_on IS
    'Specie e organimi nocivi rilevati nell''ispezione visiva';

COMMENT ON COLUMN iuf_r_isp_visiva_spec_on.id_ispezione IS
    'Identificativo dell''ispezione';

COMMENT ON COLUMN iuf_r_isp_visiva_spec_on.id_specie_on IS
    'Identificativo dell''organismo nocivo';

COMMENT ON COLUMN iuf_r_isp_visiva_spec_on.note IS
    'Note';

CREATE UNIQUE INDEX pk_iuf_r_isp_visiva_spec_on ON
    iuf_r_isp_visiva_spec_on (
        id_ispezione
    ASC,
        id_specie_on
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_r_isp_visiva_spec_on
    ADD CONSTRAINT pk_iuf_r_isp_visiva_spec_on PRIMARY KEY ( id_ispezione,
                                                             id_specie_on )
        USING INDEX pk_iuf_r_isp_visiva_spec_on;

CREATE TABLE iuf_r_ispettore_aggiunto (
    id_missione    NUMBER(10) NOT NULL,
    id_anagrafica  NUMBER(10) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_r_ispettore_aggiunto IS
    'Ispettori secondari (aggiuntivi) per la missione';

COMMENT ON COLUMN iuf_r_ispettore_aggiunto.id_missione IS
    'Identificativo della missione';

COMMENT ON COLUMN iuf_r_ispettore_aggiunto.id_anagrafica IS
    'Identificativo dell''anagrafica relativa all''ispettore secondario';

CREATE UNIQUE INDEX pk_iuf_r_ispettore_aggiunto ON
    iuf_r_ispettore_aggiunto (
        id_missione
    ASC,
        id_anagrafica
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_r_ispettore_aggiunto
    ADD CONSTRAINT pk_iuf_r_ispettore_aggiunto PRIMARY KEY ( id_missione,
                                                             id_anagrafica )
        USING INDEX pk_iuf_r_ispettore_aggiunto;

CREATE TABLE iuf_r_specie_on_periodo (
    id_specie_on_periodo  NUMBER(10) NOT NULL,
    id_specie_vegetale    NUMBER(4) NOT NULL,
    id_on_da_monitorare   NUMBER(4) NOT NULL,
    id_tipo_campione      NUMBER(4),
    mese_di_monitoraggio  NUMBER(2) NOT NULL,
    data_inizio_val       DATE DEFAULT sysdate NOT NULL,
    data_fine_val         DATE
)
TABLESPACE iuffi_tbl LOGGING;

ALTER TABLE iuf_r_specie_on_periodo
    ADD CONSTRAINT check_mese CHECK ( mese_di_monitoraggio BETWEEN 1 AND 12 );

COMMENT ON TABLE iuf_r_specie_on_periodo IS
    'Regole di compatibilità specie vegetale, tipo campione, organismo nocivo nel mese di riferimento';

COMMENT ON COLUMN iuf_r_specie_on_periodo.id_specie_on_periodo IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_r_specie_on_periodo.id_specie_vegetale IS
    'Riferimento alla specie vegetale';

COMMENT ON COLUMN iuf_r_specie_on_periodo.id_on_da_monitorare IS
    'Riferimento all''organismo nocivo';

COMMENT ON COLUMN iuf_r_specie_on_periodo.id_tipo_campione IS
    'Riferimento al tipo campione';

COMMENT ON COLUMN iuf_r_specie_on_periodo.mese_di_monitoraggio IS
    'Mese dell''anno';

COMMENT ON COLUMN iuf_r_specie_on_periodo.data_inizio_val IS
    'Data inizio validità del record';

COMMENT ON COLUMN iuf_r_specie_on_periodo.data_fine_val IS
    'Data fine validità del record';

CREATE UNIQUE INDEX pk_iuf_r_specie_on_periodo ON
    iuf_r_specie_on_periodo (
        id_specie_on_periodo
    ASC )
        TABLESPACE iuffi_idx LOGGING;

CREATE UNIQUE INDEX un_iuf_r_specie_on_periodo ON
    iuf_r_specie_on_periodo (
        id_specie_vegetale
    ASC,
        id_on_da_monitorare
    ASC,
        id_tipo_campione
    ASC,
        mese_di_monitoraggio
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_r_specie_on_periodo
    ADD CONSTRAINT pk_iuf_r_specie_on_periodo PRIMARY KEY ( id_specie_on_periodo )
        USING INDEX pk_iuf_r_specie_on_periodo;

ALTER TABLE iuf_r_specie_on_periodo
    ADD CONSTRAINT un_iuf_r_specie_on_periodo UNIQUE ( id_specie_vegetale,
                                                       id_on_da_monitorare,
                                                       id_tipo_campione,
                                                       mese_di_monitoraggio )
        USING INDEX un_iuf_r_specie_on_periodo;

CREATE TABLE iuf_r_trappolaggio_foto (
    id_trappolaggio  NUMBER(10) NOT NULL,
    id_foto          NUMBER(10) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_r_trappolaggio_foto IS
    'Fotografie della trappola';

COMMENT ON COLUMN iuf_r_trappolaggio_foto.id_trappolaggio IS
    'Riferimento al trappolaggio in cui è stata effettuata la foto';

COMMENT ON COLUMN iuf_r_trappolaggio_foto.id_foto IS
    'Riferimento alla foto';

CREATE UNIQUE INDEX pk_iuf_r_trappolaggio_foto ON
    iuf_r_trappolaggio_foto (
        id_trappolaggio
    ASC,
        id_foto
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_r_trappolaggio_foto
    ADD CONSTRAINT pk_iuf_r_trappolaggio_foto PRIMARY KEY ( id_trappolaggio,
                                                            id_foto )
        USING INDEX pk_iuf_r_trappolaggio_foto;

CREATE TABLE iuf_t_anagrafica (
    id_anagrafica      NUMBER(10) NOT NULL,
    nome               VARCHAR2(1000 BYTE) NOT NULL,
    cognome            VARCHAR2(1000 BYTE) NOT NULL,
    id_anagrafica_est  NUMBER(10),
    id_categoria       NUMBER(4) NOT NULL,
    paga_oraria        NUMBER(8, 2) NOT NULL,
    subcontractor      CHAR(1 BYTE) DEFAULT 'N' NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

ALTER TABLE iuf_t_anagrafica
    ADD CONSTRAINT check_subcontractor CHECK ( subcontractor IN ( 'N', 'S' ) );

COMMENT ON TABLE iuf_t_anagrafica IS
    'Anagrafiche ispettori e altri soggetti';

COMMENT ON COLUMN iuf_t_anagrafica.id_anagrafica IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_anagrafica.nome IS
    'Nome/Ragione sociale del soggetto';

COMMENT ON COLUMN iuf_t_anagrafica.cognome IS
    'Cognome del soggetto';

COMMENT ON COLUMN iuf_t_anagrafica.id_anagrafica_est IS
    'Identificativo della anagrafica esterna';

COMMENT ON COLUMN iuf_t_anagrafica.id_categoria IS
    'identificativo della categoria anagrafica';

COMMENT ON COLUMN iuf_t_anagrafica.paga_oraria IS
    'Paga oraria del soggetto in euro';

COMMENT ON COLUMN iuf_t_anagrafica.subcontractor IS
    'Flag S/N - Indica se l''anagrafica è relativa ad un collaboratore a contratto';

CREATE UNIQUE INDEX pk_iuf_t_anagrafica ON
    iuf_t_anagrafica (
        id_anagrafica
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_anagrafica
    ADD CONSTRAINT pk_iuf_t_anagrafica PRIMARY KEY ( id_anagrafica )
        USING INDEX pk_iuf_t_anagrafica;

CREATE TABLE iuf_t_campionamento (
    id_campionamento    NUMBER(10) NOT NULL,
    id_rilevazione      NUMBER(10) NOT NULL,
    id_specie_vegetale  NUMBER(4) NOT NULL,
    id_tipo_campione    NUMBER(4) NOT NULL,
    istat_comune        CHAR(6 BYTE) NOT NULL,
    id_anfi             NUMBER(4) NOT NULL,
    id_esito            NUMBER(10) NOT NULL,
    latitudine          NUMBER(13, 10),
    longitudine         NUMBER(13, 10),
    data_rilevazione    DATE
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_t_campionamento IS
    'Campionamento effettuato nella missione';

COMMENT ON COLUMN iuf_t_campionamento.id_campionamento IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_campionamento.id_rilevazione IS
    'Identificativo della rilevazione in campo';

COMMENT ON COLUMN iuf_t_campionamento.id_specie_vegetale IS
    'Identificativo della specie vegetale';

COMMENT ON COLUMN iuf_t_campionamento.id_tipo_campione IS
    'Identificativo del tipo campione prelevato';

COMMENT ON COLUMN iuf_t_campionamento.istat_comune IS
    'Codice Istat del comune';

COMMENT ON COLUMN iuf_t_campionamento.id_anfi IS
    'Identificativo ANFI (sistema esterno)';

COMMENT ON COLUMN iuf_t_campionamento.id_esito IS
    'Identificativo dell''esito del campionamento';

COMMENT ON COLUMN iuf_t_campionamento.latitudine IS
    'Latitudine (UTM)';

COMMENT ON COLUMN iuf_t_campionamento.longitudine IS
    'Longitudine (UTM)';

COMMENT ON COLUMN iuf_t_campionamento.data_rilevazione IS
    'Data e ora rilevazione in campo';

CREATE UNIQUE INDEX pk_iuf_t_campionamento ON
    iuf_t_campionamento (
        id_campionamento
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_campionamento
    ADD CONSTRAINT pk_iuf_t_campionamento PRIMARY KEY ( id_campionamento )
        USING INDEX pk_iuf_t_campionamento;

CREATE TABLE iuf_t_esito_campione (
    id_esito_campione  NUMBER(10) NOT NULL,
    id_campionamento   NUMBER(10) NOT NULL,
    num_registro_lab   VARCHAR2(1000 BYTE) NOT NULL,
    esito              VARCHAR2(1000 BYTE),
    referto            BLOB,
    nome_file          VARCHAR2(200 BYTE)
)
TABLESPACE iuffi_tbl LOGGING
    LOB ( referto ) STORE AS (
        TABLESPACE iuffi_lob
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

COMMENT ON TABLE iuf_t_esito_campione IS
    'Esito del campionamento';

COMMENT ON COLUMN iuf_t_esito_campione.id_esito_campione IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_esito_campione.id_campionamento IS
    'Identificativo del campionamento';

COMMENT ON COLUMN iuf_t_esito_campione.num_registro_lab IS
    'Iidentifica il referto nel sistema esterno che ha analizzato il campione (es. Rapporto di prova)';

COMMENT ON COLUMN iuf_t_esito_campione.esito IS
    'Esito del campione';

COMMENT ON COLUMN iuf_t_esito_campione.referto IS
    'File del referto (es. pdf del rapporto di prova)';

COMMENT ON COLUMN iuf_t_esito_campione.nome_file IS
    'Nome del file inserito nel campo referto';

CREATE UNIQUE INDEX pk_iuf_t_esito_campione ON
    iuf_t_esito_campione (
        id_esito_campione
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_esito_campione
    ADD CONSTRAINT pk_iuf_t_esito_campione PRIMARY KEY ( id_esito_campione )
        USING INDEX pk_iuf_t_esito_campione;

CREATE TABLE iuf_t_foto (
    id_foto    NUMBER(10) NOT NULL,
    foto       BLOB,
    nome_file  VARCHAR2(200 BYTE),
    data_foto  DATE NOT NULL,
    tag        VARCHAR2(30 BYTE),
    note       VARCHAR2(4000 BYTE)
)
TABLESPACE iuffi_tbl LOGGING
    LOB ( foto ) STORE AS (
        TABLESPACE iuffi_lob
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

COMMENT ON TABLE iuf_t_foto IS
    'Foto associate alla missione nella varie entità';

COMMENT ON COLUMN iuf_t_foto.id_foto IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_foto.foto IS
    'File immagine della foto';

COMMENT ON COLUMN iuf_t_foto.nome_file IS
    'Nome del file contenuto nel campo foto';

COMMENT ON COLUMN iuf_t_foto.data_foto IS
    'Data in cui è stata effettuata la foto';

COMMENT ON COLUMN iuf_t_foto.tag IS
    'Tag per eventuale indicizzazione foto';

COMMENT ON COLUMN iuf_t_foto.note IS
    'Note associate alla foto';

CREATE UNIQUE INDEX pk_iuf_t_foto ON
    iuf_t_foto (
        id_foto
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_foto
    ADD CONSTRAINT pk_iuf_t_foto PRIMARY KEY ( id_foto )
        USING INDEX pk_iuf_t_foto;

CREATE TABLE iuf_t_ispezione_visiva (
    id_ispezione        NUMBER(10) NOT NULL,
    id_rilevazione      NUMBER(10) NOT NULL,
    numero_aviv         NUMBER(10) NOT NULL,
    id_specie_vegetale  NUMBER(4) NOT NULL,
    superfice           NUMBER(8, 2),
    numero_piante       NUMBER(10),
    presenza_on         CHAR(1 BYTE) NOT NULL,
    istat_comune        CHAR(6 BYTE) NOT NULL,
    latitudine          NUMBER(13, 10),
    longitudine         NUMBER(13, 10),
    note                VARCHAR2(4000 BYTE)
)
TABLESPACE iuffi_tbl LOGGING;

ALTER TABLE iuf_t_ispezione_visiva
    ADD CONSTRAINT check_presenza_on CHECK ( presenza_on IN ( 'N', 'S' ) );

COMMENT ON TABLE iuf_t_ispezione_visiva IS
    'Ispezione visiva effettuata nell''ambito della missione';

COMMENT ON COLUMN iuf_t_ispezione_visiva.id_ispezione IS
    'Identificativo dell''iespezione visiva';

COMMENT ON COLUMN iuf_t_ispezione_visiva.id_rilevazione IS
    'Identificativo della rilevazione';

COMMENT ON COLUMN iuf_t_ispezione_visiva.numero_aviv IS
    'Numero autorizzazione AVIV (sistema estarno)';

COMMENT ON COLUMN iuf_t_ispezione_visiva.id_specie_vegetale IS
    'Identificativo della specie vegetale';

COMMENT ON COLUMN iuf_t_ispezione_visiva.superfice IS
    'Superficie ispezionata in mq';

COMMENT ON COLUMN iuf_t_ispezione_visiva.numero_piante IS
    'Numero piante ispezionate';

COMMENT ON COLUMN iuf_t_ispezione_visiva.presenza_on IS
    'Flag S/N - Indica la presenza o meno dell''organismo nocivo';

COMMENT ON COLUMN iuf_t_ispezione_visiva.istat_comune IS
    'Codice Istat del comune';

COMMENT ON COLUMN iuf_t_ispezione_visiva.latitudine IS
    'Latitudine (UTM)';

COMMENT ON COLUMN iuf_t_ispezione_visiva.longitudine IS
    'Longitudine (UTM)';

COMMENT ON COLUMN iuf_t_ispezione_visiva.note IS
    'Note di testo inserite dall''ispettore';

CREATE UNIQUE INDEX pk_iuf_t_ispezione_visiva ON
    iuf_t_ispezione_visiva (
        id_ispezione
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_ispezione_visiva
    ADD CONSTRAINT pk_iuf_t_ispezione_visiva PRIMARY KEY ( id_ispezione )
        USING INDEX pk_iuf_t_ispezione_visiva;

CREATE TABLE iuf_t_manutenzione_trappola (
    id_manutenzione         NUMBER(10) NOT NULL,
    id_trappola             NUMBER(10) NOT NULL,
    tipo_manutenzione       CHAR(1 BYTE) NOT NULL,
    data_manutenzione       DATE NOT NULL,
    operatore_manutenzione  NUMBER(10),
    note                    VARCHAR2(4000 BYTE)
)
TABLESPACE iuffi_tbl LOGGING;

ALTER TABLE iuf_t_manutenzione_trappola
    ADD CONSTRAINT check_tipo_manutenzione CHECK ( tipo_manutenzione IN ( 'A', 'C', 'S' ) );

COMMENT ON TABLE iuf_t_manutenzione_trappola IS
    'Manutenzioni effettuate alle trappole';

COMMENT ON COLUMN iuf_t_manutenzione_trappola.id_manutenzione IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_manutenzione_trappola.id_trappola IS
    'Identificativo della trappola oggetto della manutenzione';

COMMENT ON COLUMN iuf_t_manutenzione_trappola.tipo_manutenzione IS
    'Tipo di manutenzione effettuata (C=Controllo, S=Sostituzione, A=Altro)';

COMMENT ON COLUMN iuf_t_manutenzione_trappola.data_manutenzione IS
    'Data e ora intervento';

COMMENT ON COLUMN iuf_t_manutenzione_trappola.operatore_manutenzione IS
    'Riferimento all''anagrafica';

COMMENT ON COLUMN iuf_t_manutenzione_trappola.note IS
    'Note sull''intervento';

CREATE UNIQUE INDEX pk_iuf_t_manutenzione_trappola ON
    iuf_t_manutenzione_trappola (
        id_manutenzione
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_manutenzione_trappola
    ADD CONSTRAINT pk_iuf_t_manutenzione_trappola PRIMARY KEY ( id_manutenzione )
        USING INDEX pk_iuf_t_manutenzione_trappola;

CREATE TABLE iuf_t_missione (
    id_missione                NUMBER(10) NOT NULL,
    numero_trasferta           NUMBER(10),
    data_ora_inizio_missione   DATE,
    data_ora_fine_missione     DATE,
    id_ispettore_assegnato     NUMBER(10) NOT NULL,
    timestamp_inizio_missione  DATE,
    timestamp_fine_missione    DATE,
    pdf_trasferta              BLOB,
    nome_file                  VARCHAR2(200 BYTE)
)
TABLESPACE iuffi_tbl LOGGING
    LOB ( pdf_trasferta ) STORE AS (
        TABLESPACE iuffi_lob
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

COMMENT ON TABLE iuf_t_missione IS
    'Missione effettuata dall''ispettore';

COMMENT ON COLUMN iuf_t_missione.id_missione IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_missione.numero_trasferta IS
    'Numero di trasferta di IrisWeb (sistema esterno)';

COMMENT ON COLUMN iuf_t_missione.data_ora_inizio_missione IS
    'Data e ora inizio della missione';

COMMENT ON COLUMN iuf_t_missione.data_ora_fine_missione IS
    'Data e ora fine della missione';

COMMENT ON COLUMN iuf_t_missione.id_ispettore_assegnato IS
    'Identificativo dell''anagrafica dell''ispettore assgenato alla missione';

COMMENT ON COLUMN iuf_t_missione.timestamp_inizio_missione IS
    'Timestamp di sistema di inizio della missione';

COMMENT ON COLUMN iuf_t_missione.timestamp_fine_missione IS
    'Timestamp di sistema di fine della missione';

COMMENT ON COLUMN iuf_t_missione.pdf_trasferta IS
    'File pdf relativo alla trasferta (IrisWeb)';

COMMENT ON COLUMN iuf_t_missione.nome_file IS
    'Nome del file inserito nel campo pdf_trasferta';

CREATE UNIQUE INDEX pk_iuf_t_missione ON
    iuf_t_missione (
        id_missione
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_missione
    ADD CONSTRAINT pk_iuf_t_missione PRIMARY KEY ( id_missione )
        USING INDEX pk_iuf_t_missione;

CREATE TABLE iuf_t_percorso_rilevazioni (
    id_percorso            NUMBER(10) NOT NULL,
    id_rilevazione         NUMBER(10) NOT NULL,
    istat_comune           CHAR(6 BYTE),
    latitudine             NUMBER(13, 10),
    longitudine            NUMBER(13, 10),
    timestamp_rilevazione  DATE
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_t_percorso_rilevazioni IS
    'Tracciamento geospaziale del percorso effettuato nella rilevazione dati in campo';

COMMENT ON COLUMN iuf_t_percorso_rilevazioni.id_percorso IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_percorso_rilevazioni.id_rilevazione IS
    'Identificativo della rilevazione dati in campo';

COMMENT ON COLUMN iuf_t_percorso_rilevazioni.istat_comune IS
    'Codice Istat del comune';

COMMENT ON COLUMN iuf_t_percorso_rilevazioni.latitudine IS
    'Latitudine (UTM)';

COMMENT ON COLUMN iuf_t_percorso_rilevazioni.longitudine IS
    'Longitudine (UTM)';

COMMENT ON COLUMN iuf_t_percorso_rilevazioni.timestamp_rilevazione IS
    'Timestamp relativo all''istante in cui è stata rilevata la posizione geografica';

CREATE UNIQUE INDEX pk_iuf_t_percorso_rilevazioni ON
    iuf_t_percorso_rilevazioni (
        id_percorso
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_percorso_rilevazioni
    ADD CONSTRAINT pk_iuf_t_percorso_rilevazioni PRIMARY KEY ( id_percorso )
        USING INDEX pk_iuf_t_percorso_rilevazioni;

CREATE TABLE iuf_t_previsione_on_est (
    id_previsione_on_est  NUMBER(10) NOT NULL,
    id_specie_on          NUMBER(4) NOT NULL,
    ore_ispezioni_visive  NUMBER(10),
    num_campioni          NUMBER(6),
    num_trappole          NUMBER(6),
    anno                  NUMBER(4)
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_t_previsione_on_est IS
    'Previsione attività di monitoraggio per ON (enti esterni)';

COMMENT ON COLUMN iuf_t_previsione_on_est.id_previsione_on_est IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_previsione_on_est.id_specie_on IS
    'Identificativo dell''organismo nocivo';

COMMENT ON COLUMN iuf_t_previsione_on_est.ore_ispezioni_visive IS
    'Numero di ore relative ad attività di ispezione visiva';

COMMENT ON COLUMN iuf_t_previsione_on_est.num_campioni IS
    'Numero di campioni di prelievo previsti';

COMMENT ON COLUMN iuf_t_previsione_on_est.num_trappole IS
    'Numero di trappolaggi previsto';

COMMENT ON COLUMN iuf_t_previsione_on_est.anno IS
    'Anno campagna';

CREATE UNIQUE INDEX pk_iuf_t_previsione_on_est ON
    iuf_t_previsione_on_est (
        id_previsione_on_est
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_previsione_on_est
    ADD CONSTRAINT pk_iuf_t_previsione_on_est PRIMARY KEY ( id_previsione_on_est )
        USING INDEX pk_iuf_t_previsione_on_est;

CREATE TABLE iuf_t_previsione_on_reg (
    id_previsione_on_reg  NUMBER(10) NOT NULL,
    id_specie_on          NUMBER(4) NOT NULL,
    ore                   NUMBER(6),
    num_campioni          NUMBER(6),
    num_analisi           NUMBER(6),
    num_trappole          NUMBER(6),
    anno                  NUMBER(4)
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_t_previsione_on_reg IS
    'Previsione attività di monitoraggio per ON (regione)';

COMMENT ON COLUMN iuf_t_previsione_on_reg.id_previsione_on_reg IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_previsione_on_reg.id_specie_on IS
    'Identificativo dell''organismo nocivo';

COMMENT ON COLUMN iuf_t_previsione_on_reg.ore IS
    'Numero di ore previste relative ad attività di ispezione visiva';

COMMENT ON COLUMN iuf_t_previsione_on_reg.num_campioni IS
    'Numero di campioni di prelievo previsti';

COMMENT ON COLUMN iuf_t_previsione_on_reg.num_analisi IS
    'Numero di analisi previsto';

COMMENT ON COLUMN iuf_t_previsione_on_reg.num_trappole IS
    'Numero di trappolaggi previsto';

COMMENT ON COLUMN iuf_t_previsione_on_reg.anno IS
    'Anno campagna';

CREATE UNIQUE INDEX pk_iuf_t_previsione_on_reg ON
    iuf_t_previsione_on_reg (
        id_previsione_on_reg
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_previsione_on_reg
    ADD CONSTRAINT pk_iuf_t_previsione_on_reg PRIMARY KEY ( id_previsione_on_reg )
        USING INDEX pk_iuf_t_previsione_on_reg;

CREATE TABLE iuf_t_rilevazione (
    id_rilevazione  NUMBER(10) NOT NULL,
    id_missione     NUMBER(10) NOT NULL,
    id_anagrafica   NUMBER(10),
    id_tipo_area    NUMBER(4) NOT NULL,
    visual          VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
    note            VARCHAR2(4000 BYTE),
    campionamento   VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
    trappolaggio    VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
    ora_inizio      NUMBER(2) NOT NULL,
    minuti_inizio   NUMBER(2) NOT NULL,
    ora_fine        NUMBER(2),
    minuti_fine     NUMBER(2)
)
TABLESPACE iuffi_tbl LOGGING;

ALTER TABLE iuf_t_rilevazione
    ADD CONSTRAINT check_visual CHECK ( visual IN ( 'N', 'S' ) );

ALTER TABLE iuf_t_rilevazione
    ADD CONSTRAINT check_campionamento CHECK ( campionamento IN ( 'N', 'S' ) );

ALTER TABLE iuf_t_rilevazione
    ADD CONSTRAINT check_trappolaggio CHECK ( trappolaggio IN ( 'N', 'S' ) );

COMMENT ON TABLE iuf_t_rilevazione IS
    'Rilevazione dati in campo';

COMMENT ON COLUMN iuf_t_rilevazione.id_rilevazione IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_rilevazione.id_missione IS
    'Riferimento alla missione';

COMMENT ON COLUMN iuf_t_rilevazione.id_anagrafica IS
    'Riferimento all''anagrafica aziendale';

COMMENT ON COLUMN iuf_t_rilevazione.id_tipo_area IS
    'Identificativo della tipologia area';

COMMENT ON COLUMN iuf_t_rilevazione.visual IS
    'Flag S/N - Indica se l''attività include una ispezione visiva';

COMMENT ON COLUMN iuf_t_rilevazione.note IS
    'Note relative alla rilevazione dati in campo';

COMMENT ON COLUMN iuf_t_rilevazione.campionamento IS
    'Flag S/N - Indica se l''attività include un campionamento';

COMMENT ON COLUMN iuf_t_rilevazione.trappolaggio IS
    'Flag S/N - Indica se l''attività include un trappolaggio';

COMMENT ON COLUMN iuf_t_rilevazione.ora_inizio IS
    'Ora di inizio della rilevazione dati in campo';

COMMENT ON COLUMN iuf_t_rilevazione.minuti_inizio IS
    'Minuto di inizio della rilevazione dati in campo';

COMMENT ON COLUMN iuf_t_rilevazione.ora_fine IS
    'Ora di fine della rilevazione dati in campo';

COMMENT ON COLUMN iuf_t_rilevazione.minuti_fine IS
    'Minuto di fine della rilevazione dati in campo';

CREATE UNIQUE INDEX pk_iuf_t_rilevazione ON
    iuf_t_rilevazione (
        id_rilevazione
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_rilevazione
    ADD CONSTRAINT pk_iuf_t_rilevazione PRIMARY KEY ( id_rilevazione )
        USING INDEX pk_iuf_t_rilevazione;

CREATE TABLE iuf_t_sopralluogo_vivaio (
    id_sopralluogo  NUMBER(10) NOT NULL,
    id_missione     NUMBER(10) NOT NULL,
    pdf_relazione   BLOB,
    nome_file       VARCHAR2(200 BYTE),
    numero_aviv     NUMBER(10)
)
TABLESPACE iuffi_tbl LOGGING
    LOB ( pdf_relazione ) STORE AS (
        TABLESPACE iuffi_lob
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

COMMENT ON TABLE iuf_t_sopralluogo_vivaio IS
    'Sopralluogo vivaio relativo alla missione';

COMMENT ON COLUMN iuf_t_sopralluogo_vivaio.id_sopralluogo IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_sopralluogo_vivaio.id_missione IS
    'Identificativo della missione';

COMMENT ON COLUMN iuf_t_sopralluogo_vivaio.pdf_relazione IS
    'File pdf relativo alla relazione del sopralluogo';

COMMENT ON COLUMN iuf_t_sopralluogo_vivaio.nome_file IS
    'Nome del file inserito nel campo pdf_relazione';

COMMENT ON COLUMN iuf_t_sopralluogo_vivaio.numero_aviv IS
    'Numero AVIV (sistema esterno)';

CREATE UNIQUE INDEX pk_iuf_t_sopralluogo_vivaio ON
    iuf_t_sopralluogo_vivaio (
        id_sopralluogo
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_sopralluogo_vivaio
    ADD CONSTRAINT pk_iuf_t_sopralluogo_vivaio PRIMARY KEY ( id_sopralluogo )
        USING INDEX pk_iuf_t_sopralluogo_vivaio;

CREATE TABLE iuf_t_specie_on_precaricate (
    id_precaricamento   NUMBER(10) NOT NULL,
    id_missione         NUMBER(10) NOT NULL,
    id_specie_vegetale  NUMBER(4),
    id_specie_on        NUMBER(4)
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_t_specie_on_precaricate IS
    'Precaricamento specie vegetali e organismi nocivi per la missione';

COMMENT ON COLUMN iuf_t_specie_on_precaricate.id_precaricamento IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_specie_on_precaricate.id_missione IS
    'Identificativo della missione';

COMMENT ON COLUMN iuf_t_specie_on_precaricate.id_specie_vegetale IS
    'Identificativo della specie vegetale';

COMMENT ON COLUMN iuf_t_specie_on_precaricate.id_specie_on IS
    'Identificativo dell''organismo nocivo';

CREATE UNIQUE INDEX pk_iuf_t_specie_on_precaricate ON
    iuf_t_specie_on_precaricate (
        id_precaricamento
    ASC )
        TABLESPACE iuffi_idx LOGGING;

CREATE UNIQUE INDEX un_iuf_t_specie_on_precaricate ON
    iuf_t_specie_on_precaricate (
        id_missione
    ASC,
        id_specie_vegetale
    ASC,
        id_specie_on
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_specie_on_precaricate
    ADD CONSTRAINT pk_iuf_t_specie_on_precaricate PRIMARY KEY ( id_precaricamento )
        USING INDEX pk_iuf_t_specie_on_precaricate;

ALTER TABLE iuf_t_specie_on_precaricate
    ADD CONSTRAINT un_iuf_t_specie_on_precaricate UNIQUE ( id_missione,
                                                           id_specie_vegetale,
                                                           id_specie_on )
        USING INDEX un_iuf_t_specie_on_precaricate;

CREATE TABLE iuf_t_trappola (
    id_trappola         NUMBER(10) NOT NULL,
    id_tipo_trappola    NUMBER(4) NOT NULL,
    latitudine          NUMBER(13, 10),
    longitudine         NUMBER(13, 10),
    id_trappolaggio     NUMBER(10) NOT NULL,
    id_specie_veg       NUMBER(4),
    data_installazione  DATE NOT NULL,
    data_rimozione      DATE
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_t_trappola IS
    'Trappole installate ';

COMMENT ON COLUMN iuf_t_trappola.id_trappola IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_trappola.id_tipo_trappola IS
    'Identificativo del tipo trappola';

COMMENT ON COLUMN iuf_t_trappola.latitudine IS
    'Latitudine (UTM) relativa alla posizione geografica della trappola';

COMMENT ON COLUMN iuf_t_trappola.longitudine IS
    'Longitudine (UTM) relativa alla posizione geografica della trappola';

COMMENT ON COLUMN iuf_t_trappola.id_trappolaggio IS
    'Identificativo del trappolaggio';

COMMENT ON COLUMN iuf_t_trappola.id_specie_veg IS
    'Identificativo della specie vegatale associata alla trappola';

COMMENT ON COLUMN iuf_t_trappola.data_installazione IS
    'Data installazione della trappola';

COMMENT ON COLUMN iuf_t_trappola.data_rimozione IS
    'Data rimozione della trappola';

CREATE UNIQUE INDEX pk_iuf_t_trappola ON
    iuf_t_trappola (
        id_trappola
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_trappola
    ADD CONSTRAINT pk_iuf_t_trappola PRIMARY KEY ( id_trappola )
        USING INDEX pk_iuf_t_trappola;

CREATE TABLE iuf_t_trappolaggio (
    id_trappolaggio  NUMBER(10) NOT NULL,
    id_rilevazione   NUMBER(10) NOT NULL,
    id_trappola      NUMBER(10) NOT NULL,
    istat_comune     CHAR(6 BYTE) NOT NULL,
    data_ora_inizio  DATE NOT NULL,
    data_ora_fine    DATE,
    operazione       CHAR(1 BYTE) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

ALTER TABLE iuf_t_trappolaggio
    ADD CONSTRAINT check_operazione CHECK ( operazione IN ( 'I', 'M', 'R' ) );

COMMENT ON TABLE iuf_t_trappolaggio IS
    'Trappolaggi effettuati nella missione';

COMMENT ON COLUMN iuf_t_trappolaggio.id_trappolaggio IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_trappolaggio.id_rilevazione IS
    'Identificativo della rilevazione dati in campo';

COMMENT ON COLUMN iuf_t_trappolaggio.id_trappola IS
    'Identificativo della trappola oggetto dell''attività di trappolaggio';

COMMENT ON COLUMN iuf_t_trappolaggio.istat_comune IS
    'Codice Istat del comune';

COMMENT ON COLUMN iuf_t_trappolaggio.data_ora_inizio IS
    'Data e ora inizio attività di trappolaggio';

COMMENT ON COLUMN iuf_t_trappolaggio.data_ora_fine IS
    'Data e ora fine attività di trappolaggio';

COMMENT ON COLUMN iuf_t_trappolaggio.operazione IS
    'Indica il tipo di operazione effettuata sulla trappola (I=Installazione, M=Manutenzione, R=Rimozione)';

CREATE UNIQUE INDEX pk_iuf_t_trappolaggio ON
    iuf_t_trappolaggio (
        id_trappolaggio
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_trappolaggio
    ADD CONSTRAINT pk_iuf_t_trappolaggio PRIMARY KEY ( id_trappolaggio )
        USING INDEX pk_iuf_t_trappolaggio;

CREATE TABLE iuf_t_verbale (
    id_verbale    NUMBER(10) NOT NULL,
    data_verbale  DATE NOT NULL,
    id_missione   NUMBER(10) NOT NULL,
    id_ispettore  NUMBER(10) NOT NULL
)
TABLESPACE iuffi_tbl LOGGING;

COMMENT ON TABLE iuf_t_verbale IS
    'Verbale relativo alla missione';

COMMENT ON COLUMN iuf_t_verbale.id_verbale IS
    'Progressivo univoco identificativo del record';

COMMENT ON COLUMN iuf_t_verbale.data_verbale IS
    'Data del verbale';

COMMENT ON COLUMN iuf_t_verbale.id_missione IS
    'Identificativo della missione';

COMMENT ON COLUMN iuf_t_verbale.id_ispettore IS
    'Identificativo dell''anagrafica relativa all''ispettore assegnato alla missione';

CREATE UNIQUE INDEX pk_iuf_t_verbale ON
    iuf_t_verbale (
        id_verbale
    ASC )
        TABLESPACE iuffi_idx LOGGING;

ALTER TABLE iuf_t_verbale
    ADD CONSTRAINT pk_iuf_t_verbale PRIMARY KEY ( id_verbale )
        USING INDEX pk_iuf_t_verbale;

ALTER TABLE iuf_r_check_list_sop
    ADD CONSTRAINT fk_id_check_list_item_01 FOREIGN KEY ( id_check_list_item )
        REFERENCES iuf_d_check_list_item ( id_check_list_item )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_campionamento
    ADD CONSTRAINT fk_iuf_d_anfi_01 FOREIGN KEY ( id_anfi )
        REFERENCES iuf_d_anfi ( id_anfi )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_anagrafica
    ADD CONSTRAINT fk_iuf_d_categoria_anag_01 FOREIGN KEY ( id_categoria )
        REFERENCES iuf_d_categoria_anag ( id_categoria_anag )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_extra_field_camp
    ADD CONSTRAINT fk_iuf_d_extra_field_camp_01 FOREIGN KEY ( id_extra_field )
        REFERENCES iuf_d_extra_field_camp ( id_extra_field_camp )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_extra_field_trap
    ADD CONSTRAINT fk_iuf_d_extra_field_trap_01 FOREIGN KEY ( id_extra_field )
        REFERENCES iuf_d_extra_field_trap ( id_extra_field_trap )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_extra_field_visual
    ADD CONSTRAINT fk_iuf_d_extra_field_visual_01 FOREIGN KEY ( id_extra_field )
        REFERENCES iuf_d_extra_field_visual ( id_extra_field_visual )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_campionamento_spec_on
    ADD CONSTRAINT fk_iuf_d_organismo_nocivo_01 FOREIGN KEY ( id_specie_on )
        REFERENCES iuf_d_organismo_nocivo ( id_organismo_nocivo )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_isp_visiva_spec_on
    ADD CONSTRAINT fk_iuf_d_organismo_nocivo_02 FOREIGN KEY ( id_specie_on )
        REFERENCES iuf_d_organismo_nocivo ( id_organismo_nocivo )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_specie_on_precaricate
    ADD CONSTRAINT fk_iuf_d_organismo_nocivo_03 FOREIGN KEY ( id_specie_on )
        REFERENCES iuf_d_organismo_nocivo ( id_organismo_nocivo )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_previsione_on_est
    ADD CONSTRAINT fk_iuf_d_organismo_nocivo_04 FOREIGN KEY ( id_specie_on )
        REFERENCES iuf_d_organismo_nocivo ( id_organismo_nocivo )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_previsione_on_reg
    ADD CONSTRAINT fk_iuf_d_organismo_nocivo_05 FOREIGN KEY ( id_specie_on )
        REFERENCES iuf_d_organismo_nocivo ( id_organismo_nocivo )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_specie_on_periodo
    ADD CONSTRAINT fk_iuf_d_organismo_nocivo_06 FOREIGN KEY ( id_on_da_monitorare )
        REFERENCES iuf_d_organismo_nocivo ( id_organismo_nocivo )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_campionamento
    ADD CONSTRAINT fk_iuf_d_specie_vegetale_01 FOREIGN KEY ( id_specie_vegetale )
        REFERENCES iuf_d_specie_vegetale ( id_specie_vegetale )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_check_list_sop
    ADD CONSTRAINT fk_iuf_d_specie_vegetale_02 FOREIGN KEY ( id_sopralluogo_vivaio )
        REFERENCES iuf_t_sopralluogo_vivaio ( id_sopralluogo )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_ispezione_visiva
    ADD CONSTRAINT fk_iuf_d_specie_vegetale_03 FOREIGN KEY ( id_specie_vegetale )
        REFERENCES iuf_d_specie_vegetale ( id_specie_vegetale )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_rilevazione
    ADD CONSTRAINT fk_iuf_d_tipo_area_01 FOREIGN KEY ( id_tipo_area )
        REFERENCES iuf_d_tipo_area ( id_tipo_area )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_campionamento
    ADD CONSTRAINT fk_iuf_d_tipo_campione_01 FOREIGN KEY ( id_tipo_campione )
        REFERENCES iuf_d_tipo_campione ( id_tipo_campione )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_trappola
    ADD CONSTRAINT fk_iuf_d_tipo_trappola_01 FOREIGN KEY ( id_tipo_trappola )
        REFERENCES iuf_d_tipo_trappola ( id_tipo_trappola )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_ispettore_aggiunto
    ADD CONSTRAINT fk_iuf_t_anagrafica_01 FOREIGN KEY ( id_anagrafica )
        REFERENCES iuf_t_anagrafica ( id_anagrafica )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_manutenzione_trappola
    ADD CONSTRAINT fk_iuf_t_anagrafica_02 FOREIGN KEY ( operatore_manutenzione )
        REFERENCES iuf_t_anagrafica ( id_anagrafica )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_verbale
    ADD CONSTRAINT fk_iuf_t_anagrafica_03 FOREIGN KEY ( id_ispettore )
        REFERENCES iuf_t_anagrafica ( id_anagrafica )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_campionamento_spec_on
    ADD CONSTRAINT fk_iuf_t_campionamento_01 FOREIGN KEY ( id_campionamento )
        REFERENCES iuf_t_campionamento ( id_campionamento )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_campione_foto
    ADD CONSTRAINT fk_iuf_t_campionamento_02 FOREIGN KEY ( id_campionamento )
        REFERENCES iuf_t_campionamento ( id_campionamento )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_extra_field_camp
    ADD CONSTRAINT fk_iuf_t_campionamento_03 FOREIGN KEY ( id_campionamento )
        REFERENCES iuf_t_campionamento ( id_campionamento )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_campionamento
    ADD CONSTRAINT fk_iuf_t_esito_campione_01 FOREIGN KEY ( id_esito )
        REFERENCES iuf_t_esito_campione ( id_esito_campione )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_trappolaggio_foto
    ADD CONSTRAINT fk_iuf_t_foto_01 FOREIGN KEY ( id_foto )
        REFERENCES iuf_t_foto ( id_foto )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_isp_visiva_foto
    ADD CONSTRAINT fk_iuf_t_foto_02 FOREIGN KEY ( id_foto )
        REFERENCES iuf_t_foto ( id_foto )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_campione_foto
    ADD CONSTRAINT fk_iuf_t_foto_03 FOREIGN KEY ( id_foto )
        REFERENCES iuf_t_foto ( id_foto )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_isp_visiva_spec_on
    ADD CONSTRAINT fk_iuf_t_ispezione_visiva_01 FOREIGN KEY ( id_ispezione )
        REFERENCES iuf_t_ispezione_visiva ( id_ispezione )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_isp_visiva_foto
    ADD CONSTRAINT fk_iuf_t_ispezione_visiva_02 FOREIGN KEY ( id_ispezione_visiva )
        REFERENCES iuf_t_ispezione_visiva ( id_ispezione )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_extra_field_visual
    ADD CONSTRAINT fk_iuf_t_ispezione_visiva_03 FOREIGN KEY ( id_ispezione )
        REFERENCES iuf_t_ispezione_visiva ( id_ispezione )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_ispettore_aggiunto
    ADD CONSTRAINT fk_iuf_t_missione_01 FOREIGN KEY ( id_missione )
        REFERENCES iuf_t_missione ( id_missione )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_specie_on_precaricate
    ADD CONSTRAINT fk_iuf_t_missione_02 FOREIGN KEY ( id_missione )
        REFERENCES iuf_t_missione ( id_missione )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_rilevazione
    ADD CONSTRAINT fk_iuf_t_missione_03 FOREIGN KEY ( id_missione )
        REFERENCES iuf_t_missione ( id_missione )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_sopralluogo_vivaio
    ADD CONSTRAINT fk_iuf_t_missione_04 FOREIGN KEY ( id_missione )
        REFERENCES iuf_t_missione ( id_missione )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_verbale
    ADD CONSTRAINT fk_iuf_t_missione_05 FOREIGN KEY ( id_missione )
        REFERENCES iuf_t_missione ( id_missione )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_campionamento
    ADD CONSTRAINT fk_iuf_t_rilevazione_01 FOREIGN KEY ( id_rilevazione )
        REFERENCES iuf_t_rilevazione ( id_rilevazione )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_trappolaggio
    ADD CONSTRAINT fk_iuf_t_rilevazione_02 FOREIGN KEY ( id_rilevazione )
        REFERENCES iuf_t_rilevazione ( id_rilevazione )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_percorso_rilevazioni
    ADD CONSTRAINT fk_iuf_t_rilevazione_03 FOREIGN KEY ( id_rilevazione )
        REFERENCES iuf_t_rilevazione ( id_rilevazione )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_manutenzione_trappola
    ADD CONSTRAINT fk_iuf_t_trappola_02 FOREIGN KEY ( id_trappola )
        REFERENCES iuf_t_trappola ( id_trappola )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_trappolaggio_foto
    ADD CONSTRAINT fk_iuf_t_trappolaggio_01 FOREIGN KEY ( id_trappolaggio )
        REFERENCES iuf_t_trappolaggio ( id_trappolaggio )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_extra_field_trap
    ADD CONSTRAINT fk_iuf_t_trappolaggio_02 FOREIGN KEY ( id_trappolaggio )
        REFERENCES iuf_t_trappolaggio ( id_trappolaggio )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_trappolaggio
    ADD CONSTRAINT fk_trappola_01 FOREIGN KEY ( id_trappola )
        REFERENCES iuf_t_trappola ( id_trappola )
    NOT DEFERRABLE;

ALTER TABLE iuf_r_specie_on_periodo
    ADD CONSTRAINT iuf_d_specie_vegetale_04 FOREIGN KEY ( id_specie_vegetale )
        REFERENCES iuf_d_specie_vegetale ( id_specie_vegetale )
    NOT DEFERRABLE;

ALTER TABLE iuf_t_ispezione_visiva
    ADD CONSTRAINT iuf_t_rilevazione_02 FOREIGN KEY ( id_rilevazione )
        REFERENCES iuf_t_rilevazione ( id_rilevazione )
    NOT DEFERRABLE;

--------------------------------
--  Changed table iuf_d_anfi  --
--------------------------------
-- Add/modify columns 
alter table IUF_D_ANFI add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_D_ANFI add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_D_ANFI.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_ANFI.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
------------------------------------------
--  Changed table iuf_d_categoria_anag  --
------------------------------------------
-- Add/modify columns 
alter table IUF_D_CATEGORIA_ANAG add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_D_CATEGORIA_ANAG add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_D_CATEGORIA_ANAG.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_CATEGORIA_ANAG.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-------------------------------------------
--  Changed table iuf_d_check_list_item  --
-------------------------------------------
-- Add/modify columns 
alter table IUF_D_CHECK_LIST_ITEM add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_D_CHECK_LIST_ITEM add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_D_CHECK_LIST_ITEM.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_CHECK_LIST_ITEM.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
----------------------------
--  New table iuf_d_ente  --
----------------------------
-- Create table
create table IUF_D_ENTE
(
  id_ente              NUMBER(4) not null,
  denominazione        VARCHAR2(200) not null,
  codice_est           VARCHAR2(20),
  data_inizio_validita DATE default sysdate not null,
  data_fine_validita   DATE
)
;
-- Add comments to the table 
comment on table IUF_D_ENTE
  is 'Ente di appartenza';
-- Add comments to the columns 
comment on column IUF_D_ENTE.id_ente
  is 'Progressivo univoco identificativo del record';
comment on column IUF_D_ENTE.denominazione
  is 'Denominazione ente di appartenenza';
comment on column IUF_D_ENTE.codice_est
  is 'Codice ente su sistema esterno (se previsto)';
comment on column IUF_D_ENTE.data_inizio_validita
  is 'Data inizio validità del record';
comment on column IUF_D_ENTE.data_fine_validita
  is 'Data fine validità del record';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_D_ENTE
  add constraint PK_IUF_D_ENTE primary key (ID_ENTE) using index tablespace iuffi_idx;

--------------------------------------------
--  Changed table iuf_d_extra_field_camp  --
--------------------------------------------
-- Add/modify columns 
alter table IUF_D_EXTRA_FIELD_CAMP rename column data_inizio_val to DATA_INIZIO_VALIDITA;
alter table IUF_D_EXTRA_FIELD_CAMP rename column data_fine_val to DATA_FINE_VALIDITA;
alter table IUF_D_EXTRA_FIELD_CAMP add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_D_EXTRA_FIELD_CAMP add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_D_EXTRA_FIELD_CAMP.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_EXTRA_FIELD_CAMP.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
--------------------------------------------
--  Changed table iuf_d_extra_field_trap  --
--------------------------------------------
-- Add/modify columns 
alter table IUF_D_EXTRA_FIELD_TRAP rename column data_inizio_val to DATA_INIZIO_VALIDITA;
alter table IUF_D_EXTRA_FIELD_TRAP rename column data_fine_val to DATA_FINE_VALIDITA;
alter table IUF_D_EXTRA_FIELD_TRAP add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_D_EXTRA_FIELD_TRAP add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_D_EXTRA_FIELD_TRAP.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_EXTRA_FIELD_TRAP.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
----------------------------------------------
--  Changed table iuf_d_extra_field_visual  --
----------------------------------------------
-- Add/modify columns 
alter table IUF_D_EXTRA_FIELD_VISUAL rename column data_inizio_val to DATA_INIZIO_VALIDITA;
alter table IUF_D_EXTRA_FIELD_VISUAL rename column data_fine_val to DATA_FINE_VALIDITA;
alter table IUF_D_EXTRA_FIELD_VISUAL add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_D_EXTRA_FIELD_VISUAL add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_D_EXTRA_FIELD_VISUAL.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_EXTRA_FIELD_VISUAL.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
---------------------------------
--  New table iuf_d_menu_item  --
---------------------------------
-- Create table
create table IUF_D_MENU_ITEM
(
  id_menu_item    NUMBER(4) not null,
  title_menu_item VARCHAR2(100) not null,
  id_parent       NUMBER(4),
  use_case        VARCHAR2(100),
  path            VARCHAR2(1000),
  seq_menu_item   NUMBER(4) not null,
  show            VARCHAR2(1) default 'S' not null
)
;
-- Add comments to the table 
comment on table IUF_D_MENU_ITEM
  is 'Voci menu applicativo back office';
-- Add comments to the columns 
comment on column IUF_D_MENU_ITEM.id_menu_item
  is 'Progressivo univoco identificativo del record';
comment on column IUF_D_MENU_ITEM.title_menu_item
  is 'Descrizione voce menu visualizzata';
comment on column IUF_D_MENU_ITEM.id_parent
  is 'Riferimento alla voce menu padre';
comment on column IUF_D_MENU_ITEM.use_case
  is 'Use case cu ifa parte la voce menu';
comment on column IUF_D_MENU_ITEM.path
  is 'Link associato alla voce menu';
comment on column IUF_D_MENU_ITEM.seq_menu_item
  is 'Posizione sequenziale in fase di visualizzazione';
comment on column IUF_D_MENU_ITEM.show
  is 'Flag S/N - Indica se la voce menu deve essere visualizzata';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_D_MENU_ITEM
  add constraint PK_IUF_D_MENU_ITEM primary key (ID_MENU_ITEM) using index tablespace iuffi_idx;
alter table IUF_D_MENU_ITEM
  add constraint FK_IUF_D_MENU_ITEM_01 foreign key (ID_PARENT)
  references IUF_D_MENU_ITEM (ID_MENU_ITEM);
-- Create/Recreate check constraints 
alter table IUF_D_MENU_ITEM
  add constraint CHECK_SHOW
  check (show in ('S','N'));

--------------------------------------------
--  Changed table iuf_d_organismo_nocivo  --
--------------------------------------------
-- Add/modify columns 
alter table IUF_D_ORGANISMO_NOCIVO rename column data_inizio_val to DATA_INIZIO_VALIDITA;
alter table IUF_D_ORGANISMO_NOCIVO rename column data_fine_val to DATA_FINE_VALIDITA;
alter table IUF_D_ORGANISMO_NOCIVO add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_D_ORGANISMO_NOCIVO add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_D_ORGANISMO_NOCIVO.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_ORGANISMO_NOCIVO.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-------------------------------------------
--  Changed table iuf_d_specie_vegetale  --
-------------------------------------------
-- Add/modify columns 
alter table IUF_D_SPECIE_VEGETALE rename column data_inizio_val to DATA_INIZIO_VALIDITA;
alter table IUF_D_SPECIE_VEGETALE rename column data_fine_val to DATA_FINE_VALIDITA;
alter table IUF_D_SPECIE_VEGETALE add flag_euro CHAR(1) not null;
alter table IUF_D_SPECIE_VEGETALE add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_D_SPECIE_VEGETALE add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_D_SPECIE_VEGETALE.flag_euro
  is 'Flag S/N - Indica se la specie vegetale è inclusa nel cofinanziamento UE';
comment on column IUF_D_SPECIE_VEGETALE.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_SPECIE_VEGETALE.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Create/Recreate check constraints 
alter table IUF_D_SPECIE_VEGETALE
  add constraint CHECK_FLAG_EURO
  check (flag_euro IN ('S','N'));
--------------------------------------
--  New table iuf_d_stato_missione  --
--------------------------------------
-- Create table
create table IUF_D_STATO_MISSIONE
(
  cod_stato_missione  VARCHAR2(20) not null,
  desc_stato_missione VARCHAR2(50) not null
)
;
-- Add comments to the table 
comment on table IUF_D_STATO_MISSIONE
  is 'Stato della missione';
-- Add comments to the columns 
comment on column IUF_D_STATO_MISSIONE.cod_stato_missione
  is 'Codice identificativo univoco dello stato della missione';
comment on column IUF_D_STATO_MISSIONE.desc_stato_missione
  is 'Descrizione dello stato della missione';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_D_STATO_MISSIONE
  add constraint PK_IUF_D_STATO_MISSIONE primary key (COD_STATO_MISSIONE) using index tablespace iuffi_idx;

-------------------------------------
--  Changed table iuf_d_tipo_area  --
-------------------------------------
-- Add/modify columns 
alter table IUF_D_TIPO_AREA rename column data_inizio_val to DATA_INIZIO_VALIDITA;
alter table IUF_D_TIPO_AREA rename column data_fine_val to DATA_FINE_VALIDITA;
alter table IUF_D_TIPO_AREA add dettaglio_tipo_area VARCHAR2(1000);
alter table IUF_D_TIPO_AREA add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_D_TIPO_AREA add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_D_TIPO_AREA.dettaglio_tipo_area
  is 'Descrizione di dettaglio della tipologia area';
comment on column IUF_D_TIPO_AREA.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_TIPO_AREA.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-----------------------------------------
--  Changed table iuf_d_tipo_campione  --
-----------------------------------------
-- Add/modify columns 
alter table IUF_D_TIPO_CAMPIONE rename column data_inizio_val to DATA_INIZIO_VALIDITA;
alter table IUF_D_TIPO_CAMPIONE rename column data_fine_val to DATA_FINE_VALIDITA;
alter table IUF_D_TIPO_CAMPIONE add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_D_TIPO_CAMPIONE add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_D_TIPO_CAMPIONE.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_TIPO_CAMPIONE.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-----------------------------------------
--  Changed table iuf_d_tipo_trappola  --
-----------------------------------------
-- Add/modify columns 
alter table IUF_D_TIPO_TRAPPOLA rename column data_inizio_val to DATA_INIZIO_VALIDITA;
alter table IUF_D_TIPO_TRAPPOLA rename column data_fine_val to DATA_FINE_VALIDITA;
alter table IUF_D_TIPO_TRAPPOLA add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_D_TIPO_TRAPPOLA add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_D_TIPO_TRAPPOLA.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_TIPO_TRAPPOLA.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-------------------------------------
--  New table iuf_d_trappola_ente  --
-------------------------------------
-- Create table
create table IUF_D_TRAPPOLA_ENTE
(
  id_trappola_ente            NUMBER(4) not null,
  id_trappola                 NUMBER(4) not null,
  id_ente                     NUMBER(4) not null,
  costo                       NUMBER(8,2) not null,
  data_inizio_validita        DATE default sysdate not null,
  data_fine_validita          DATE,
  ext_id_utente_aggiornamento NUMBER(10)  not null,
  data_ultimo_aggiornamento   DATE default sysdate not null
)
;
-- Add comments to the columns 
comment on column IUF_D_TRAPPOLA_ENTE.id_trappola_ente
  is 'Progressivo univoco identificativo del record';
comment on column IUF_D_TRAPPOLA_ENTE.id_trappola
  is 'Identificativo trappola';
comment on column IUF_D_TRAPPOLA_ENTE.id_ente
  is 'Identificativo Ente';
comment on column IUF_D_TRAPPOLA_ENTE.costo
  is 'costo in euro della trappola';
comment on column IUF_D_TRAPPOLA_ENTE.data_inizio_validita
  is 'Data inizio validità del record';
comment on column IUF_D_TRAPPOLA_ENTE.data_fine_validita
  is 'Data fine validità del record';
comment on column IUF_D_TRAPPOLA_ENTE.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_TRAPPOLA_ENTE.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_D_TRAPPOLA_ENTE
  add constraint PK_IUF_D_TRAPPOLA_ENTE primary key (ID_TRAPPOLA, ID_ENTE) using index tablespace iuffi_idx;
alter table IUF_D_TRAPPOLA_ENTE
  add constraint FK_IUF_D_ENTE_02 foreign key (ID_ENTE)
  references IUF_D_ENTE (ID_ENTE);
alter table IUF_D_TRAPPOLA_ENTE
  add constraint FK_IUF_D_TIPO_TRAPPOLA_02 foreign key (ID_TRAPPOLA)
  references IUF_D_TIPO_TRAPPOLA (ID_TIPO_TRAPPOLA);

-----------------------------------
--  New table iuf_d_trappola_on  --
-----------------------------------
-- Create table
create table IUF_D_TRAPPOLA_ON
(
  id_trappola_on              NUMBER(4) not null,
  id_trappola                 NUMBER(4) not null,
  id_on                       NUMBER(4) not null,
  data_inizio_validita        DATE default sysdate not null,
  data_fine_validita          DATE,
  ext_id_utente_aggiornamento NUMBER(10)  not null,
  data_ultimo_aggiornamento   DATE default sysdate not null
)
;
-- Add comments to the columns 
comment on column IUF_D_TRAPPOLA_ON.id_trappola_on
  is 'Progressivo univoco identificativo del record';
comment on column IUF_D_TRAPPOLA_ON.id_trappola
  is 'Identificativo trappola';
comment on column IUF_D_TRAPPOLA_ON.id_on
  is 'Identificativo Organismo nocivo';
comment on column IUF_D_TRAPPOLA_ON.data_inizio_validita
  is 'Data inizio validità del record';
comment on column IUF_D_TRAPPOLA_ON.data_fine_validita
  is 'Data fine validità del record';
comment on column IUF_D_TRAPPOLA_ON.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_D_TRAPPOLA_ON.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_D_TRAPPOLA_ON
  add constraint PK_IUF_D_TRAPPOLA_ON primary key (ID_TRAPPOLA, ID_ON) using index tablespace iuffi_idx;
alter table IUF_D_TRAPPOLA_ON
  add constraint FK_IUF_D_ORGANISMO_NOCIVO_07 foreign key (ID_ON)
  references IUF_D_ORGANISMO_NOCIVO (ID_ORGANISMO_NOCIVO);
alter table IUF_D_TRAPPOLA_ON
  add constraint FK_IUF_D_TIPO_TRAPPOLA_03 foreign key (ID_TRAPPOLA)
  references IUF_D_TIPO_TRAPPOLA (ID_TIPO_TRAPPOLA);

------------------------------------------
--  Changed table iuf_t_esito_campione  --
------------------------------------------
-- Add/modify columns 
alter table IUF_T_ESITO_CAMPIONE add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_T_ESITO_CAMPIONE add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_ESITO_CAMPIONE.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_ESITO_CAMPIONE.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
--------------------------------------
--  Changed table iuf_t_anagrafica  --
--------------------------------------
-- Add/modify columns 
alter table IUF_T_ANAGRAFICA add cf_anagrafica_est VARCHAR2(16) not null;
alter table IUF_T_ANAGRAFICA add id_ente NUMBER(4);
alter table IUF_T_ANAGRAFICA add data_inizio_validita DATE default sysdate not null;
alter table IUF_T_ANAGRAFICA add data_fine_validita DATE;
alter table IUF_T_ANAGRAFICA add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_T_ANAGRAFICA add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_ANAGRAFICA.cf_anagrafica_est
  is 'Codice Fiscale/Partiva IVA del soggetto';
comment on column IUF_T_ANAGRAFICA.id_ente
  is 'Riferimento all''ente di appartenenza';
comment on column IUF_T_ANAGRAFICA.data_inizio_validita
  is 'Data inizio validità del record';
comment on column IUF_T_ANAGRAFICA.data_fine_validita
  is 'Data fine validità del record';
comment on column IUF_T_ANAGRAFICA.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_ANAGRAFICA.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_ANAGRAFICA
  add constraint UN_IUF_T_ANAGRAFICA_01 unique (CF_ANAGRAFICA_EST) using index tablespace iuffi_idx;
alter table IUF_T_ANAGRAFICA
  add constraint FK_IUF_D_ENTE_01 foreign key (ID_ENTE)
  references IUF_D_ENTE (ID_ENTE);
------------------------------------
--  Changed table iuf_t_missione  --
------------------------------------
-- Add/modify columns 
alter table IUF_T_MISSIONE modify data_ora_inizio_missione not null;
alter table IUF_T_MISSIONE modify timestamp_inizio_missione default SYSDATE not null;
alter table IUF_T_MISSIONE add stato VARCHAR2(50) not null;
alter table IUF_T_MISSIONE add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_T_MISSIONE add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_MISSIONE.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_MISSIONE.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_MISSIONE
  add constraint FK_IUF_D_STATO_MISSIONE_01 foreign key (STATO)
  references IUF_D_STATO_MISSIONE (COD_STATO_MISSIONE);
alter table IUF_T_MISSIONE
  add constraint FK_IUF_T_ANAGRAFICA_04 foreign key (ID_ISPETTORE_ASSEGNATO)
  references IUF_T_ANAGRAFICA (ID_ANAGRAFICA);
---------------------------------------
--  Changed table iuf_t_rilevazione  --
---------------------------------------
-- Add/modify columns 
alter table IUF_T_RILEVAZIONE add flag_emergenza VARCHAR2(1) default 'N' not null;
alter table IUF_T_RILEVAZIONE add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_T_RILEVAZIONE add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_RILEVAZIONE.flag_emergenza
  is 'Flag S/N - Indica se si tratta di una rilevazione in emergenza';
comment on column IUF_T_RILEVAZIONE.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_RILEVAZIONE.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Create/Recreate check constraints 
alter table IUF_T_RILEVAZIONE
  add constraint CHECK_FLAG_EMERGENZA
  check (flag_emergenza IN ( 'N', 'S' ));
-----------------------------------------
--  Changed table iuf_t_campionamento  --
-----------------------------------------
-- Add/modify columns 
alter table IUF_T_CAMPIONAMENTO add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_T_CAMPIONAMENTO add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_CAMPIONAMENTO.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_CAMPIONAMENTO.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-------------------------------------------------
--  Changed table iuf_r_campionamento_spec_on  --
-------------------------------------------------
-- Add/modify columns 
alter table IUF_R_CAMPIONAMENTO_SPEC_ON add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_R_CAMPIONAMENTO_SPEC_ON add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_R_CAMPIONAMENTO_SPEC_ON.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_R_CAMPIONAMENTO_SPEC_ON.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
--------------------------------
--  Changed table iuf_t_foto  --
--------------------------------
-- Add/modify columns 
alter table IUF_T_FOTO add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_T_FOTO add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_FOTO.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_FOTO.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-----------------------------------------
--  Changed table iuf_r_campione_foto  --
-----------------------------------------
-- Add/modify columns 
alter table IUF_R_CAMPIONE_FOTO add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_R_CAMPIONE_FOTO add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_R_CAMPIONE_FOTO.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_R_CAMPIONE_FOTO.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
----------------------------------------------
--  Changed table iuf_t_sopralluogo_vivaio  --
----------------------------------------------
-- Add/modify columns 
alter table IUF_T_SOPRALLUOGO_VIVAIO add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_T_SOPRALLUOGO_VIVAIO add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_SOPRALLUOGO_VIVAIO.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_SOPRALLUOGO_VIVAIO.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
------------------------------------------
--  Changed table iuf_r_check_list_sop  --
------------------------------------------
-- Add/modify columns 
alter table IUF_R_CHECK_LIST_SOP add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_R_CHECK_LIST_SOP add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_R_CHECK_LIST_SOP.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_R_CHECK_LIST_SOP.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Drop primary, unique and foreign key constraints 
alter table IUF_R_CHECK_LIST_SOP
  drop constraint FK_ID_CHECK_LIST_ITEM_01;
alter table IUF_R_CHECK_LIST_SOP
  drop constraint FK_IUF_D_SPECIE_VEGETALE_02;
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_R_CHECK_LIST_SOP
  add constraint FK_IUF_D_CHECK_LIST_ITEM_01 foreign key (ID_CHECK_LIST_ITEM)
  references IUF_D_CHECK_LIST_ITEM (ID_CHECK_LIST_ITEM);
alter table IUF_R_CHECK_LIST_SOP
  add constraint FK_IUF_T_SOPRALLUOGO_VIVAIO_01 foreign key (ID_SOPRALLUOGO_VIVAIO)
  references IUF_T_SOPRALLUOGO_VIVAIO (ID_SOPRALLUOGO);
--------------------------------------------
--  Changed table iuf_r_extra_field_camp  --
--------------------------------------------
-- Add/modify columns 
alter table IUF_R_EXTRA_FIELD_CAMP add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_R_EXTRA_FIELD_CAMP add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_R_EXTRA_FIELD_CAMP.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_R_EXTRA_FIELD_CAMP.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
------------------------------------
--  Changed table iuf_t_trappola  --
------------------------------------
-- Add/modify columns 
alter table IUF_T_TRAPPOLA add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_T_TRAPPOLA add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_TRAPPOLA.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_TRAPPOLA.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
----------------------------------------
--  Changed table iuf_t_trappolaggio  --
----------------------------------------
-- Add/modify columns 
alter table IUF_T_TRAPPOLAGGIO add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_T_TRAPPOLAGGIO add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_TRAPPOLAGGIO.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_TRAPPOLAGGIO.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Drop primary, unique and foreign key constraints 
alter table IUF_T_TRAPPOLAGGIO
  drop constraint FK_TRAPPOLA_01;
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_TRAPPOLAGGIO
  add constraint FK_IUF_T_TRAPPOLA_01 foreign key (ID_TRAPPOLA)
  references IUF_T_TRAPPOLA (ID_TRAPPOLA);
--------------------------------------------
--  Changed table iuf_r_extra_field_trap  --
--------------------------------------------
-- Add/modify columns 
alter table IUF_R_EXTRA_FIELD_TRAP add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_R_EXTRA_FIELD_TRAP add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_R_EXTRA_FIELD_TRAP.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_R_EXTRA_FIELD_TRAP.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
--------------------------------------------
--  Changed table iuf_t_ispezione_visiva  --
--------------------------------------------
-- Add/modify columns 
alter table IUF_T_ISPEZIONE_VISIVA modify numero_aviv VARCHAR2(20);
alter table IUF_T_ISPEZIONE_VISIVA add indicatore_intervento CHAR(1);
alter table IUF_T_ISPEZIONE_VISIVA add riferimento_ubicazione VARCHAR2(1000);
alter table IUF_T_ISPEZIONE_VISIVA add positivita CHAR(1);
alter table IUF_T_ISPEZIONE_VISIVA add diametro CHAR(1);
alter table IUF_T_ISPEZIONE_VISIVA add flag_indicatore_taglio CHAR(1);
alter table IUF_T_ISPEZIONE_VISIVA add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_T_ISPEZIONE_VISIVA add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_ISPEZIONE_VISIVA.numero_aviv
  is 'Numero autorizzazione AVIV (sistema esterno)';
comment on column IUF_T_ISPEZIONE_VISIVA.indicatore_intervento
  is 'Flag S/N - Indicatore intervento per fondo di solidarietà';
comment on column IUF_T_ISPEZIONE_VISIVA.riferimento_ubicazione
  is 'Riferimento ubicazione';
comment on column IUF_T_ISPEZIONE_VISIVA.positivita
  is 'Positività (P=Positiva; N=Negativa, D=Dubbia)';
comment on column IUF_T_ISPEZIONE_VISIVA.diametro
  is 'Diametro (1=<10; 2=tra 10 e 20; 3=>20)';
comment on column IUF_T_ISPEZIONE_VISIVA.flag_indicatore_taglio
  is 'Flag S/N - Indicatore taglio con free climber';
comment on column IUF_T_ISPEZIONE_VISIVA.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_ISPEZIONE_VISIVA.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Drop primary, unique and foreign key constraints 
alter table IUF_T_ISPEZIONE_VISIVA
  drop constraint IUF_T_RILEVAZIONE_02;
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_ISPEZIONE_VISIVA
  add constraint FK_IUF_T_RILEVAZIONE_04 foreign key (ID_RILEVAZIONE)
  references IUF_T_RILEVAZIONE (ID_RILEVAZIONE);
-- Create/Recreate check constraints 
alter table IUF_T_ISPEZIONE_VISIVA
  add constraint CHECK_DIAMETRO
  check (diametro in ('1','2','3'));
alter table IUF_T_ISPEZIONE_VISIVA
  add constraint CHECK_INDICATORE_INTERVENTO
  check (indicatore_intervento IN ('S','N'));
alter table IUF_T_ISPEZIONE_VISIVA
  add constraint CHECK_INDICATORE_TAGLIO
  check (FLAG_INDICATORE_TAGLIO in ('S','N'));
alter table IUF_T_ISPEZIONE_VISIVA
  add constraint CHECK_POSITIVITA
  check (positivita in ('P','N','D'));
----------------------------------------------
--  Changed table iuf_r_extra_field_visual  --
----------------------------------------------
-- Add/modify columns 
alter table IUF_R_EXTRA_FIELD_VISUAL add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_R_EXTRA_FIELD_VISUAL add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_R_EXTRA_FIELD_VISUAL.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_R_EXTRA_FIELD_VISUAL.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
----------------------------------------------
--  Changed table iuf_r_ispettore_aggiunto  --
----------------------------------------------
-- Add/modify columns 
alter table IUF_R_ISPETTORE_AGGIUNTO add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_R_ISPETTORE_AGGIUNTO add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_R_ISPETTORE_AGGIUNTO.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_R_ISPETTORE_AGGIUNTO.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-------------------------------------------
--  Changed table iuf_r_isp_visiva_foto  --
-------------------------------------------
-- Add/modify columns 
alter table IUF_R_ISP_VISIVA_FOTO add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_R_ISP_VISIVA_FOTO add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_R_ISP_VISIVA_FOTO.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_R_ISP_VISIVA_FOTO.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
----------------------------------------------
--  Changed table iuf_r_isp_visiva_spec_on  --
----------------------------------------------
-- Add/modify columns 
alter table IUF_R_ISP_VISIVA_SPEC_ON add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_R_ISP_VISIVA_SPEC_ON add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_R_ISP_VISIVA_SPEC_ON.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_R_ISP_VISIVA_SPEC_ON.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
---------------------------------------------
--  Changed table iuf_r_specie_on_periodo  --
---------------------------------------------
-- Add/modify columns 
alter table IUF_R_SPECIE_ON_PERIODO rename column data_inizio_val to DATA_INIZIO_VALIDITA;
alter table IUF_R_SPECIE_ON_PERIODO rename column data_fine_val to DATA_FINE_VALIDITA;
alter table IUF_R_SPECIE_ON_PERIODO add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_R_SPECIE_ON_PERIODO add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_R_SPECIE_ON_PERIODO.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_R_SPECIE_ON_PERIODO.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Drop primary, unique and foreign key constraints 
alter table IUF_R_SPECIE_ON_PERIODO
  drop constraint IUF_D_SPECIE_VEGETALE_04;
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_R_SPECIE_ON_PERIODO
  add constraint FK_IUF_D_SPECIE_VEGETALE_02 foreign key (ID_SPECIE_VEGETALE)
  references IUF_D_SPECIE_VEGETALE (ID_SPECIE_VEGETALE);
---------------------------------------------
--  Changed table iuf_r_trappolaggio_foto  --
---------------------------------------------
-- Add/modify columns 
alter table IUF_R_TRAPPOLAGGIO_FOTO add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_R_TRAPPOLAGGIO_FOTO add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_R_TRAPPOLAGGIO_FOTO.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_R_TRAPPOLAGGIO_FOTO.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-------------------------------------------------
--  Changed table iuf_t_manutenzione_trappola  --
-------------------------------------------------
-- Add/modify columns 
alter table IUF_T_MANUTENZIONE_TRAPPOLA add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_T_MANUTENZIONE_TRAPPOLA add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_MANUTENZIONE_TRAPPOLA.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_MANUTENZIONE_TRAPPOLA.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
------------------------------------------------
--  Changed table iuf_t_percorso_rilevazioni  --
------------------------------------------------
-- Add/modify columns 
alter table IUF_T_PERCORSO_RILEVAZIONI add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_T_PERCORSO_RILEVAZIONI add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_PERCORSO_RILEVAZIONI.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_PERCORSO_RILEVAZIONI.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
---------------------------------------------
--  Changed table iuf_t_previsione_on_est  --
---------------------------------------------
-- Add/modify columns 
alter table IUF_T_PREVISIONE_ON_EST add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_T_PREVISIONE_ON_EST add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_PREVISIONE_ON_EST.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_PREVISIONE_ON_EST.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
---------------------------------------------
--  Changed table iuf_t_previsione_on_reg  --
---------------------------------------------
-- Add/modify columns 
alter table IUF_T_PREVISIONE_ON_REG add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_T_PREVISIONE_ON_REG add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_PREVISIONE_ON_REG.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_PREVISIONE_ON_REG.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-------------------------------------------------
--  Changed table iuf_t_specie_on_precaricate  --
-------------------------------------------------
-- Add/modify columns 
alter table IUF_T_SPECIE_ON_PRECARICATE add ext_id_utente_aggiornamento NUMBER(10) not null;
alter table IUF_T_SPECIE_ON_PRECARICATE add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_SPECIE_ON_PRECARICATE.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_SPECIE_ON_PRECARICATE.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-----------------------------------
--  Changed table iuf_t_verbale  --
-----------------------------------
-- Add/modify columns 
alter table IUF_T_VERBALE add pdf_verbale BLOB LOB ( pdf_verbale ) STORE AS ( TABLESPACE iuffi_lob);
alter table IUF_T_VERBALE add ext_id_utente_aggiornamento NUMBER(10)  not null;
alter table IUF_T_VERBALE add data_ultimo_aggiornamento DATE default sysdate not null;
-- Add comments to the columns 
comment on column IUF_T_VERBALE.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column IUF_T_VERBALE.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-----------------------------------
--  New sequence seq_iuf_d_anfi  --
-----------------------------------
-- Create sequence 
create sequence SEQ_IUF_D_ANFI
minvalue 1
maxvalue 9999999999
start with 1
increment by 1
nocache
order;

--------------------------------------------
--  New sequence seq_iuf_d_trappola_ente  --
--------------------------------------------
-- Create sequence 
create sequence SEQ_IUF_D_TRAPPOLA_ENTE
minvalue 1
maxvalue 9999999999999999999999999999
start with 1
increment by 1
cache 20;

------------------------------------------
--  New sequence seq_iuf_d_trappola_on  --
------------------------------------------
-- Create sequence 
create sequence SEQ_IUF_D_TRAPPOLA_ON
minvalue 1
maxvalue 9999999999999999999999999999
start with 21
increment by 1
cache 20;

------------------------------------------------
--  New sequence seq_iuf_t_manutenzione_trap  --
------------------------------------------------
-- Create sequence 
create sequence SEQ_IUF_T_MANUTENZIONE_TRAP
minvalue 1
maxvalue 9999999999
start with 1
increment by 1
nocache
order;


--------------------------------
--  New table iuf_d_diametro  --
--------------------------------
-- Create table
create table IUF_D_DIAMETRO
(
  id_diametro   NUMBER(4) not null,
  desc_diametro VARCHAR2(100) not null
)
tablespace IUFFI_TBL;
-- Add comments to the table 
comment on table IUF_D_DIAMETRO
  is 'Diametro piante rilevato durante ispezione visiva';
-- Add comments to the columns 
comment on column IUF_D_DIAMETRO.id_diametro
  is 'Progressivo univoco identificativo del record';
comment on column IUF_D_DIAMETRO.desc_diametro
  is 'Descrizione diametro';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_D_DIAMETRO
  add constraint PK_IUF_D_DIAMETRO primary key (ID_DIAMETRO)
  using index 
  tablespace IUFFI_IDX;
----------------------------------
--  New table iuf_d_positivita  --
----------------------------------
-- Create table
create table IUF_D_POSITIVITA
(
  id_positivita   NUMBER(4) not null,
  desc_positivita VARCHAR2(100) not null
)
tablespace IUFFI_TBL;
-- Add comments to the table 
comment on table IUF_D_POSITIVITA
  is 'Positivita piante rilevata durante ispezione visiva';
-- Add comments to the columns 
comment on column IUF_D_POSITIVITA.id_positivita
  is 'Progressivo univoco identificativo del record';
comment on column IUF_D_POSITIVITA.desc_positivita
  is 'Descrizione positività';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_D_POSITIVITA
  add constraint PK_IUF_D_POSITIVITA primary key (ID_POSITIVITA)
  using index 
  tablespace IUFFI_IDX;
--------------------------------------------
--  Changed table iuf_t_ispezione_visiva  --
--------------------------------------------
-- Drop columns 
alter table IUF_T_ISPEZIONE_VISIVA drop column positivita;
alter table IUF_T_ISPEZIONE_VISIVA drop column diametro;
alter table IUF_T_ISPEZIONE_VISIVA drop column flag_indicatore_taglio;
alter table IUF_T_ISPEZIONE_VISIVA rename column presenza_on to FLAG_PRESENZA_ON;
alter table IUF_T_ISPEZIONE_VISIVA rename column indicatore_intervento to FLAG_INDICATORE_INTERVENTO;

-- Create/Recreate check constraints 
alter table IUF_T_ISPEZIONE_VISIVA
  drop constraint CHECK_INDICATORE_INTERVENTO;
alter table IUF_T_ISPEZIONE_VISIVA
  add constraint CHECK_INDICATORE_INTERVENTO
  check (FLAG_INDICATORE_INTERVENTO IN ('S','N'));
alter table IUF_T_ISPEZIONE_VISIVA
  drop constraint CHECK_PRESENZA_ON;
alter table IUF_T_ISPEZIONE_VISIVA
  add constraint CHECK_PRESENZA_ON
  check (FLAG_PRESENZA_ON IN ( 'N', 'S' ));
-----------------------------------------
--  New table iuf_t_isp_visiva_pianta  --
-----------------------------------------
-- Create table
create table IUF_T_ISP_VISIVA_PIANTA
(
  id_ispezione_visiva_pianta  NUMBER(10) not null,
  id_ispezione_visiva         NUMBER(10) not null,
  numero_pianta               NUMBER(4) not null,
  latitudine                  NUMBER(13,10),
  longitudine                 NUMBER(13,10),
  nome                        VARCHAR2(50),
  cognome                     VARCHAR2(50),
  indirizzo                   VARCHAR2(100),
  telefono                    VARCHAR2(50),
  email                       VARCHAR2(100),
  positivita                  NUMBER(4),
  diametro                    NUMBER(4),
  flag_tree_climber_ispezione CHAR(1),
  flag_tree_climber_taglio    CHAR(1),
  note1                       VARCHAR2(4000),
  note2                       VARCHAR2(4000),
  note3                       VARCHAR2(4000)
)
tablespace IUFFI_TBL;
-- Add comments to the table 
comment on table IUF_T_ISP_VISIVA_PIANTA
  is 'Piante ispezionate';
-- Add comments to the columns 
comment on column IUF_T_ISP_VISIVA_PIANTA.id_ispezione_visiva_pianta
  is 'Progressivo univoco identificativo del record';
comment on column IUF_T_ISP_VISIVA_PIANTA.id_ispezione_visiva
  is 'Riferimento all''ispezione visiva';
comment on column IUF_T_ISP_VISIVA_PIANTA.numero_pianta
  is 'Numero identificativo pianta';
comment on column IUF_T_ISP_VISIVA_PIANTA.latitudine
  is 'Latitudine (UTM)';
comment on column IUF_T_ISP_VISIVA_PIANTA.longitudine
  is 'Longitudine (UTM)';
comment on column IUF_T_ISP_VISIVA_PIANTA.nome
  is 'Nome proprietario';
comment on column IUF_T_ISP_VISIVA_PIANTA.cognome
  is 'Cognome proprietario';
comment on column IUF_T_ISP_VISIVA_PIANTA.indirizzo
  is 'Indirizzo ubicazione proprietario';
comment on column IUF_T_ISP_VISIVA_PIANTA.telefono
  is 'Telefono proprietario';
comment on column IUF_T_ISP_VISIVA_PIANTA.email
  is 'Email ubicazione proprietario';
comment on column IUF_T_ISP_VISIVA_PIANTA.positivita
  is 'Riferimento alla positività';
comment on column IUF_T_ISP_VISIVA_PIANTA.diametro
  is 'Riferimento al diametro della pianta';
comment on column IUF_T_ISP_VISIVA_PIANTA.flag_tree_climber_ispezione
  is 'Flag indicatore ispezione free climber';
comment on column IUF_T_ISP_VISIVA_PIANTA.flag_tree_climber_taglio
  is 'Flag indicatore taglio free climber';
comment on column IUF_T_ISP_VISIVA_PIANTA.note1
  is 'Campo note';
comment on column IUF_T_ISP_VISIVA_PIANTA.note2
  is 'Campo note';
comment on column IUF_T_ISP_VISIVA_PIANTA.note3
  is 'Campo note';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_ISP_VISIVA_PIANTA
  add constraint PK_IUF_T_ISP_VISIVA_PIANTA primary key (ID_ISPEZIONE_VISIVA_PIANTA)
  using index 
  tablespace IUFFI_IDX;
alter table IUF_T_ISP_VISIVA_PIANTA
  add constraint FK_IUF_D_DIAMETRO_01 foreign key (DIAMETRO)
  references IUF_D_DIAMETRO (ID_DIAMETRO);
alter table IUF_T_ISP_VISIVA_PIANTA
  add constraint FK_IUF_D_POSITIVITA_01 foreign key (POSITIVITA)
  references IUF_D_POSITIVITA (ID_POSITIVITA);
alter table IUF_T_ISP_VISIVA_PIANTA
  add constraint FK_IUF_T_ISPEZIONE_VISIVA_04 foreign key (ID_ISPEZIONE_VISIVA)
  references IUF_T_ISPEZIONE_VISIVA (ID_ISPEZIONE);
-- Create sequence 
create sequence SEQ_IUF_T_ISP_VISIVA_PIANTA
minvalue 1
maxvalue 9999999999
start with 1
increment by 1
nocache
order;


-- Create table
create table IUF_R_DISABILITA_CDU
(
  ext_id_livello    NUMBER(4) not null,
  ext_COD_MACRO_CDU VARCHAR2(50) not null
)
tablespace IUFFI_TBL;
-- Add comments to the columns 
COMMENT ON TABLE IUF_R_DISABILITA_CDU IS 'Per ogni Id livello definito su Papua, la tabella contiene i codici macro cdu da disabiltare';
comment on column IUF_R_DISABILITA_CDU.ext_id_livello
  is 'Id livello definito su Papua: 6001 - Amministratore, 6002 - Funzionario di back office, 6003 - Funzionario di laboratorio,
      6004 - Incaricato di monitoraggio, 6005 - Ispettore di monitoraggio, 6006 - Supervisore';
comment on column IUF_R_DISABILITA_CDU.ext_COD_MACRO_CDU
  is 'Codice dei casi d''uso previsti su papua';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_R_DISABILITA_CDU
  add constraint PK_IUF_R_DISABILITA_CDU primary key (ext_ID_LIVELLO, ext_COD_MACRO_CDU)
  using index 
  tablespace IUFFI_IDX;
-- Drop columns 
alter table IUF_T_TRAPPOLA drop column id_trappolaggio;

-- Add/modify columns 
alter table IUF_T_CAMPIONAMENTO add data_ora_inizio DATE DEFAULT SYSDATE NOT NULL;
alter table IUF_T_CAMPIONAMENTO add data_ora_fine DATE;
-- Add comments to the columns 
comment on column IUF_T_CAMPIONAMENTO.data_ora_inizio
  is 'Data e ora inizio attività di campionamento';
comment on column IUF_T_CAMPIONAMENTO.data_ora_fine
  is 'Data e ora fine attività di campionamento';
-- Add/modify columns 
alter table IUF_T_ISPEZIONE_VISIVA add data_ora_inizio DATE DEFAULT SYSDATE NOT NULL;
alter table IUF_T_ISPEZIONE_VISIVA add data_ora_fine date;
-- Add comments to the columns 
comment on column IUF_T_ISPEZIONE_VISIVA.data_ora_inizio
  is 'Data e ora inizio ispezione visiva';
comment on column IUF_T_ISPEZIONE_VISIVA.data_ora_fine
  is 'Data e ora fine ispezione visiva';

-- Add/modify columns 
alter table IUF_D_ORGANISMO_NOCIVO add flag_emergenza varchar2(1) default 'N' not null;
-- Add comments to the columns 
comment on column IUF_D_ORGANISMO_NOCIVO.flag_emergenza
  is 'Flag S/N - Indica se l''organismo nocivo deve essere mostrato nelle rilevazioni fatte in emergenza';

  
-- Create table
create table IUF_R_TIPO_CAMPIONE_ENTE
(
  id_tipo_campione_ente       NUMBER(4) not null,
  id_tipo_campione            NUMBER(4) not null,
  id_ente                     NUMBER(4) not null,
  costo                       NUMBER(8,2) not null,
  data_inizio_validita        DATE default sysdate not null,
  data_fine_validita          DATE,
  ext_id_utente_aggiornamento NUMBER(10) not null,
  data_ultimo_aggiornamento   DATE default sysdate not null
)
tablespace IUFFI_TBL;
-- Add comments to the table 
comment on column IUF_R_TIPO_CAMPIONE_ENTE.id_tipo_campione_ente
  is 'Progressivo univoco identificativo del record';
comment on table iuf_r_tipo_campione_ente
  is 'Costo campioni per ente';
-- Add comments to the columns 
comment on column iuf_r_tipo_campione_ente.id_tipo_campione
  is 'Identificativo del tipo campione';
comment on column iuf_r_tipo_campione_ente.id_ente
  is 'Identificativo Ente';
comment on column iuf_r_tipo_campione_ente.costo
  is 'costo in euro della trappola';
comment on column iuf_r_tipo_campione_ente.data_inizio_validita
  is 'Data inizio validità del record';
comment on column iuf_r_tipo_campione_ente.data_fine_validita
  is 'Data fine validità del record';
comment on column iuf_r_tipo_campione_ente.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column iuf_r_tipo_campione_ente.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_R_TIPO_CAMPIONE_ENTE
  add constraint PK_IUF_R_TIPO_CAMPIONE_ENTE primary key (ID_TIPO_CAMPIONE_ENTE)
  using index 
  tablespace IUFFI_IDX;
alter table iuf_r_tipo_campione_ente
  add constraint FK_IUF_D_ENTE_03 foreign key (ID_ENTE)
  references IUF_D_ENTE (ID_ENTE);
alter table iuf_r_tipo_campione_ente
  add constraint FK_IUF_D_TIPO_CAMPIONE_02 foreign key (ID_TIPO_CAMPIONE)
  references iuf_d_tipo_campione (ID_TIPO_CAMPIONE);
-- Drop columns 
alter table IUF_D_TIPO_CAMPIONE drop column costo;
-- Unique keys
alter table IUF_R_TIPO_CAMPIONE_ENTE
  add constraint AK_IUF_R_TIPO_CAMPIONE_ENTE unique (ID_TIPO_CAMPIONE, ID_ENTE, DATA_FINE_VALIDITA)
  using index 
  tablespace IUFFI_IDX;  

create sequence seq_iuf_r_tipo_campione_ente start with 1 nocache;


-- Add/modify columns 
alter table IUF_D_ANFI add data_inizio_validita DATE default sysdate not null;
alter table IUF_D_ANFI add data_fine_validita DATE;
-- Add comments to the columns 
comment on column IUF_D_ANFI.data_inizio_validita
  is 'Data inizio validita'' del record';
comment on column IUF_D_ANFI.data_fine_validita
  is 'Data fine validita'' del record';


-- Add/modify columns 
alter table IUF_T_ISPEZIONE_VISIVA add id_anagrafica number(10);
-- Add comments to the columns 
comment on column IUF_T_ISPEZIONE_VISIVA.id_anagrafica
  is 'Riferimento all''ispettore che ha effettuato l''attività';
--
alter table IUF_T_ISPEZIONE_VISIVA modify id_anagrafica not null;
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_ISPEZIONE_VISIVA
  add constraint fk_iuf_t_anagrafica_05 foreign key (ID_ANAGRAFICA)
  references iuf_t_anagrafica (ID_ANAGRAFICA);
--
-- Add/modify columns 
alter table IUF_T_CAMPIONAMENTO add id_anagrafica number(10);
-- Add comments to the columns 
comment on column IUF_T_CAMPIONAMENTO.id_anagrafica
  is 'Riferimento all''ispettore che ha effettuato l''attività';
--
alter table IUF_T_CAMPIONAMENTO modify id_anagrafica not null;
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_CAMPIONAMENTO
  add constraint fk_iuf_t_anagrafica_06 foreign key (ID_ANAGRAFICA)
  references iuf_t_anagrafica (ID_ANAGRAFICA);
--
-- Add/modify columns 
alter table IUF_T_TRAPPOLAGGIO add id_anagrafica number(10);
-- Add comments to the columns 
comment on column IUF_T_TRAPPOLAGGIO.id_anagrafica
  is 'Riferimento all''ispettore che ha effettuato l''attività';
--
alter table IUF_T_TRAPPOLAGGIO modify id_anagrafica not null;
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_TRAPPOLAGGIO
  add constraint fk_iuf_t_anagrafica_07 foreign key (ID_ANAGRAFICA)
  references iuf_t_anagrafica (ID_ANAGRAFICA);
--
-- Add/modify columns 
alter table IUF_T_SOPRALLUOGO_VIVAIO add id_anagrafica number(10);
-- Add comments to the columns 
comment on column IUF_T_SOPRALLUOGO_VIVAIO.id_anagrafica
  is 'Riferimento all''ispettore che ha effettuato l''attività';
--
--
alter table IUF_T_SOPRALLUOGO_VIVAIO modify id_anagrafica not null;
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_SOPRALLUOGO_VIVAIO
  add constraint fk_iuf_t_anagrafica_08 foreign key (ID_ANAGRAFICA)
  references iuf_t_anagrafica (ID_ANAGRAFICA);

create sequence seq_iuf_t_piano_monitoraggio start with 1 nocache;

create table iuf_t_piano_monitoraggio
(
  id_piano_monitoraggio       NUMBER(4) not null,
  anno                        number(4) not null,
  versione                    VARCHAR2(50) not null,
  data_inizio_validita        DATE not null,
  data_fine_validita          DATE,
  data_inserimento            date default sysdate not null,
  ext_id_utente_aggiornamento NUMBER(10) not null,
  data_ultimo_aggiornamento   DATE default sysdate not null
)
tablespace IUFFI_TBL;
-- Add comments to the table 
comment on table iuf_t_piano_monitoraggio
  is 'Piani di monitoraggio attività';
-- Add comments to the columns 
comment on column iuf_t_piano_monitoraggio.id_piano_monitoraggio
  is 'Progressivo univoco identificativo del record';
comment on column iuf_t_piano_monitoraggio.anno
  is 'Anno piano';
comment on column iuf_t_piano_monitoraggio.versione
  is 'Versione';
comment on column iuf_t_piano_monitoraggio.data_inizio_validita
  is 'Data inizio validità del piano';
comment on column iuf_t_piano_monitoraggio.data_fine_validita
  is 'Data fine validità del record';
comment on column iuf_t_piano_monitoraggio.data_inserimento
  is 'Data inserimento del piano';
comment on column iuf_t_piano_monitoraggio.ext_id_utente_aggiornamento
  is 'Utente inserimento o di ultima modifica del record';
comment on column iuf_t_piano_monitoraggio.data_ultimo_aggiornamento
  is 'Timestamp inserimento/ultimo aggiornamento del record';
-- Create/Recreate primary, unique and foreign key constraints 
alter table iuf_t_piano_monitoraggio
  add constraint PK_IUF_T_PIANO_MONITORAGGIO primary key (ID_PIANO_MONITORAGGIO)
  using index 
  tablespace IUFFI_IDX;
  
-- Drop table
drop table IUF_T_ISP_VISIVA_PIANTA cascade constraints;
-- Create table
create table IUF_T_ISP_VISIVA_PIANTA
(
  id_ispezione_visiva_pianta  NUMBER(10) not null,
  id_ispezione_visiva         NUMBER(10) not null,
  id_specie_vegetale          number(4) not null,
  numero_pianta               NUMBER(4),
  latitudine                  NUMBER(13,10),
  longitudine                 NUMBER(13,10),
  nome                        VARCHAR2(50),
  cognome                     VARCHAR2(50),
  indirizzo                   VARCHAR2(100),
  telefono                    VARCHAR2(50),
  email                       VARCHAR2(100),
  positivita                  NUMBER(4),
  diametro                    NUMBER(4),
  flag_tree_climber_ispezione CHAR(1),
  flag_tree_climber_taglio    CHAR(1),
  note1                       VARCHAR2(4000),
  note2                       VARCHAR2(4000),
  note3                       VARCHAR2(4000)
)
tablespace IUFFI_TBL;
-- Add comments to the table 
comment on table IUF_T_ISP_VISIVA_PIANTA
  is 'Piante ispezionate';
-- Add comments to the columns 
comment on column IUF_T_ISP_VISIVA_PIANTA.id_ispezione_visiva_pianta
  is 'Progressivo univoco identificativo del record';
comment on column IUF_T_ISP_VISIVA_PIANTA.id_ispezione_visiva
  is 'Riferimento all''ispezione visiva';
comment on column IUF_T_ISP_VISIVA_PIANTA.id_specie_vegetale
  is 'Riferimento alla specie vegetale della pianta';
comment on column IUF_T_ISP_VISIVA_PIANTA.numero_pianta
  is 'Numero identificativo pianta';
comment on column IUF_T_ISP_VISIVA_PIANTA.latitudine
  is 'Latitudine (UTM)';
comment on column IUF_T_ISP_VISIVA_PIANTA.longitudine
  is 'Longitudine (UTM)';
comment on column IUF_T_ISP_VISIVA_PIANTA.nome
  is 'Nome proprietario';
comment on column IUF_T_ISP_VISIVA_PIANTA.cognome
  is 'Cognome proprietario';
comment on column IUF_T_ISP_VISIVA_PIANTA.indirizzo
  is 'Indirizzo ubicazione proprietario';
comment on column IUF_T_ISP_VISIVA_PIANTA.telefono
  is 'Telefono proprietario';
comment on column IUF_T_ISP_VISIVA_PIANTA.email
  is 'Email ubicazione proprietario';
comment on column IUF_T_ISP_VISIVA_PIANTA.positivita
  is 'Riferimento alla positività';
comment on column IUF_T_ISP_VISIVA_PIANTA.diametro
  is 'Riferimento al diametro della pianta';
comment on column IUF_T_ISP_VISIVA_PIANTA.flag_tree_climber_ispezione
  is 'Flag indicatore ispezione free climber';
comment on column IUF_T_ISP_VISIVA_PIANTA.flag_tree_climber_taglio
  is 'Flag indicatore taglio free climber';
comment on column IUF_T_ISP_VISIVA_PIANTA.note1
  is 'Campo note';
comment on column IUF_T_ISP_VISIVA_PIANTA.note2
  is 'Campo note';
comment on column IUF_T_ISP_VISIVA_PIANTA.note3
  is 'Campo note';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_ISP_VISIVA_PIANTA
  add constraint PK_IUF_T_ISP_VISIVA_PIANTA primary key (ID_ISPEZIONE_VISIVA_PIANTA)
  using index 
  tablespace IUFFI_IDX;
alter table IUF_T_ISP_VISIVA_PIANTA
  add constraint FK_IUF_D_DIAMETRO_01 foreign key (DIAMETRO)
  references IUF_D_DIAMETRO (ID_DIAMETRO);
alter table IUF_T_ISP_VISIVA_PIANTA
  add constraint FK_IUF_D_POSITIVITA_01 foreign key (POSITIVITA)
  references IUF_D_POSITIVITA (ID_POSITIVITA);
alter table IUF_T_ISP_VISIVA_PIANTA
  add constraint FK_IUF_T_ISPEZIONE_VISIVA_04 foreign key (ID_ISPEZIONE_VISIVA)
  references IUF_T_ISPEZIONE_VISIVA (ID_ISPEZIONE);
-- Modifiche tabella Rilevazione
ALTER TABLE IUF_T_RILEVAZIONE
DROP COLUMN MINUTI_INIZIO;
--
ALTER TABLE IUF_T_RILEVAZIONE
DROP COLUMN MINUTI_FINE;
--
ALTER TABLE IUF_T_RILEVAZIONE
ADD DATA_ORA_INIZIO DATE DEFAULT sysdate NOT null;
comment on column IUF_T_RILEVAZIONE.DATA_ORA_INIZIO
  is 'Data e ora di inizio della rilevazione dati in campo';
--
ALTER TABLE IUF_T_RILEVAZIONE
ADD DATA_ORA_FINE DATE DEFAULT sysdate;
comment on column IUF_T_RILEVAZIONE.DATA_ORA_FINE
  is 'Data e ora di fine della rilevazione dati in campo';
--
alter table IUF_T_RILEVAZIONE modify (ID_TIPO_AREA null);
alter table IUF_T_RILEVAZIONE modify (VISUAL null);
alter table IUF_T_RILEVAZIONE modify (CAMPIONAMENTO null);
alter table IUF_T_RILEVAZIONE modify (TRAPPOLAGGIO null);
alter table IUF_T_RILEVAZIONE modify (ORA_INIZIO null);

alter table IUF_T_ISP_VISIVA_PIANTA
  add constraint FK_IUF_D_SPECIE_VEGETALE_04 foreign key (ID_SPECIE_VEGETALE)
  references iuf_d_specie_vegetale (ID_SPECIE_VEGETALE);
  
-- Add/modify columns 
alter table IUF_T_PREVISIONE_ON_EST add id_piano_monitoraggio number(4) NOT NULL;
-- Add comments to the columns 
comment on column IUF_T_PREVISIONE_ON_EST.id_piano_monitoraggio
  is 'Riferimento al piano di monitoraggio annuale';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_PREVISIONE_ON_EST
  add constraint FK_IUF_T_PIANO_MONITORAGGIO_01 foreign key (ID_PIANO_MONITORAGGIO)
  references iuf_t_piano_monitoraggio (ID_PIANO_MONITORAGGIO);
-- Add/modify columns 
alter table IUF_T_PREVISIONE_ON_REG add id_piano_monitoraggio number(4) NOT NULL;
-- Add comments to the columns 
comment on column IUF_T_PREVISIONE_ON_REG.id_piano_monitoraggio
  is 'Riferimento al piano di monitoraggio annuale';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_PREVISIONE_ON_REG
  add constraint FK_IUF_T_PIANO_MONITORAGGIO_02 foreign key (ID_PIANO_MONITORAGGIO)
  references iuf_t_piano_monitoraggio (ID_PIANO_MONITORAGGIO);    
  
-- Drop columns 
alter table IUF_T_PREVISIONE_ON_REG drop column anno;
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_PREVISIONE_ON_REG
  add constraint AK_IUF_T_PREVISIONE_ON_REG unique (ID_SPECIE_ON, ID_PIANO_MONITORAGGIO)
  using index 
  tablespace IUFFI_IDX;
-- Drop columns 
alter table IUF_T_PREVISIONE_ON_EST drop column anno;
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_PREVISIONE_ON_EST
  add constraint AK_IUF_T_PREVISIONE_ON_EST unique (ID_SPECIE_ON, ID_PIANO_MONITORAGGIO)
  using index 
  tablespace IUFFI_IDX;  
  
ALTER TABLE IUF_T_ISP_VISIVA_PIANTA
ADD EXT_ID_UTENTE_AGGIORNAMENTO varchar2(10) NOT null;
comment on column IUF_T_ISP_VISIVA_PIANTA.EXT_ID_UTENTE_AGGIORNAMENTO
  is 'Utente inserimento o di ultima modifica del record';
--
ALTER TABLE IUF_T_ISP_VISIVA_PIANTA
ADD DATA_ULTIMO_AGGIORNAMENTO DATE DEFAULT sysdate NOT null;
comment on column IUF_T_ISP_VISIVA_PIANTA.DATA_ULTIMO_AGGIORNAMENTO
  is 'Timestamp inserimento/ultimo aggiornamento del record';
--
alter table IUF_T_ISPEZIONE_VISIVA modify (LATITUDINE NUMBER(18,15));
alter table IUF_T_ISPEZIONE_VISIVA modify (LONGITUDINE NUMBER(18,15));
alter table IUF_T_ISP_VISIVA_PIANTA modify (LATITUDINE NUMBER(18,15));
alter table IUF_T_ISP_VISIVA_PIANTA modify (LONGITUDINE NUMBER(18,15));
alter table IUF_T_PERCORSO_RILEVAZIONI modify (LATITUDINE NUMBER(18,15));
alter table IUF_T_PERCORSO_RILEVAZIONI modify (LONGITUDINE NUMBER(18,15));
alter table IUF_T_CAMPIONAMENTO modify (LATITUDINE NUMBER(18,15));
alter table IUF_T_CAMPIONAMENTO modify (LONGITUDINE NUMBER(18,15));
alter table IUF_T_TRAPPOLA modify (LATITUDINE NUMBER(18,15));
alter table IUF_T_TRAPPOLA modify (LONGITUDINE NUMBER(18,15));  

alter table IUF_T_ANAGRAFICA
  drop constraint UN_IUF_T_ANAGRAFICA_01 cascade;
alter table IUF_T_ANAGRAFICA
  add constraint UN_IUF_T_ANAGRAFICA_01 unique (CF_ANAGRAFICA_EST, DATA_FINE_VALIDITA)
  using index 
  tablespace IUFFI_IDX;
  
-- Add/modify columns 
alter table IUF_D_SPECIE_VEGETALE add codice_eppo varchar2(50);
-- Add comments to the columns 
comment on column IUF_D_SPECIE_VEGETALE.codice_eppo
  is 'Codice EPPO';
-- Add/modify columns 
alter table IUF_D_TIPO_AREA add typology_of_location varchar2(1000);
-- Add comments to the columns 
comment on column IUF_D_TIPO_AREA.typology_of_location
  is 'Descrizione in inglese della tipologia area (UE)';
-- Add/modify columns 
alter table IUF_D_TIPO_CAMPIONE add typology_of_samples nvarchar2(2000);
-- Add comments to the columns 
comment on column IUF_D_TIPO_CAMPIONE.typology_of_samples
  is 'Descrizione in inglese del tipo campioni (UE)';
-- Add/modify columns 
alter table IUF_T_TRAPPOLA add codice_sfr varchar2(50);
-- Add comments to the columns 
comment on column IUF_T_TRAPPOLA.codice_sfr
  is 'Codice SFR';  
  
-- Add/modify columns 
alter table IUF_T_PREVISIONE_ON_REG rename column ore to ORE_visual;
alter table IUF_T_PREVISIONE_ON_REG add num_visual NUMBER(6);
alter table IUF_T_PREVISIONE_ON_REG add ore_campioni NUMBER(6);
alter table IUF_T_PREVISIONE_ON_REG add ore_trappole NUMBER(6);
-- Add comments to the columns 
comment on column IUF_T_PREVISIONE_ON_REG.num_visual
  is 'Numero di ispezioni visive';
comment on column IUF_T_PREVISIONE_ON_REG.ore_campioni
  is 'Numero di ore previste relative ad attività di campionamento';
comment on column IUF_T_PREVISIONE_ON_REG.ore_trappole
  is 'Numero di ore previste relative ad attività di trappolaggio';
-- Add/modify columns 
alter table IUF_T_PREVISIONE_ON_EST rename column ore_ispezioni_visive to ORE_VISUAL;
alter table IUF_T_PREVISIONE_ON_EST modify ore_visual NUMBER(6);
alter table IUF_T_PREVISIONE_ON_EST add num_visual NUMBER(6);
alter table IUF_T_PREVISIONE_ON_EST add ore_campioni NUMBER(6);
alter table IUF_T_PREVISIONE_ON_EST add ore_trappole NUMBER(6);
alter table IUF_T_PREVISIONE_ON_EST add num_analisi NUMBER(6);
-- Add comments to the columns 
comment on column IUF_T_PREVISIONE_ON_EST.num_visual
  is 'Numero di ispezioni visive';
comment on column IUF_T_PREVISIONE_ON_EST.ore_campioni
  is 'Numero di ore relative ad attività di campionamento';
comment on column IUF_T_PREVISIONE_ON_EST.ore_trappole
  is 'Numero di ore relative ad attività di trappolaggio';
comment on column IUF_T_PREVISIONE_ON_EST.num_analisi
  is 'Numero di analisi previsto';
-- Add/modify columns 
alter table IUF_T_PIANO_MONITORAGGIO add note varchar2(4000);
-- Add comments to the columns 
comment on column IUF_T_PIANO_MONITORAGGIO.note
  is 'Note al piano di monitoraggio';  
  
ALTER TABLE iuf_t_ispezione_visiva
ADD cuaa VARCHAR(16); 
comment on column iuf_t_ispezione_visiva.cuaa
  is 'cuaa o codice azienda';  

-- Drop columns 
alter table IUF_T_ANAGRAFICA drop column id_categoria;

DROP TABLE iuf_d_categoria_anag;

-- Add/modify columns 
alter table IUF_T_FOTO add latitudine number(18,15);
alter table IUF_T_FOTO add longitudine number(18,15);
-- Add comments to the columns 
comment on column IUF_T_FOTO.latitudine
  is 'Latitudine (UTM)';
comment on column IUF_T_FOTO.longitudine
  is 'Longitudine (UTM)';
  
-- Drop columns 
alter table IUF_T_CAMPIONAMENTO drop column id_esito;
 
-- Add/modify columns 
alter table IUF_T_ESITO_CAMPIONE add cod_campione varchar2(100) not null;
-- Add comments to the table 
comment on table IUF_T_ESITO_CAMPIONE
  is 'Esito analisi del campione';
-- Add comments to the columns 
comment on column IUF_T_ESITO_CAMPIONE.cod_campione
  is 'Codice che identifica il campione';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_ESITO_CAMPIONE
  add constraint fk_iuf_t_campionamento_04 foreign key (ID_CAMPIONAMENTO)
  references iuf_t_campionamento (ID_CAMPIONAMENTO);  

-- Add/modify columns 
alter table IUF_T_CAMPIONAMENTO add id_ispezione_visiva NUMBER(10);
-- Add comments to the columns 
comment on column IUF_T_CAMPIONAMENTO.id_ispezione_visiva
  is 'Riferimento all''ispezione visiva da cui deriva il campionamento';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_CAMPIONAMENTO
  add constraint FK_IUF_T_ISPEZIONE_VISIVA_05 foreign key (ID_ISPEZIONE_VISIVA)
  references iuf_t_ispezione_visiva (ID_ISPEZIONE);

alter table IUF_T_ESITO_CAMPIONE add id_anfi number(4) not null;
-- Add comments to the columns 
comment on column IUF_T_ESITO_CAMPIONE.id_anfi
  is 'Riferimento al test effettuato censito su Anfi';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_ESITO_CAMPIONE
  add constraint fk_iuf_d_anfi_02 foreign key (ID_ANFI)
  references iuf_d_anfi (ID_ANFI);

alter table IUF_T_CAMPIONAMENTO drop column id_anfi;

-- Create table
create table IUF_D_OPERAZIONE_TRAPPOLA
(
  id_operazione_trappola   NUMBER(4) not null,
  desc_operazione_trappola VARCHAR2(1000 CHAR) not null
)
tablespace IUFFI_TBL;
-- Add comments to the table 
comment on table IUF_D_OPERAZIONE_TRAPPOLA
  is 'Tipo di operazione sulla trappola';
-- Add comments to the columns 
comment on column IUF_D_OPERAZIONE_TRAPPOLA.id_operazione_trappola
  is 'Progressivo univoco identificativo del record';
comment on column IUF_D_OPERAZIONE_TRAPPOLA.desc_operazione_trappola
  is 'Descrizione della tipologia di operazione';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_D_OPERAZIONE_TRAPPOLA
  add constraint PK_IUF_D_OPERAZIONE_TRAPPOLA primary key (ID_OPERAZIONE_TRAPPOLA)
  using index 
  tablespace IUFFI_IDX;
DROP TABLE iuf_t_manutenzione_trappola;
--

-- Drop check constraints 
alter table IUF_T_TRAPPOLAGGIO
  drop constraint CHECK_OPERAZIONE;
-- Add/modify columns 
alter table IUF_T_TRAPPOLAGGIO rename column operazione to ID_OPERAZIONE;
alter table IUF_T_TRAPPOLAGGIO modify id_operazione number(4);
alter table IUF_T_TRAPPOLAGGIO add note varchar2(4000);
alter table IUF_T_TRAPPOLAGGIO add data_trappolaggio date not null;
-- Add comments to the columns 
comment on column IUF_T_TRAPPOLAGGIO.note
  is 'Note al trappolaggio';
comment on column IUF_T_TRAPPOLAGGIO.data_trappolaggio
  is 'Data trappolaggio';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_TRAPPOLAGGIO
  add constraint FK_IUF_D_OPERAZIONE_TRAP_01 foreign key (ID_OPERAZIONE)
  references iuf_d_operazione_trappola (ID_OPERAZIONE_TRAPPOLA);
--

-- Add/modify columns 
alter table IUF_T_TRAPPOLAGGIO add id_ispezione_visiva number(4);
-- Add comments to the columns 
comment on column IUF_T_TRAPPOLAGGIO.id_ispezione_visiva
  is 'Riferimento all''ispezione visiva da cui deriva il trappolaggio';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_TRAPPOLAGGIO
  add constraint fk_iuf_t_ispezione_visiva_06 foreign key (ID_ISPEZIONE_VISIVA)
  references iuf_t_ispezione_visiva (ID_ISPEZIONE);
  
-- Create table
create table iuf_d_stato_verbale
(
  id_stato_verbale   NUMBER(4) not null,
  desc_stato_verbale VARCHAR2(100) not null
)
tablespace IUFFI_TBL;
-- Add comments to the table 
comment on table iuf_d_stato_verbale
  is 'Stato del verbale';
-- Add comments to the columns 
comment on column iuf_d_stato_verbale.id_stato_verbale
  is 'Progressivo univoco identificativo del record';
comment on column iuf_d_stato_verbale.desc_stato_verbale
  is 'Descrizione stato verbale';
-- Create/Recreate primary, unique and foreign key constraints 
alter table iuf_d_stato_verbale
  add constraint PK_iuf_d_stato_verbale primary key (ID_STATO_VERBALE)
  using index 
  tablespace IUFFI_IDX;
-- Add/modify columns 
alter table IUF_T_VERBALE add num_verbale varchar2(50);
alter table IUF_T_VERBALE add id_stato_verbale number(4);
-- Add comments to the columns 
comment on column IUF_T_VERBALE.pdf_verbale
  is 'File pdf del verbale';
comment on column IUF_T_VERBALE.num_verbale
  is 'Numero verbale';
comment on column IUF_T_VERBALE.id_stato_verbale
  is 'Riferimento allo stato del verbale';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_VERBALE
  add constraint fk_iuf_d_stato_verbale_01 foreign key (ID_STATO_VERBALE)
  references iuf_d_stato_verbale (ID_STATO_VERBALE);
  
alter table IUF_T_TRAPPOLA
  add constraint AK1_IUF_T_TRAPPOLA unique (CODICE_SFR)
  using index 
  tablespace IUFFI_IDX;
  
-- Add/modify columns 
alter table IUF_D_TIPO_AREA add velocita number(3);
-- Add comments to the columns 
comment on column IUF_D_TIPO_AREA.velocita
  is 'Campo utile al calcolo peso riga';
  
-- Add/modify columns 
alter table IUF_T_TRAPPOLAGGIO add id_organismo_nocivo NUMBER(4);
-- Add comments to the columns 
comment on column IUF_T_TRAPPOLAGGIO.id_organismo_nocivo
  is 'Identificativo dell''organismo nocivo di riferimento';
-- Create/Recreate primary, unique and foreign key constraints 
alter table IUF_T_TRAPPOLAGGIO
  add constraint FK_IUF_D_ORGANISMO_NOCIVO_08 foreign key (ID_ORGANISMO_NOCIVO)
  references iuf_d_organismo_nocivo (ID_ORGANISMO_NOCIVO);

alter table IUF_R_SPECIE_ON_PERIODO
  drop constraint UN_IUF_R_SPECIE_ON_PERIODO cascade;
alter table IUF_R_SPECIE_ON_PERIODO
  add constraint AK_IUF_R_SPECIE_ON_PERIODO unique (ID_SPECIE_VEGETALE, ID_ON_DA_MONITORARE, MESE_DI_MONITORAGGIO)
  using index 
  tablespace IUFFI_IDX;  
  
ALTER TABLE iuf_t_isp_visiva_pianta
ADD numero VARCHAR(10); 
comment on column iuf_t_isp_visiva_pianta.numero
  is 'codice/numero attribuito alla pianta per identificarla e per poteròa individuare al momento del taglio';
  

alter table IUF_R_ISP_VISIVA_SPEC_ON add flag_trovato varchar2(1)  null;
comment on column IUF_R_ISP_VISIVA_SPEC_ON.flag_trovato
  is 'FLAG S/N - Organismo nocivo trovato';
  
  update IUF_R_ISP_VISIVA_SPEC_ON
  set flag_trovato = 'N';
  
  commit;
  
  alter table IUF_R_ISP_VISIVA_SPEC_ON modify flag_trovato not null;
  
  ALTER TABLE IUF_R_ISP_VISIVA_SPEC_ON ADD (
  CONSTRAINT CK_FLAG_115
  CHECK (flag_trovato IN ('S','N')));  
  
alter table IUF_R_SPECIE_ON_PERIODO
  drop constraint AK_IUF_R_SPECIE_ON_PERIODO cascade;
  
alter table IUF_R_SPECIE_ON_PERIODO
  add constraint AK_IUF_R_SPECIE_ON_PERIODO unique (ID_SPECIE_VEGETALE, ID_ON_DA_MONITORARE, MESE_DI_MONITORAGGIO, ID_TIPO_CAMPIONE)
  using index 
  tablespace IUFFI_idx;  
  
alter table IUF_R_SPECIE_ON_PERIODO
  add constraint FK_IUF_D_TIPO_CAMPIONE_03 foreign key (ID_TIPO_CAMPIONE)
  references iuf_d_tipo_campione (ID_TIPO_CAMPIONE);  
  
-- Add/modify columns 
alter table IUF_T_RILEVAZIONE add ext_numero_aviv varchar2(20);
alter table IUF_T_RILEVAZIONE add cuaa varchar2(16);
alter table IUF_T_RILEVAZIONE add ext_id_ute number(10);
-- Add comments to the columns 
comment on column IUF_T_RILEVAZIONE.id_anagrafica
  is 'Riferimento all''ispettore che ha effettuato la rilevazione';
comment on column IUF_T_RILEVAZIONE.ext_numero_aviv
  is 'Numero autorizzazione aviv (sistema esterno)';
comment on column IUF_T_RILEVAZIONE.cuaa
  is 'Cuaa o codice azienda';
comment on column IUF_T_RILEVAZIONE.ext_id_ute
  is 'Id UTE (identificativo del centro aziendale relativo all''azienda)';
  
    
  
-- Script grants
declare
  
  Procedure CreateGrantToUser is
  TYPE tpUser IS RECORD (nomeUser  VARCHAR2(30),
  	   		   		     Comando   VARCHAR2(300));
						   
  TYPE typTbUser IS TABLE OF tpUser INDEX BY BINARY_INTEGER;						   
  
  tUser    typTbUser;
  
  begin
    tUser(1).nomeUser := 'IUFFI_RW';
    tUser(1).comando  := 'grant select,insert, update, delete on ';
	
	FOR i IN tUser.FIRST..tUser.LAST LOOP
	--grant sulle tabelle
    for c in ( 
       select tUser(i).comando||tb.table_name||' to '||tUser(i).nomeUser cmd from user_tables tb 
    ) loop
      execute immediate c.cmd;
    end loop;

    -- Grant sulle sequence
    for c in ( 
       select 'grant select,alter on '||se.sequence_name||' to '||tUser(i).nomeUser cmd from user_sequences se
    ) loop 
      execute immediate c.cmd;
    end loop;

    -- Grant su ProcedureFunzioniPackage
    for c in ( 
       select distinct 'grant execute on '||pr.object_name||' to '||tUser(i).nomeUser cmd from user_procedures pr 
    ) loop
      execute immediate c.cmd;
    end loop;
	
	-- Grant su types
    for c in ( 
       select distinct 'grant execute on '||pr.type_name||' to '||tUser(i).nomeUser cmd from user_types pr where pr.type_name not like '%SYS%' 
    ) loop
      execute immediate c.cmd;
    end loop;
	
	-- Grant su viste
    for c in ( 
       select distinct 'grant select on '||vi.view_name||' to '||tUser(i).nomeUser cmd from user_views vi 
    ) loop
      execute immediate c.cmd;
    end loop;
    
    end loop;
  end;                           
begin
  CreateGrantToUser;
end;
/

